# RFC 1034 中文翻译 (stub)
# 原文文件: ../../rfcs/RFCs1001-1500/rfc1034.txt

网络工作组                                     P. Mockapetris
意见征求稿：1034                                              ISI
废止：RFC 882、883、973                                1987年11月

                 域名——概念与功能

1. 本备忘录的状态

本RFC是关于域名系统（DNS）的介绍，省略了许多细节，这些细节可以在配套的RFC“域名——实现与规范” [RFC-1035] 中找到。该RFC假设读者已熟悉本文讨论的概念。

DNS的部分功能和数据类型构成了一个正式的协议。正式协议包括标准查询及其响应，以及大部分互联网类别的数据格式（例如主机地址）。

然而，域名系统具有故意的可扩展性。研究人员不断提出、实现并试验新的数据类型、查询类型、类别、功能等。因此，虽然正式协议的组成部分预计会基本保持不变并作为生产服务运行，但在正式协议之外的扩展中应始终预期存在试验性行为。试验性或过时的功能在这些RFC中已被明确标记，使用时应谨慎。

特别提醒读者不要依赖示例中出现的数值为最新或完整的，因为其主要目的是教学。本文的分发不受限制。

2. 引言

本RFC介绍域名样式、它们在互联网邮件和主机地址支持中的使用，以及实现域名功能所用的协议和服务器。

2.1 域名的历史

域名系统发展的动力来自互联网的增长：

- 主机名到地址的映射由网络信息中心（NIC）维护在一个单一文件（HOSTS.TXT）中，所有主机通过FTP获取该文件 [RFC-952, RFC-953]。通过这种方式分发新版本所消耗的网络带宽与网络中主机数量的平方成正比，即使使用多级FTP，NIC主机的出站FTP负载也相当大。主机数量的爆炸性增长对未来发展不利。

- 网络的组成也在变化。最初的ARPANET由时间共享主机组成，后来被工作站的局域网所取代。各个组织开始管理自己的名称和地址，但必须等待NIC更新HOSTS.TXT，才能让更改对整个互联网可见。各组织也希望在命名空间中拥有一定的本地结构。

互联网应用变得越来越复杂，催生了对通用名称服务的需求。

因此，出现了一些关于命名空间及其管理的想法[IEN-116, RFC-799, RFC-819, RFC-830]。这些提议各不相同，但共同的核心思想是采用层次化的命名空间，其层级大致对应组织结构，名称中用“.”字符来标示层级边界。在[RFC-882, RFC-883]中描述了一种使用分布式数据库和通用资源的设计方案。基于多次实现的经验，这个系统逐步演变成了本文所描述的方案。

“域”或“域名”这些术语在本文所述的DNS之外的许多场合也被使用。通常，域名一词用来指带有点结构的名称，但与DNS没有直接关系。这在邮件地址中尤为常见[Quarterman 86]。

2.2. DNS设计目标

DNS的设计目标影响其结构，主要包括：

- 主要目标是建立一个一致的命名空间，用于指代资源。为了避免由临时编码带来的问题，名称不应要求包含网络标识符、地址、路由或类似信息。

- 由于数据库规模庞大且更新频繁，必须采用分布式维护方式，并通过本地缓存提升性能。试图收集整个数据库的完整一致副本的方法将变得越来越昂贵且难以实现，因此应避免。相同原则也适用于命名空间的结构，尤其是创建和删除名称的机制，这些也应当是分布式的。

- 在获取数据的成本、更新速度和缓存准确性之间存在权衡时，数据的来源应决定这种权衡。

- 实现此类系统的成本要求其具有广泛的实用性，而不应局限于单一应用。我们应能用名称来检索主机地址、邮箱数据以及其他尚未确定的信息。与名称相关的所有数据都带有类型标签，查询也可以限制在某一特定类型内。

- 因为我们希望命名空间在不同的网络和应用中都能发挥作用，所以我们提供了在不同协议族或管理方式下使用相同命名空间的能力。例如，主机地址格式在不同协议之间有所差异，尽管所有协议都具有地址的概念。DNS会为所有数据标记类别（class）和类型（type），这样我们就可以允许以不同格式并行使用地址类型的数据。

- 我们希望域名服务器的事务与承载它们的通信系统相互独立。有些系统可能希望使用数据报（datagrams）进行查询和响应，只在需要可靠性的事务（如数据库更新、长事务）中建立虚拟电路；而其他系统则会完全使用虚拟电路。

- 系统应在广泛的主机能力范围内都能发挥作用。无论是个人计算机还是大型共享主机，都应能使用该系统，尽管使用方式可能不同。

2.3 使用假设

域系统的组织结构源于对其用户群体需求和使用模式的一些假设，旨在避免许多通用数据库系统中常见的复杂问题。

这些假设包括：

- 初期，整个数据库的规模将与使用该系统的主机数量成正比，但随着邮箱和其他信息的增加，最终会增长到与这些主机上的用户数量成正比。

- 系统中的大部分数据变化非常缓慢（例如邮箱绑定、主机地址），但系统应能够处理变化较快的子集（变化速度在秒或分钟级别）。

- 用于分配数据库责任的管理边界通常对应拥有一个或多个主机的组织。每个负责特定域集的组织将提供冗余的域名服务器，这些服务器可以部署在组织自己的主机上，或由组织安排使用的其他主机上。

- 域系统的客户端应能够在接受指向“受信任”域名服务器的推荐之前，识别出他们偏好的可信任域名服务器，以确保安全和可靠的查询。

- 获取信息比即时更新或保证一致性更为关键。因此，更新过程允许信息逐步传播到域系统的用户，而不是保证所有副本同时更新。当由于网络或主机故障导致无法进行更新时，通常的做法是相信旧信息，同时继续努力进行更新。一般模型是副本会被分发，并设有刷新超时。分发者设置超时时间，接收者负责执行刷新。在特殊情况下，可以指定非常短的间隔，或者所有者可以禁止副本。

- 在任何具有分布式数据库的系统中，某个特定的域名服务器可能会收到只能由其他服务器回答的查询。处理此问题的两种主要方法是“递归”方式，即第一个服务器为客户端在另一台服务器上追踪查询；以及“迭代”方式，即服务器将客户端引导到另一台服务器，让客户端自行追踪查询。这两种方法各有优缺点，但对于数据报风格的访问，优先采用迭代方式。域系统要求实现迭代方式，但也允许采用递归方式作为选项。

Mockapetris                                                     [第4页]

RFC 1034             域名概念与功能        1987年11月

域系统假设所有数据都源自散布在使用该域系统的主机上的主文件。这些主文件由本地系统管理员进行更新。主文件是文本文件，由本地域名服务器读取，因此可以通过域名服务器向域系统的用户提供。用户程序通过名为解析器的标准程序访问域名服务器。

主文件的标准格式允许它们在主机之间交换（通过FTP、邮件或其他机制）；当一个组织希望拥有一个域但不想自己维护域名服务器时，这一功能非常有用。该组织可以使用文本编辑器在本地维护主文件，然后将其传输到运行域名服务器的远程主机，并与该主机的系统管理员协商加载这些文件。

每台主机的域名服务器和解析器由本地系统管理员配置 [RFC-1033]。对于域名服务器，这些配置数据包括本地主文件的身份信息以及从远程服务器加载非本地主文件的指令。域名服务器使用主文件或其副本来加载其区域。对于解析器，配置数据则指定应作为主要信息源的域名服务器。

域名系统定义了访问数据的程序以及转发到其他域名服务器的流程。域名系统还定义了缓存已检索数据的程序以及由系统管理员设定的数据定期刷新流程。

系统管理员提供：

- 区域边界的定义。
- 数据的主文件。
- 对主文件的更新。
- 所需的刷新策略声明。

域名系统提供：

- 资源数据的标准格式。
- 查询数据库的标准方法。
- 域名服务器从外部域名服务器刷新本地数据的标准方法。

Mockapetris                                                      [第5页]

RFC 1034             域名概念与功能        1987年11月

2.4. DNS的组成要素

DNS主要由三个部分组成：

- 域名空间和资源记录，它们是关于树状结构的命名空间及其相关数据的规范。从概念上讲，域名空间树的每个节点和叶子都代表一组信息，查询操作则试图从特定集合中提取特定类型的信息。查询会指定感兴趣的域名，并描述所需的资源信息类型。例如，互联网使用部分域名来标识主机；对地址资源的查询会返回互联网主机的地址。

- 域名服务器是存储关于域名树结构和集合信息的服务器程序。域名服务器可以缓存关于域名树任何部分的结构或集合信息，但通常一个特定的域名服务器对域空间的某一子集拥有完整信息，并指向其他域名服务器以获取域树任何部分的信息。域名服务器知道自己拥有完整信息的域名空间部分；这些部分被称为“权威区域”。权威信息被组织成称为“区域”的单元，这些区域可以自动分发给提供冗余服务的域名服务器，以确保数据的可靠性。

- 解析器是响应客户端请求，从域名服务器提取信息的程序。解析器必须能够访问至少一个域名服务器，并利用该服务器的信息直接回答查询，或通过转发到其他域名服务器来追踪查询。通常，解析器是系统中的例程，用户程序可以直接调用，因此解析器与用户程序之间不需要协议。

从用户的角度来看，域名系统通过一个简单的程序或操作系统调用本地解析器来访问。域空间由一棵树组成，用户可以从树的任何部分请求信息。

从解析器的角度来看，域名系统由若干未知数量的域名服务器组成。每个域名服务器拥有整个域树数据的一个或多个部分，但解析器将这些数据库视为基本静态的。

从域名服务器的角度来看，域名系统由一组称为区域（zones）的本地信息集组成。域名服务器拥有部分区域的本地副本，并且必须定期从主副本（存放在本地文件或其他域名服务器上）刷新其区域数据。同时，域名服务器还需要同时处理来自解析器的查询请求。

为了提高性能，系统实现可以将这些功能结合起来。例如，运行在同一台机器上的解析器和域名服务器可以共享一个数据库，该数据库包括由域名服务器管理的区域和由解析器管理的缓存。

3. 域名空间与资源记录

3.1 域空间的规范与术语

域名空间是一个树状结构。树上的每个节点和叶子都对应一个资源集（可能为空）。域名系统不区分内部节点和叶子节点的用途，本文档使用“节点”一词同时指代两者。

每个节点都有一个标签，长度为0到63个八位字节。兄弟节点的标签不能相同，但不同兄弟节点可以使用相同的标签。一个标签是保留的，即用于根节点的空标签（长度为零的标签）。

节点的域名是从该节点到树根路径上所有标签的列表。按照惯例，组成域名的标签从左到右打印或读取，即从最具体（离根最远）到最不具体（离根最近）。

在程序内部，操作域名的程序应将其表示为标签序列，每个标签由一个长度字节和一个八位字节字符串组成。由于所有域名都以根节点结束，根节点的标签为空字符串，因此内部表示可以用长度字节为零来终止域名。

按照惯例，域名可以以任意大小写存储，但所有现有域功能中的域名比较都是以不区分大小写的方式进行的，假设使用ASCII字符集，并且最高位为零。这意味着你可以自由地创建标签为“A”或“a”的节点，但不能同时作为兄弟节点存在；你可以用“A”或“a”来引用其中任何一个。当你接收到一个域名或标签时，应保持其原有的大小写。这样做的理由是，未来可能需要为新服务添加完整的二进制域名；而现有的服务不会受到影响。

当用户需要输入域名时，每个标签的长度会被省略，标签之间用点（"."）分隔。由于完整的域名以根标签结尾，这会导致打印出的形式以点结尾。我们利用这一特性来区分：

- 表示完整域名的字符字符串（通常称为“绝对”域名），例如“poneria.ISI.EDU.”；
- 表示域名起始标签的字符字符串，尚未完整，应该由本地软件根据本地域的知识补全（通常称为“相对”域名），例如在ISI.EDU域中使用的“poneria”。

相对名称要么以一个已知的起点为参考，要么以作为搜索列表的域名列表为参考。相对名称主要出现在用户界面中，其解释因实现而异，也出现在主文件中，那里它们相对于单一的起点域名。最常见的解释是将根“.”作为唯一的起点或搜索列表中的成员，因此多标签的相对名称通常省略了末尾的点以节省输入。

为了简化实现，表示域名的总字节数（即所有标签字节和标签长度的总和）限制为255个。

域由域名标识，包括域名空间中该域名及其以下的部分。若某域名包含在另一个域名中，则称其为该域名的子域。例如，A.B.C.D是B.C.D、C.D、D以及空域（“”）的子域。判断方法是看子域名是否以包含域的域名作为后缀。

作为一项政策，DNS的技术规范并未规定特定的树状结构或标签选择规则；其目标是尽可能通用，以便可以用来构建任意的应用程序。特别是，系统的设计使得命名空间不必按照网络边界、域名服务器等线索进行组织。这样做的理由并不是说命名空间应当没有隐含的语义，而是希望隐含语义的选择留给使用者自行决定，不同部分的树可以具有不同的隐含语义。例如，IN-ADDR.ARPA域是按照网络和主机地址进行组织和分发的，因为它的作用是将网络或主机编号转换为名称；NetBIOS域（[RFC-1001, RFC-1002]）则是扁平的，因为这适合该应用。

然而，对于用于主机、邮箱等“正常”部分的命名空间，有一些指导原则可以使命名空间更为统一，便于增长，并在软件从旧的主机表迁移时减少问题。这些关于树顶层的政治决策起源于RFC-920。目前关于顶层结构的政策在[RFC-1032]中有所讨论。MILNET迁移相关的问题则在[RFC-1031]中涉及。

那些最终会被拆分成多个区域的下层域，应在域的顶部提供分支，以便将来的拆分可以在不更改名称的情况下完成。使用特殊字符、前导数字等的节点标签，可能会破坏依赖更严格规则的旧软件。

3.3. 使用的技术指南

在DNS被用来存储某类对象的命名信息之前，必须满足两个条件：

- 对象名称与域名之间的映射规范。这描述了如何访问关于某个对象的信息。

- 描述该对象的RR类型和数据格式。

这些规则可以非常简单，也可以相当复杂。通常，设计者必须考虑现有的格式，并为现有用法的向上兼容性做出规划。可能需要多重映射或多层映射。

对于主机，映射依赖于现有的主机名语法，这通常是域名常用文本表示的子集，以及描述主机地址等的RR格式。由于我们需要从地址到主机名的可靠逆向映射，还定义了将地址映射到IN-ADDR.ARPA域的特殊映射。

关于邮箱，映射方式稍微复杂一些。通常的邮箱地址 <local-part>@<mail-domain> 会被转换成一个域名，方法是将 <local-part> 转换成一个单一标签（不管其中包含多少点），将 <mail-domain> 转换成符合域名文本格式的域名（点表示标签的分隔），然后将两者连接起来形成一个完整的域名。因此，邮箱

Mockapetris                                                     [第9页]

RFC 1034             域的概念与功能        1987年11月

HOSTMASTER@SRI-NIC.ARPA 被表示为域名时为 HOSTMASTER.SRI-NIC.ARPA。理解这种设计背后的原因，还必须考虑邮件交换的方案 [RFC-974]。

普通用户通常不关心这些规则的定义，但应理解这些规则通常是多种妥协的结果，包括对向后兼容旧用法的需求、不同对象定义之间的交互，以及在定义规则时不断加入新功能的冲动。DNS 支持某个对象的使用方式，往往比DNS本身固有的限制更为关键。

3.4. 示例名称空间

下图展示了当前域名空间的一部分，并在本RFC的许多示例中使用。请注意，这棵树只是实际名称空间的一个非常小的子集。

                                   |
                                   |
             +---------------------+------------------+
             |                     |                  |
            MIL                   EDU                ARPA
             |                     |                  |
             |                     |                  |
       +-----+-----+               |     +------+-----+-----+
       |     |     |               |     |      |           |
      BRL  NOSC  DARPA             |  IN-ADDR  SRI-NIC     ACC
                                   |
       +--------+------------------+---------------+--------+
       |        |                  |               |        |
      UCI      MIT                 |              UDEL     YALE
                |                 ISI
                |                  |
            +---+---+              |
            |       |              |
           LCS  ACHILLES  +--+-----+-----+--------+
            |             |  |     |     |        |
           XX            A  C   VAXA  VENERA Mockapetris

在这个例子中，根域有三个直接子域：MIL、EDU 和 ARPA。LCS.MIT.EDU 域有一个直接子域，名为 XX.LCS.MIT.EDU。所有的叶子节点也是域。

3.5. 首选名称语法

DNS 规范试图在规则上尽可能通用

Mockapetris                                                    [第10页]

RFC 1034             域的概念与功能        1987年11月

用于构建域名。其思想是，任何现有对象的名称都可以通过最少的更改表达为一个域名。然而，在为一个对象分配域名时，谨慎的用户会选择一个既符合域名系统规则，又符合该对象的任何现有规则（无论这些规则是公开的还是由现有程序暗示的） 的名称。

例如，在命名邮件域时，用户应同时满足本备忘录的规则和RFC-822中的规则。在创建新的主机名时，应遵循旧的HOSTS.TXT规则。这可以避免在将旧软件转换为使用域名时出现的问题。

以下语法将减少许多使用域名的应用（如邮件、TELNET）出现的问题：

<domain> ::= <subdomain> | " "

<subdomain> ::= <label> | <subdomain> "." <label>

<label> ::= <letter> [ [ <ldh-str> ] <let-dig> ]

<ldh-str> ::= <let-dig-hyp> | <let-dig-hyp> <ldh-str>

<let-dig-hyp> ::= <let-dig> | "-"

<let-dig> ::= <letter> | <digit>

<letter> ::= 任何一个字母字符A-Z（大写）或a-z（小写）

<digit> ::= 任何一个数字0-9

注意，虽然域名中允许使用大小写字母，但大小写没有区别。也就是说，拼写相同但大小写不同的两个名称应被视为相同。

标签必须遵循ARPANET主机名的规则。它们必须以字母开头，以字母或数字结尾，且内部字符只能是字母、数字和连字符。此外，标签的长度也有限制：不得超过63个字符。

例如，以下字符串标识互联网中的主机：

A.ISI.EDU  XX.LCS.MIT.EDU  SRI-NIC.ARPA

3.6  资源记录

域名标识一个节点。每个节点都具有一组资源信息，这些信息可以为空。与特定名称相关联的资源信息集由多个资源记录（RRs）组成。RRs的顺序没有关系，也不需要由域名服务器、解析器或DNS的其他部分保持。

当我们谈论某个特定的RR时，假设它具有以下内容：

owner           即该RR所在的域名。

type            一个编码的16位值，指定该资源记录中资源的类型。类型指的是抽象资源。

本备忘录使用的类型包括：

A               主机地址

CNAME           识别别名的规范名称

HINFO           识别主机使用的CPU和操作系统

MX 记录标识域的邮件交换服务器。详见 [RFC-974]。

NS 记录是域的权威名称服务器。

PTR 记录是指向域名空间中另一部分的指针。

SOA 记录标识一个区域的起始点。

类（class）是一个编码的16位值，用于标识协议族或协议实例。

本备忘录使用的类包括：

IN 代表互联网系统。

CH 代表混沌（Chaos）系统。

TTL（生存时间）是资源记录（RR）的存活时间。这个字段是一个32位的整数，单位为秒，主要由解析器在缓存RR时使用。TTL描述了一个RR可以被缓存多长时间，超过这个时间后应当丢弃。

Mockapetris                                                    [第12页]

RFC 1034             域名概念与功能        1987年11月

RDATA（资源数据）是依赖于类型，有时也依赖于类别的数据，用于描述资源：

A 记录：对于IN类别，是一个32位的IP地址。

CNAME 记录：是一个域名。

MX 记录：包含一个16位的优先级值（数值越低越好），以及一个愿意作为邮件交换的主机名。

NS 记录：是一个主机名。

PTR 记录：是一个域名。

SOA 记录：包含多个字段。

所有者名称（Owner Name）通常是隐含的，而不是RR的组成部分。例如，许多域名服务器在内部为命名空间建立树状或哈希结构，并在节点上链式存放RR。其余的RR部分是固定的头部（类型、类别、TTL），对所有RR都是一致的，以及根据所描述资源需要的可变部分（RDATA）。

TTL字段的含义是资源记录在缓存中可以保存的时间限制。这个限制不适用于区域中的权威数据；权威数据也会超时，但由区域的刷新策略控制。TTL由数据源所在区域的管理员设置。虽然可以使用较短的TTL以减少缓存时间，甚至设置为零以禁止缓存，但考虑到互联网的性能，通常建议TTL的时间应为几天左右。如果预期会有变更，可以在变更前缩短TTL以减少不一致，然后在变更后将TTL恢复到原值。

RR的RDATA部分以二进制字符串和域名的组合形式携带。域名通常用作指向DNS中其他数据的“指针”。

3.6.1. RR的文本表达

在DNS协议的数据包中，RR以二进制形式表示，存储在域名服务器或解析器中时通常以高度编码的形式呈现。在本备忘录中，我们采用类似于主文件中使用的风格，以显示RR的内容。在这种格式中，大多数RR在一行内显示，虽然也可以使用括号换行。

行的开头显示RR的所有者（owner）。如果行以空格开始，则假定所有者与前一个RR相同。为了便于阅读，常会插入空行。

在所有者之后，我们列出TTL、类型（type）和类别（class）。类别和类型使用上文定义的助记符，TTL是类型字段前的整数。为了避免解析时的歧义，类别和类型的助记符是互不重叠的，TTL为整数，类型助记符总是最后出现。出于清晰起见，示例中通常省略IN类别和TTL值。

RR的资源数据（RDATA）部分根据数据的典型表示方式给出。

例如，我们可能会显示在消息中携带的RR如下：

```
    ISI.EDU.        MX      10 VENERA.ISI.EDU.
                    MX      10 VAXA.ISI.EDU.
    VENERA.ISI.EDU. A       128.9.0.32
                    A       10.1.0.52
    VAXA.ISI.EDU.   A       10.2.0.27
                    A       128.9.0.33
```

MX类型的RR的RDATA部分由一个16位数字和一个域名组成。地址RR使用标准的IP地址格式，包含一个32位的互联网地址。

这个例子显示了六个RR，三个域名下各有两个RR。

类似地，我们也可能看到：

```
    XX.LCS.MIT.EDU. IN      A       10.0.0.44
                    CH      A       MIT.EDU. 2420
```

这个例子显示了XX.LCS.MIT.EDU的两个不同类别的地址。

3.6.2. 别名和规范名称

在现有系统中，主机和其他资源常常有多个名称，用以标识同一资源。例如，C.ISI.EDU和USC-ISIC.ARPA两个名称都指向同一台主机。同样，在邮箱的情况下，许多组织提供多个名称，实际上都指向同一个邮箱；例如，Mockapetris@C.ISI.EDU、Mockapetris@B.ISI.EDU和PVM@ISI.EDU都指向同一个邮箱（尽管其背后的机制相对复杂）。

大多数这些系统都认为，一组等价的名称中，有一个被称为规范名或主名称，其他的则是别名。

域名系统提供了这样一个功能，即使用规范名（CNAME）资源记录（RR）。CNAME RR将其所有者名称标识为别名，并在RR的RDATA部分指定相应的规范名。如果某个节点上存在CNAME RR，则不应存在其他数据；这确保了规范名及其别名的数据不会不同。这条规则还保证了缓存中的CNAME可以在不向权威服务器查询其他RR类型的情况下使用。

CNAME RR在DNS软件中会引发特殊的处理。当名称服务器在与某个域名相关联的资源集中找不到所需的RR时，它会检查该资源集是否包含匹配类别的CNAME记录。如果是，名称服务器会在响应中包含该CNAME记录，并重新开始查询，目标为CNAME记录中的数据字段所指定的域名。唯一的例外是，匹配CNAME类型的查询不会重新启动。

例如，假设一个名称服务器正在处理一个查询，查询内容为USC-ISIC.ARPA的A记录信息，且该服务器拥有以下资源记录：

```
USC-ISIC.ARPA   IN      CNAME   C.ISI.EDU
C.ISI.EDU       IN      A       10.0.0.52
```

在对A类型的查询中，这两个RR都会被返回，而对于CNAME类型或“*”通配符的查询，则只返回CNAME。

在RR中指向另一个名称的域名应始终指向主名称，而非别名。这可以避免在访问信息时出现额外的间接性。例如，上述主机的地址到名称的RR应为：

```
52.0.0.10.IN-ADDR.ARPA  IN      PTR     C.ISI.EDU
```

而不是指向USC-ISIC.ARPA。当然，根据鲁棒性原则，域名软件在遇到CNAME链或环时不应失败；应跟随CNAME链，并将CNAME环作为错误信号。

3.7. 查询

查询是可以发送给名称服务器以引发响应的消息。在互联网中，查询通过UDP数据报或TCP连接传输。名称服务器的响应要么回答查询中提出的问题，要么将请求者引导到其他一组名称服务器，或者指示某些错误条件。

通常，用户不会直接生成查询，而是向解析器发出请求，解析器再向名称服务器发送一个或多个查询，并处理可能出现的错误条件和转发。当然，查询中可以提出的问题类型会影响解析器能提供的服务类型。

DNS 查询和响应采用标准的消息格式。该消息格式包含一个头部，头部中有一些始终存在的固定字段，以及四个部分，用于携带查询参数和资源记录（RRs）。

在头部中，最重要的字段是一个四位的操作码（opcode），用于区分不同的查询类型。在可能的16个值中，标准查询（standard query）是官方协议的一部分，另外两个（逆向查询和状态查询）是可选的，一个（完成）已废弃，其余未分配。

这四个部分是：

问答部分（Question）：携带查询的域名（QNAME）和其他查询参数。

回答部分（Answer）：携带直接回答查询的资源记录（RRs）。

权威部分（Authority）：携带描述其他权威服务器的资源记录。也可以选择性地携带权威数据的起始授权（SOA）RR，用于回答部分中的权威信息。

附加部分（Additional）：携带在使用其他部分的资源记录时可能有帮助的资源记录。

注意，这些部分的内容（但不是格式）会根据头部中的操作码而变化。

3.7.1. 标准查询

标准查询指定目标域名（QNAME）、查询类型（QTYPE）和查询类别（QCLASS），并请求匹配的资源记录（RRs）。这种类型的查询在DNS查询中占据绝大多数，因此除非另有说明，否则“查询”一词通常指标准查询。QTYPE和QCLASS字段各为16位，涵盖了定义的类型和类别的超集。

QTYPE字段可能包含：

- <任何类型>：匹配该类型的所有记录（例如，A、PTR）。

- AXFR：特殊的区域传输查询类型。

- MAILB：匹配所有与邮箱相关的RR（如MB和MG）。

- *：匹配所有RR类型。

QCLASS字段可能包含：

- <任何类别>：仅匹配该类别（例如，IN、CH）。

- *：匹配所有RR类别。

使用查询的域名（QNAME）、QTYPE和QCLASS，域名服务器会查找匹配的资源记录。除了相关的记录外，域名服务器还可能返回指向拥有所需信息的其他域名服务器的记录，或返回在解释相关RR时可能有用的RR。例如，一个没有所请求信息的域名服务器可能知道一个拥有该信息的域名服务器；返回某个相关RR中的域名的域名服务器，也可能会返回将该域名绑定到地址的RR。

例如，一个试图向Mockapetris@ISI.EDU发送邮件的邮件服务器，可能会向解析器请求关于ISI.EDU的邮件信息，产生的查询为：QNAME=ISI.EDU，QTYPE=MX，QCLASS=IN。响应的回答部分可能如下：

```
    ISI.EDU.        MX      10 VENERA.ISI.EDU.
                    MX      10 VAXA.ISI.EDU.
```

而附加部分可能会包含：

以下是英文内容的中文翻译：

```
    VAXA.ISI.EDU.   A       10.2.0.27
                    A       128.9.0.33
    VENERA.ISI.EDU. A       10.1.0.52
                    A       128.9.0.32

因为服务器假设如果请求者想要邮件交换信息，可能也会很快想要获取邮件交换的地址。

请注意，QCLASS=* 构造需要对权威性进行特殊解释。由于某个特定的名称服务器可能不知道域系统中所有可用的类别，因此它永远无法确定自己是否对所有类别都具有权威性。因此，对QCLASS=*查询的响应永远不能被视为权威的。

Mockapetris                                                    [第17页]

RFC 1034             域名概念与功能        1987年11月

3.7.2. 逆向查询（可选）

名称服务器也可以支持逆向查询，即将某个资源映射到具有该资源的域名或域名。例如，标准查询可能将域名映射到一个SOA资源记录（RR），而相应的逆向查询则可能将该SOA RR映射回域名。

实现此服务在名称服务器中是可选的，但所有名称服务器至少必须能够理解逆向查询消息并返回“未实现”错误响应。

域系统不能保证逆向查询的完整性或唯一性，因为域系统是按域名组织的，而不是按主机地址或其他资源类型组织的。逆向查询主要用于调试和数据库维护活动。

逆向查询可能不会返回正确的TTL，也不表示所识别的RR是某一组中的一个（例如，一个主机有多个地址时的其中一个地址）。因此，逆向查询返回的RR不应被缓存。

逆向查询不是将主机地址映射到主机名的可接受方法；应使用IN-ADDR.ARPA域。

关于逆向查询的详细讨论请参见[RFC-1035]。

3.8. 状态查询（实验性）

待定义。

3.9. 完成查询（已废弃）

在RFC 882和883中描述的可选完成服务已被删除。未来可能会提供重新设计的服务，或者这些操作码可能被回收用于其他用途。

4. 服务器

4.1. 简介

名称服务器是组成域名数据库的信息存储库。该数据库被划分为称为区域（zones）的部分，这些区域分布在不同的名称服务器上。虽然名称服务器可以具有多种可选功能和数据来源，但其基本任务是使用其区域中的数据来回答查询。设计上，

名称服务器可以以简单的方式回答查询；其响应总是可以仅使用本地数据生成，要么包含问题的答案，要么指向“更接近”所需信息的其他名称服务器的引用。

一个给定的区域（zone）将由多个名称服务器提供，以确保其在主机或通信链路故障时仍然可用。根据管理规定，我们要求每个区域至少在两个服务器上可用，许多区域的冗余度甚至更高。

一个名称服务器通常支持一个或多个区域，但这只赋予它关于域名树中一小部分的权威信息。它也可能缓存一些关于其他部分的非权威数据。名称服务器会标记其对查询的响应，以便请求者能够判断该响应是否来自权威数据。

4.2 数据库如何划分为区域

域名数据库的划分方式有两种：按类别（class）划分，以及在节点之间的“切割”点划分。

类别划分很简单。任何类别的数据库都是单独组织、委托和维护的，与其他类别的数据库相互独立。由于惯例，所有类别的命名空间是相同的，因此可以将不同类别视为一组平行的命名空间树。需要注意的是，附加在节点上的数据对于不同的类别会有所不同。创建新类别的最常见原因包括：需要为现有类型引入新的数据格式，或希望对现有命名空间进行单独管理。

在一个类别内，可以在两个相邻节点之间进行“切割”。所有切割完成后，连接在一起的命名空间组就形成了一个独立的区域。该区域被认为对其中所有的名称具有权威性。需要注意的是，不同类别的命名空间中的“切割”位置可能不同，名称服务器也可能不同，等等。

这些规则意味着每个区域至少有一个节点，因此也有一个域名，区域对其具有权威性。区域内的所有节点都是相连的。考虑到树结构，每个区域都有一个最高节点，该节点比区域内的任何其他节点都更接近根节点。这个节点的名称通常用来标识该区域。

虽然可以将命名空间划分得每个域名都在不同的区域，或者所有节点都在一个区域，但这并不特别有用。相反，数据库的划分点通常是某个组织希望接管控制权的子树的地方。一旦一个组织控制了自己的区域，它就可以单方面更改区域内的数据，扩展连接到该区域的新树段，删除现有节点，或在其区域下委托新的子区域。

如果组织结构中存在子结构，可能希望进行进一步的内部划分，以实现命名空间控制的嵌套委托。在某些情况下，这些划分纯粹是为了方便数据库的维护。

4.2.1. 技术考虑因素

描述区域（zone）所用的数据主要包括四个部分：

- 区域内所有节点的权威数据。

- 定义区域顶端节点的数据（可以视为权威数据的一部分）。

- 描述委托子区域（即区域底部的划分）的数据。

- 允许访问子区域名称服务器的数据（有时称为“胶水”数据）。

所有这些数据都以资源记录（RRs）的形式表达，因此可以用一组RRs完全描述一个区域。整个区域可以通过传输RRs来在名称服务器之间进行转移，可以通过一系列消息传递，或通过FTP传输一个文本格式的主文件。

区域的权威数据就是从区域的顶端节点到叶节点或底部划分边缘上方节点的所有RRs。

虽然在逻辑上属于权威数据，但描述区域顶端节点的RRs对于区域管理尤为重要。这些RRs有两种类型：列出区域所有服务器的名称服务器RRs（每个RR对应一个服务器），以及描述区域管理参数的单一SOA RR。

描述区域底部划分的RRs是NS RR，它们指明子区域的服务器。由于划分发生在节点之间，这些RRs不属于区域的权威数据，且应与子区域顶端节点的对应RRs完全一致。由于名称服务器总是与区域边界相关联，NS RRs只在某些节点（即某个区域的顶端节点）出现。在组成区域的数据中，NS RRs出现在区域的顶端节点（具有权威性）以及底部划分的边缘（不具有权威性），但不会出现在两者之间。

区域结构的目标之一是确保任何区域都拥有与其子区域的名称服务器建立通信所需的全部数据。也就是说，父区域应具备访问其子区域服务器所需的所有信息。用于指示子区域服务器的NS资源记录（RRs）通常不足以完成此任务，因为它们只标明了服务器的名称，但未提供其地址。特别是当名称服务器的名称本身位于子区域内时，可能会出现一种情况：NS RRs告诉我们，为了获取某个名称服务器的地址，必须用我们希望了解的地址来联系该服务器。这就造成了“自引用”的问题。为了解决这个问题，区域中会包含“粘合”RRs，这些不是权威数据的一部分，而是服务器地址的RRs。只有当名称服务器的名称“在”切割点以下时，这些粘合RRs才是必要的，并且它们只在作为引用响应的一部分时使用。

4.2.2 管理方面的考虑

当某个组织希望控制自己的域名时，第一步是确定合适的父区域，并让父区域的所有者同意进行委托控制。虽然在树状结构中进行此操作没有特定的技术限制，但在[RFC-1032]中讨论了一些关于顶层组织的管理分组，而中间层区域则可以自行制定规则。例如，一所大学可能选择使用单一区域，而另一所大学可能会选择按部门或学院划分子区域。[RFC-1033]列出了可用的DNS软件并讨论了管理程序。

一旦为新子区域选择了合适的名称，新的所有者应被要求证明其具备冗余的名称服务器支持。请注意，没有规定区域的服务器必须位于具有该域名的主机中。在许多情况下，如果区域的服务器分布广泛，而不是集中在由同一组织管理的物理设施内，区域对互联网的访问会更为便捷。例如，在当前的DNS中，英国（UK）域的一个名称服务器位于美国。这使得美国的主机可以在不占用有限的跨大西洋带宽的情况下获取英国的数据。

作为最后的安装步骤，应将委托用的NS RRs和粘合RRs添加到父区域，以确保委托的有效性。两个区域的管理员应确保标记“切割点”两端的NS和粘合RRs保持一致，并保持一致性。

4.3 名称服务器内部结构

Mockapetris                                                    [第21页]

RFC 1034             域名概念与功能        1987年11月

4.3.1 查询与应答

名称服务器的主要活动是回答标准查询。查询及其响应都采用一种标准的消息格式，详见[RFC-1035]。查询包含一个QTYPE（查询类型）、QCLASS（查询类别）和QNAME（查询名称），用以描述所需信息的类型和类别，以及感兴趣的名称。

名称服务器回答查询的方式取决于其是否在递归模式下运行：

- 对服务器而言，最简单的模式是非递归模式，因为它只能使用本地信息来回答查询：响应可能包含错误、答案，或指向“更接近”答案的其他服务器的转发。所有名称服务器都必须实现非递归查询。

- 对客户端而言，最简单的模式是递归模式，因为在这种模式下，名称服务器充当解析器的角色，返回的要么是错误，要么是答案，但绝不返回转发。这项服务在名称服务器中是可选的，且名称服务器可以选择限制哪些客户端可以使用递归模式。

递归服务在以下几种情况下非常有用：

- 请求者相对简单，只能直接获得答案，无法使用其他方式。

- 需要跨越协议或其他边界的请求，可以将请求发送到能充当中介的服务器。

- 网络中希望集中缓存，而不是为每个客户端设置单独的缓存。

如果请求者能够追踪转发信息，并对未来的请求感兴趣，则非递归服务更为合适。

递归模式的使用仅在客户端和名称服务器都同意的情况下进行。双方通过查询和响应消息中的两个比特位进行协商：

- 递归可用位（RA位）由名称服务器在所有响应中设置或清除。如果该位为真，表示名称服务器愿意为客户端提供递归服务，无论客户端是否请求递归。也就是说，RA信号表示递归服务的可用性，而不是请求的使用。

- 查询中包含一个名为“是否希望递归”或RD（Recursion Desired）的比特。该比特指明请求者是否希望获得递归服务。客户端可以向任何名称服务器请求递归服务，但应只依赖那些之前已发送RA或已通过私下协议或其他非DNS协议方式同意提供递归服务的服务器。

当带有RD（递归请求）标志的查询到达一个愿意提供递归服务的服务器时，就会发生递归模式；客户端可以通过检查回复中是否同时设置了RA（递归可用）和RD（递归请求）来验证是否使用了递归模式。请注意，除非明确请求，名称服务器不应执行递归服务，因为这会干扰名称服务器及其数据库的故障排查。

如果请求了递归服务且递归服务可用，针对查询的递归响应将是以下几种情况之一：

- 对查询的答案，可能会在答案前面附加一个或多个CNAME资源记录（RRs），这些记录指示在找到答案的过程中遇到的别名。

- 表示该名称不存在的名称错误（name error）。这可能包括指示原始查询名称是不存在的别名的CNAME RRs。

- 临时错误指示。

如果未请求递归服务或递归服务不可用，非递归响应将是以下几种情况之一：

- 表示该名称不存在的权威名称错误。

- 临时错误指示。

- 以及一些组合：

  - 回答问题的RRs，以及指示数据是否来自区域（zone）或缓存的标志。

  - 指向具有比发送回复的服务器更接近的祖先区域的名称服务器的转发（referral）。

  - 服务器认为对请求者有用的RRs。

---

**4.3.2 算法**

名称服务器实际使用的算法将取决于本地操作系统和用于存储RRs的数据结构。以下算法假设RRs被组织在多个树结构中，每个区域（zone）一个，以及一个用于缓存的结构：

1. 根据名称服务器是否愿意提供递归服务，设置或清除响应中的递归可用（recursion available）标志。如果递归服务可用且在查询中通过RD位请求，则跳转到第5步，否则跳转到第2步。

2. 在可用区域中搜索与QNAME（查询名）最近的祖先区域。如果找到这样的区域，跳转到第3步，否则跳转到第4步。

3. 开始逐标签匹配区域中的节点。匹配过程可能以多种方式终止：

   a. 如果整个QNAME都匹配，则已找到节点。

      - 如果该节点的数据是CNAME，并且QTYPE（查询类型）不匹配CNAME，则将CNAME RR复制到响应的答案部分，将QNAME更改为CNAME RR中的规范名（canonical name），然后返回第1步。

      - 否则，将所有匹配QTYPE的RR复制到答案部分，并跳转到第6步。

b. 如果匹配会导致我们偏离权威数据，则需要进行转发。当我们遇到一个节点，其NS资源记录（RRs）标记了区域底部的切割点时，就会发生这种情况。

将子区域的NS资源记录复制到应答的权威部分。将可用的地址放入附加部分，如果没有从权威数据或缓存中获得地址，则使用Glue资源记录。然后进入第4步。

c. 如果在某个标签处，匹配变得不可能（即，所对应的标签不存在），则检查是否存在“*”标签。

如果不存在“*”标签，检查我们要查找的名称是否是查询中的原始QNAME，或者是由于CNAME跟随而来的名称。如果是原始名称，则在应答中设置一个权威性名称错误，并退出。否则，直接退出。

如果存在“*”标签，则在该节点匹配RRs与QTYPE。如果有任何匹配，将它们复制到答案部分，但将RR的所有者设置为QNAME，而不是带有“*”标签的节点。然后进入第6步。

4. 开始在缓存中向下匹配。如果在缓存中找到QNAME，则将所有与QTYPE匹配的RRs复制到答案部分。如果没有来自权威数据的委托信息，则从缓存中选择最优的一个放入权威部分。然后进入第6步。

5. 使用本地解析器或其算法的副本（参见本备忘录的解析器部分）来回答查询。将结果（包括任何中间的CNAME）存储在应答的答案部分。

6. 仅使用本地数据，尝试添加其他可能对查询附加部分有用的RRs。然后退出。

4.3.3. 通配符

在前述算法中，对以“*”标签开头的所有者名称的RRs给予了特殊处理。这类RR被称为通配符RR。通配符RR可以被视为合成RR的指令。当满足适当条件时，名称服务器会创建所有者名称等于查询名称、内容取自通配符RR的RRs。

该设施通常用于创建一个区域，用于将来自互联网的邮件转发到其他邮件系统。一般的想法是，任何在该区域中出现的名称，在被查询时，默认会被假定存在，并具有某些属性，除非有明确的证据表明相反。请注意，这里使用“区域（zone）”一词而非“域（domain）”是有意的；此类默认值不会跨区域边界传播，尽管子区域可以通过设置类似的默认值来实现这种效果。

通配符资源记录（RR）的内容遵循资源记录的常规规则和格式。区域中的通配符具有一个所有者名称，控制它们匹配的查询名称。通配符RR的所有者名称格式为“*.<任何域名>”，其中<任何域名>可以是任何域名。<任何域名>不应包含其他“*”标签，并且应在该区域的权威数据中。通配符可能适用于<任何域名>的后代，但不适用于<任何域名>本身。换句话说，星号标签（*）总是匹配至少一个完整的标签，有时会匹配多个标签，但始终是完整的标签。

通配符RR不适用的情况包括：

- 当查询在另一个区域中时。也就是说，委托会取消通配符的默认应用。

- 当查询名称或位于通配符域名与查询名称之间的名称已知存在时。例如，如果一个通配符RR的所有者名称为“*.X”，且该区域还包含附加到B.X的RR，则通配符会应用于对Z.X的查询（假设没有关于Z.X的明确信息），但不应用于B.X、A.B.X或X。

在查询名称中出现的“*”标签没有特殊效果，但可以用来测试权威区域中的通配符；只有通过此类查询，才能获得包含“*”的所有者名称的RR的响应。此类查询的结果不应被缓存。

请注意，使用通配符RR合成RR时，其内容不会被修改。

为了说明通配符RR的用法，假设一个大型公司拥有一个庞大的非IP/TCP网络，想要创建一个邮件网关。如果该公司名为X.COM，且IP/TCP能力的网关机器名为A.X.COM，则可以在COM区域中输入以下RR：

```
X.COM           MX      10      A.X.COM

*.X.COM         MX      10      A.X.COM

A.X.COM         A       1.2.3.4
A.X.COM         MX      10      A.X.COM

*.A.X.COM       MX      10      A.X.COM
```

这将导致对任何以X.COM结尾的域名的MX查询返回指向A.X.COM的MX资源记录。由于在A.X.COM子树中，*.X.COM的通配符资源记录的效果会被A.X.COM的明确数据所覆盖，因此需要两个通配符资源记录。此外，还应注意，X.COM和A.X.COM的明确MX数据是必需的，而且上述任何资源记录都不会匹配XX.COM的查询名称。

4.3.4. 否定响应缓存（可选）

DNS提供了一项可选服务，允许域名服务器分发并让解析器缓存带有TTL的否定结果。例如，域名服务器可以在返回域名不存在的错误信息时，附带一个TTL，接收此信息的解析器可以在TTL期间内假设该域名不存在，而无需咨询权威数据。同样，解析器也可以发出匹配多个类型的QTYPE查询，并缓存某些类型不存在的事实。

这一功能在实现使用搜索列表的命名简写系统中尤为重要，因为一个常用的简写（恰好需要在搜索列表末尾添加后缀）在每次使用时都会产生多个域名不存在的错误。

其方法是，域名服务器可以在响应的附加部分添加一条SOA资源记录（RR），当该响应是权威的时。该SOA必须是引发权威数据的区域的SOA，或者在适用时为域名不存在的情况。SOA的MINIMUM字段控制否定结果的缓存时间。

请注意，在某些情况下，答案部分可能包含多个所有者名称。在这种情况下，SOA机制应仅用于与QNAME匹配的数据，即该部分中唯一的权威数据。

域名服务器和解析器绝不应尝试在非权威响应的附加部分添加SOA，或试图推断未在权威响应中直接声明的结果。这有多种原因，包括：缓存信息通常不足以匹配RR和它们的区域名称，SOA RR可能因直接的SOA查询而被缓存，以及域名服务器没有义务在权威部分输出SOA。

此功能是可选的，尽管预计未来会成为标准协议的一部分。域名服务器不必在所有权威响应中添加SOA RR，也不要求解析器缓存否定结果，但都建议如此。所有解析器和递归域名服务器至少应能够在响应中存在SOA时忽略它。

一些已经提出的实验也将利用这一特性。其思想是，如果已缓存的数据来自某个特定区域，并且获得了该区域权威的SOA记录的副本，并且自从数据被缓存以来，该区域的SERIAL字段没有发生变化，那么可以将缓存数据的TTL重置为该区域的最小值（MINIMUM），前提是该最小值比当前TTL还要小。这种用法仅供规划用途，目前尚不建议实际使用。

Mockapetris                                                    [第27页]

RFC 1034             域名概念与功能        1987年11月

4.3.5. 区域维护与传输

区域管理员的部分工作是维护所有对该区域具有权威性的域名服务器。当不可避免的更改发生时，必须将这些更改分发到所有的域名服务器。虽然这种分发可以通过FTP或其他临时方案完成，但首选的方法是使用DNS协议中的区域传输部分。

自动区域传输或刷新的一般模型是，某一台域名服务器是该区域的主服务器（master或primary）。更改在主服务器上协调，通常通过编辑该区域的主文件来实现。编辑完成后，管理员会通知主服务器加载新的区域数据。其他非主服务器（次级服务器）会定期检查是否有更改（通过可选择的时间间隔），并在检测到更改后获取新的区域副本。

为了检测更改，次级服务器只需检查该区域的SOA记录中的SERIAL字段。除了其他可能的更改外，区域的SOA中的SERIAL字段在每次更改时都会被递增。递增可以是简单的加一，也可以基于主文件的写入日期和时间等。其目的是通过比较序列号，判断两个区域副本中哪个更为最新。序列号的递增和比较使用序列空间算术，因此对区域更新速度存在理论上的限制，基本上是旧的副本必须在序列号覆盖其32位范围的一半之前消失。在实际操作中，唯一需要注意的是，比较操作应正确处理在最正和最负的32位数字边界附近的比较问题。

次级服务器的定期轮询由区域的SOA资源记录（RR）中的参数控制，这些参数设定了最低可接受的轮询间隔。这些参数分别称为REFRESH、RETRY和EXPIRE。每当一个新的区域被加载到次级服务器时，次级服务器会等待REFRESH秒，然后向主服务器查询该区域的最新序列号（serial）。如果此检查未能完成，次级服务器会每隔RETRY秒再次尝试进行检查。检查的内容是向主服务器发出一个简单的查询，获取该区域的SOA RR。如果次级服务器本地副本中的序列号等于主服务器返回的序列号，则表示没有发生变化，次级服务器会重新等待REFRESH时间后再次进行检查。如果次级服务器在EXPIRE时间内无法完成序列号检查，它必须假设其区域副本已过时，并将其丢弃。

当轮询显示区域已发生变化时，次级服务器必须通过AXFR请求请求区域传输。AXFR请求可能会遇到错误，例如被拒绝，但通常会收到一系列响应消息。第一条和最后一条消息必须包含区域的顶层权威节点的数据。中间的消息则携带区域中的所有其他资源记录（RR），包括权威和非权威的RR。这些消息流允许次级服务器构建出区域的完整副本。由于数据的准确性至关重要，AXFR请求必须使用TCP或其他可靠的协议。

每个次级服务器需要对主服务器执行以下操作，但也可以选择性地对其他次级服务器执行这些操作。当主服务器因主机宕机或网络问题而不可用，或者当某个次级服务器对“中间”次级服务器的网络访问优于对主服务器时，这种策略可以改善传输过程。

5. 解析器

5.1. 引言

解析器是连接用户程序与域名服务器的程序。在最简单的情况下，解析器接收来自用户程序（如邮件程序、TELNET、FTP）的请求，通常以子程序调用或系统调用的形式，并以与本地主机数据格式兼容的方式返回所需信息。

解析器通常位于请求其服务的程序所在的同一台机器上，但它可能需要咨询其他主机上的域名服务器。由于解析器可能需要咨询多个域名服务器，或者请求的信息可能已在本地缓存中，解析器完成请求所需的时间可能会有很大差异，从几毫秒到几秒不等。

resolver的一个非常重要的目标是通过从其缓存中回答之前的结果，消除大部分请求中的网络延迟和名称服务器的负载。因此，共享给多个进程、用户、机器等的缓存比非共享缓存更高效。

5.2. 客户端-解析器接口

5.2.1. 典型功能

客户端与解析器的接口受到本地主机习惯的影响，但典型的解析器-客户端接口具有以下三个功能：

1. 主机名到主机地址的转换。

   这个功能通常被定义为模仿之前的HOSTS.TXT文件的功能。给定一个字符字符串，调用者希望得到一个或多个32位的IP地址。在DNS中，这转化为对类型A资源记录（RRs）的请求。由于DNS不保留RR的顺序，这个功能可能会选择对返回的地址进行排序，或者如果服务只返回一个选择，则选择“最佳”地址。注意，建议返回多个地址，但单一地址也可能是模拟之前HOSTS.TXT服务的唯一方式。

2. 主机地址到主机名的转换

   这个功能通常遵循之前功能的形式。给定一个32位的IP地址，调用者希望得到一个字符字符串。IP地址的八位字节会被反转，用作名称组成部分，并加上“IN-ADDR.ARPA”后缀。使用PTR类型的查询来获取具有主机主要名称的RR。例如，针对IP地址1.2.3.4的请求会查找域名“4.3.2.1.IN-ADDR.ARPA”上的PTR RR。

3. 一般查询功能

   这个功能从DNS中检索任意信息，且在之前的系统中没有对应的功能。调用者提供QNAME、QTYPE和QCLASS，想要所有匹配的RR。这个功能通常会使用DNS格式的所有RR数据，而不是本地主机的格式，并返回所有RR内容（如TTL），而不是经过本地引号规则处理的形式。

当解析器执行上述功能时，通常会将以下结果之一返回给客户端：

- 一个或多个提供请求数据的RR。

  在这种情况下，解析器会以适当的格式返回答案。

- 名称错误（NE）。

  当引用的名称不存在时发生。例如，用户可能拼写错误了主机名。

- 数据未找到错误。

  当引用的名称存在，但没有对应类型的数据时发生。例如，某个主机地址不存在对应的数据。

以下是英文内容的中文翻译：

```
对邮箱名应用的函数会返回此错误
因为该名称存在，但没有对应的地址资源记录（RR）。

需要注意的是，用于在主机名和地址之间转换的函数可能会将“名称错误”和“数据未找到”这两种错误情况合并为一种错误返回类型，但一般情况下不应如此。原因之一是应用程序可能会先请求某个名称的某一类信息，然后再请求同一名称的另一类信息；如果将这两种错误合并，可能会导致无用的查询，从而减慢应用程序的速度。

5.2.2. 别名

在尝试解析某个请求时，解析器可能会发现所涉及的名称实际上是一个别名。例如，当解析器发现用于主机名到地址转换的名称时，遇到CNAME资源记录（RR）时，可能会发现这是一个别名。如果可能的话，解析器应将别名的情况反馈给客户端。

在大多数情况下，解析器在遇到CNAME时会重新以新名称发起查询。然而，在执行通用功能时，当CNAME RR与查询类型匹配时，解析器不应继续追踪别名。这允许进行是否存在别名的查询。例如，如果查询类型是CNAME，用户关心的是CNAME RR本身，而不是它所指向的名称上的RR。

关于别名，还可能出现几种特殊情况。应避免多层别名，因为这会降低效率，但不应将其视为错误。别名循环和指向不存在名称的别名应被检测到，并将错误情况反馈给客户端。

5.2.3. 临时失败

在不完美的世界中，所有解析器偶尔会无法解析某个请求。这种情况可能由解析器与网络其他部分断开连接（如链路故障或网关问题）引起，也可能较少见地由某个域的所有服务器同时发生故障或不可用造成。

这种情况绝不能被作为“名称不存在”或“数据未找到”的错误信号给应用程序。这种行为会让人恼火，并可能在邮件系统使用DNS时造成严重混乱。

虽然在某些情况下，可以通过无限期阻塞请求来应对临时问题，但这通常不是一个好选择，尤其是当客户端是一个可以继续进行其他任务的服务器进程时。推荐的做法是，将临时失败作为解析器函数可能返回的结果之一，即使这会使模拟现有HOSTS.TXT功能变得更困难。

5.3. 解析器内部结构
```

每个解析器的实现都使用略有不同的算法，通常在处理各种错误时会花费比实际发生的情况更多的逻辑。本节概述了一个推荐的基本解析器操作策略，但具体细节留给[RFC-1035]。

5.3.1. 代理解析器（Stub resolvers）

实现解析器的一种选择是将解析功能从本地机器移到支持递归查询的域名服务器。这可以为资源有限的PC提供一种简便的域名服务方式，或者集中管理整个局域网或组织的缓存。

所有剩余的代理解析器需要做的就是维护一份能够执行递归请求的域名服务器地址列表。这类解析器可能需要在配置文件中存储这些信息，因为它可能缺乏在域数据库中定位信息的复杂能力。用户还需要确认所列的服务器是否会提供递归服务；域名服务器可以自由选择拒绝为任何或所有客户端提供递归服务。用户应咨询本地系统管理员，找到愿意提供此类服务的域名服务器。

这种服务方式存在一些缺点。由于递归请求可能需要不确定的时间完成，代理解析器在优化重传间隔以应对UDP包丢失和服务器宕机时可能会遇到困难；如果域名服务器将重传视为新请求，可能会被过于积极的代理解析器过载。使用TCP可能是一个解决方案，但TCP可能会对主机的能力带来类似于真实解析器的负担。

5.3.2. 资源

除了自身资源外，解析器还可以共享访问由本地域名服务器维护的区域。这为解析器提供了更快的访问速度，但必须小心，绝不能让缓存信息覆盖区域数据。在本讨论中，“本地信息”一词指的是缓存和共享区域的总和，前提是当存在权威数据时，总是优先使用权威数据而非缓存数据。

以下的解析器算法假设所有功能都已转换为通用的查找函数，并使用以下数据结构来表示解析器中正在进行的请求状态：

SNAME：我们正在搜索的域名。

STYPE：搜索请求的QTYPE。

SCLASS：搜索请求的QCLASS。

SLIST           一种描述名称服务器和解析器当前试图查询的区域（zone）的结构。该结构跟踪解析器关于哪个名称服务器持有所需信息的最佳猜测；当到达的信息改变猜测时，它会被更新。该结构包括区域名的等价物、已知的该区域的名称服务器、名称服务器的已知地址，以及可以用来建议下一个最可能的最佳服务器的历史信息。区域名的等价物是一个匹配计数，表示从根开始到当前区域，SNAME与被查询区域共有多少个标签；这用作衡量解析器与SNAME“接近程度”的指标。

SBELT           一种与SLIST结构相同形式的“安全带”结构，它从配置文件初始化，用于列出在解析器没有任何本地信息指导选择名称服务器时应使用的服务器。匹配计数将为-1，表示没有已知匹配的标签。

CACHE           一种存储先前响应结果的结构。由于解析器负责丢弃TTL已过期的旧资源记录（RRs），大多数实现会将到达的RR中的时间间隔转换为某种绝对时间，以便在缓存中存储。解析器不会逐个倒计时TTL，而是在搜索过程中遇到旧RR时忽略或丢弃它们，或者在定期扫描时丢弃它们，以回收旧RR占用的内存。

Mockapetris                                                    [第33页]

RFC 1034             域名概念与功能        1987年11月

5.3.3. 算法

顶层算法包括四个步骤：

1. 查看本地信息中是否已有答案，如果有，则返回给客户端。

2. 找到最优的服务器进行询问。

3. 向这些服务器发送查询，直到收到响应。

4. 分析响应，具体如下：

   a. 如果响应回答了问题或包含名称错误，则将数据缓存，并返回给客户端。

   b. 如果响应包含对其他服务器的更佳委托信息，则缓存该委托信息，然后返回步骤2。

   c. 如果响应显示有CNAME且该CNAME不是最终答案，则缓存CNAME，将SNAME更改为CNAME资源记录中的规范名称，然后返回步骤1。

如果响应显示服务器故障或其他异常内容，应将该服务器从SLIST中删除，然后返回步骤3。

步骤1在缓存中搜索所需的数据。如果数据存在于缓存中，通常认为其已足够可靠，可用于正常使用。一些解析器在用户界面上提供了一个选项，可以强制解析器忽略缓存数据，直接咨询权威服务器。默认情况下不建议这样做。如果解析器可以直接访问某个域名服务器的区域信息，应检查是否存在权威形式的所需数据，如果有，应优先使用权威数据而非缓存数据。

步骤2寻找可以请求的域名服务器。一般策略是从本地可用的域名服务器资源记录（RR）开始查找，首先查找SNAME，然后是SNAME的父域名、祖父域名，依此类推，直到根域（“.”）。因此，如果SNAME是Mockapetris.ISI.EDU，这一步会查找Mockapetris.ISI.EDU的NS资源记录，然后是ISI.EDU，再是EDU，最后是根（“.”）。这些NS RR列出了某个区域或以上区域的主机名。将这些名称复制到SLIST中，并用本地数据设置它们的地址。可能地址信息暂时不可用。解析器在这里有多种选择；最优的做法是启动多个并行解析进程，边查找地址边继续处理可用的地址。显然，设计方案和选项较为复杂，取决于本地主机的能力。建议解析器设计者优先考虑以下原则：

1. 限制工作量（发送的数据包数、启动的并行进程数），以防请求陷入无限循环或引发链式请求，即使某些数据配置错误。

2. 尽可能返回正确的答案。

3. 避免不必要的传输。

4. 尽快获得答案。

如果NS RR的查找失败，解析器将从安全备用（SBELT）中初始化SLIST。基本思想是当解析器不知道应向哪个服务器请求时，应使用配置文件中的信息，该文件列出了几个预期有帮助的服务器。虽然存在特殊情况，但通常会选择两个根服务器和两个本地域的服务器。选择两个的原因是为了冗余。根服务器将提供最终访问所有域空间的能力。两个本地服务器则确保在本地网络因网关或链路故障而与互联网隔离时，解析器仍能继续解析本地域名。

除了服务器的名称和地址之外，SLIST数据结构还可以进行排序，以优先使用最佳服务器，并确保所有服务器的所有地址都以轮询的方式被使用。排序方式可以简单地偏好本地网络上的地址，也可以结合过去事件的统计信息，例如之前的响应时间和击球率。

第3步会不断发送查询，直到收到响应为止。策略是轮询所有服务器的所有地址，每次传输之间设置超时。在实际操作中，使用多宿主主机的所有地址非常重要，过于激进的重传策略实际上会减慢响应速度，尤其是在多个解析器竞争同一名称服务器，甚至在单个解析器中也会如此。SLIST通常包含控制超时和跟踪先前传输的数值。

第4步涉及分析响应。解析器在解析响应时应保持高度警惕，还应检查响应是否与其发送的查询匹配，方法是使用响应中的ID字段。

理想的答案来自对查询具有权威的服务器，能提供所需数据或返回名称错误。数据会返回给用户，并在TTL大于零时存入缓存以备将来使用。

如果响应显示有委托，解析器应检查该委托是否比SLIST中的服务器“更接近”答案。这可以通过比较SLIST中的匹配计数与由SNAME和委托中的NS资源记录计算得出的匹配数来实现。如果不匹配，则响应是伪造的，应忽略。如果委托有效，则应缓存NS委托资源记录和任何服务器的地址资源记录。名称服务器会被加入到SLIST中，搜索会重新开始。

如果响应中包含CNAME，除非响应中已有规范名称的相关数据，或者CNAME本身就是答案，否则搜索会在CNAME处重新开始。

详细信息和实现提示可以参考[RFC-1035]。

6. 一个场景

在我们的示例域空间中，假设我们希望对根域、MIL、EDU、MIT.EDU和ISI.EDU区域进行单独的管理控制。我们可以按如下方式分配名称服务器：

以下是该英文内容的中文翻译：

```

                                   |(C.ISI.EDU,SRI-NIC.ARPA
                                   | A.ISI.EDU)
             +---------------------+------------------+
             |                     |                  |
            MIL                   EDU                ARPA
             |(SRI-NIC.ARPA,       |(SRI-NIC.ARPA,    |
             | A.ISI.EDU           | C.ISI.EDU)       |
       +-----+-----+               |     +------+-----+-----+
       |     |     |               |     |      |           |
      BRL  NOSC  DARPA             |  IN-ADDR  SRI-NIC     ACC
                                   |
       +--------+------------------+---------------+--------+
       |        |                  |               |        |
      UCI      MIT                 |              UDEL     YALE
                |(XX.LCS.MIT.EDU, ISI
                |ACHILLES.MIT.EDU) |(VAXA.ISI.EDU,VENERA.ISI.EDU,
            +---+---+              | A.ISI.EDU)
            |       |              |
           LCS   ACHILLES +--+-----+-----+--------+
            |             |  |     |     |        |
            XX            A  C   VAXA  VENERA Mockapetris




Mockapetris                                                    [第36页]


RFC 1034             域名概念与功能        1987年11月


在这个示例中，权威名称服务器用括号表示，位于域名树中它控制的节点位置。

因此，根名称服务器位于 C.ISI.EDU、SRI-NIC.ARPA 和 A.ISI.EDU。 MIL 域由 SRI-NIC.ARPA 和 A.ISI.EDU 提供服务。 EDU 域由 SRI-NIC.ARPA 和 C.ISI.EDU 提供服务。注意，服务器可能拥有连续或不连续的区域。在这个场景中，C.ISI.EDU 在根域和 EDU 域具有连续区域。A.ISI.EDU 在根域和 MIL 域也有连续区域，但在 ISI.EDU 还有一个不连续的区域。

6.1. C.ISI.EDU 名称服务器

C.ISI.EDU 是根域、MIL 和 EDU 域的名称服务器，属于 IN 类，并会拥有这些域的区域。根域的区域数据可能如下：

    .       IN      SOA     SRI-NIC.ARPA. HOSTMASTER.SRI-NIC.ARPA. (
                            870611          ;序列号
                            1800            ;每30分钟刷新一次
                            300             ;每5分钟重试一次
                            604800          ;一周后过期
                            86400)          ;最小TTL为一天
                    NS      A.ISI.EDU.
                    NS      C.ISI.EDU.
                    NS      SRI-NIC.ARPA.

    MIL.    86400   NS      SRI-NIC.ARPA.
            86400   NS      A.ISI.EDU.

    EDU.    86400   NS      SRI-NIC.ARPA.
            86400   NS      C.ISI.EDU.

    SRI-NIC.ARPA.   A       26.0.0.73
                    A       10.0.0.51
                    MX      0 SRI-NIC.ARPA.
                    HINFO   DEC-2060 TOPS20
```

以下是英文内容的中文翻译：

```
    ACC.ARPA.       A       26.6.0.65
                    HINFO   PDP-11/70 UNIX
                    MX      10 ACC.ARPA.

    USC-ISIC.ARPA.  CNAME   C.ISI.EDU.

    73.0.0.26.IN-ADDR.ARPA.  PTR    SRI-NIC.ARPA.
    65.0.6.26.IN-ADDR.ARPA.  PTR    ACC.ARPA.
    51.0.0.10.IN-ADDR.ARPA.  PTR    SRI-NIC.ARPA.
    52.0.0.10.IN-ADDR.ARPA.  PTR    C.ISI.EDU.



Mockapetris                                                    [第37页]


RFC 1034             域名概念与功能        1987年11月


    103.0.3.26.IN-ADDR.ARPA. PTR    A.ISI.EDU.

    A.ISI.EDU. 86400 A      26.3.0.103
    C.ISI.EDU. 86400 A      10.0.0.52

这些数据以主文件的格式表示。大多数资源记录（RR）都是单行条目；唯一的例外是 SOA 资源记录，它使用“(”开始多行记录，用“)”表示多行记录的结束。由于一个区域内所有资源记录的类别必须相同，因此区域内只需在第一条记录中指定类别。当名称服务器加载一个区域时，它会将所有权威资源记录的 TTL 强制设置为至少等于 SOA 记录中的 MINIMUM 字段值，这里是86400秒，即一天。标记 MIL 和 EDU 域委托的 NS 资源记录，以及用于服务器主机地址的粘合（glue）资源记录，不属于该区域的权威数据，因此具有明确的 TTL。

根节点附带了四个资源记录：描述根区域的 SOA 记录，以及列出根域名服务器的三个 NS 记录。SOA 记录中的数据描述了该区域的管理信息。该区域数据由主机 SRI-NIC.ARPA 维护，区域的责任人是 HOSTMASTER@SRI-NIC.ARPA。SOA 记录中的一个关键项是86400秒的最小TTL，这意味着区域内所有权威数据的TTL至少为此值，但也可以显式指定更高的值。

用于 MIL 和 EDU 域的 NS 资源记录标志着根区域与 MIL 和 EDU 区域的边界。注意，在此示例中，下级区域恰好由支持根区域的名称服务器提供支持。

EDU 区的主文件可以相对于起点 EDU 来描述。该区域的示例数据可能如下：

    EDU.  IN SOA SRI-NIC.ARPA. HOSTMASTER.SRI-NIC.ARPA. (
                            870729 ;序列号
                            1800 ;每30分钟刷新一次
                            300 ;每5分钟重试一次
                            604800 ;过期时间为一周
                            86400 ;最小TTL为一天
                            )
                    NS SRI-NIC.ARPA.
                    NS C.ISI.EDU.

    UCI 172800 NS ICS.UCI
                    172800 NS ROME.UCI
    ICS.UCI 172800 A 192.5.19.1
    ROME.UCI 172800 A 192.5.19.31




Mockapetris                                                    [第38页]


RFC 1034             域名概念与功能        1987年11月
```

以下是英文内容的中文翻译：

```
    
    ISI 172800 NS VAXA.ISI
                    172800 NS A.ISI
                    172800 NS VENERA.ISI.EDU.
    VAXA.ISI 172800 A 10.2.0.27
                    172800 A 128.9.0.33
    VENERA.ISI.EDU. 172800 A 10.1.0.52
                    172800 A 128.9.0.32
    A.ISI 172800 A 26.3.0.103

    UDEL.EDU.  172800 NS LOUIE.UDEL.EDU.
                    172800 NS UMN-REI-UC.ARPA.
    LOUIE.UDEL.EDU. 172800 A 10.0.0.96
                    172800 A 192.5.39.3

    YALE.EDU.  172800 NS YALE.ARPA.
    YALE.EDU.  172800 NS YALE-BULLDOG.ARPA.

    MIT.EDU.  43200 NS XX.LCS.MIT.EDU.
                      43200 NS ACHILLES.MIT.EDU.
    XX.LCS.MIT.EDU.  43200 A 10.0.0.44
    ACHILLES.MIT.EDU. 43200 A 18.72.0.8

注意这里使用了相对名称。对于 ISI.EDU. 的所有者名称是用相对名称表示的，另外两个名称服务器资源记录（RR）的内容也是如此。在主域名服务器中，相对域名和绝对域名可以自由混用。

6.2. 标准查询示例

以下的查询和响应展示了域名服务器的行为。除非另有说明，查询的请求头中没有设置递归（RD）标志。请注意，非递归查询的答案确实依赖于被询问的服务器，但不依赖于请求者的身份。

（以下省略部分内容）

Mockapetris                                                    [第39页]

RFC 1034             域名概念与功能        1987年11月

6.2.1. QNAME=SRI-NIC.ARPA, QTYPE=A

该查询的格式如下：

               +---------------------------------------------------+
    头部     | OPCODE=SQUERY                                     |
               +---------------------------------------------------+
    问题     | QNAME=SRI-NIC.ARPA., QCLASS=IN, QTYPE=A           |
               +---------------------------------------------------+
    答案     | <空>                                              |
               +---------------------------------------------------+
    权威     | <空>                                              |
               +---------------------------------------------------+
    附加信息 | <空>                                              |
               +---------------------------------------------------+

来自 C.ISI.EDU 的响应将会是：
```

以下是英文内容的中文翻译：

```
               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应，AA                            |
               +---------------------------------------------------+
    问题     | QNAME=SRI-NIC.ARPA.，QCLASS=IN，QTYPE=A             |
               +---------------------------------------------------+
    答案     | SRI-NIC.ARPA. 86400 IN A 26.0.0.73                  |
               |               86400 IN A 10.0.0.51                |
               +---------------------------------------------------+
    权威     | <空>                                              |
               +---------------------------------------------------+
    附加信息 | <空>                                              |
               +---------------------------------------------------+

响应的头部看起来与查询的头部相似，除了
响应位被设置，表示这是一个响应而非查询，以及
权威应答（AA）位被设置，表明答案部分中的地址资源记录（RRs）来自
权威数据。响应的问答部分与查询的问答部分相匹配。














Mockapetris                                                    [第40页]


RFC 1034             域名概念与功能        1987年11月


如果将相同的查询发送到另一个非权威的服务器，可能得到的响应是：

               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应                              |
               +---------------------------------------------------+
    问题     | QNAME=SRI-NIC.ARPA.，QCLASS=IN，QTYPE=A             |
               +---------------------------------------------------+
    答案     | SRI-NIC.ARPA. 1777 IN A 10.0.0.51                   |
               |               1777 IN A 26.0.0.73                  |
               +---------------------------------------------------+
    权威     | <空>                                              |
               +---------------------------------------------------+
    附加信息 | <空>                                              |
               +---------------------------------------------------+

这个响应与之前的不同之处在于：头部没有设置AA位，TTL值也不同。推测数据不是来自区域（zone），而是来自缓存。权威TTL与此处TTL的差异是由于缓存中数据的老化。答案部分中RRs的排序不同并不重要。

6.2.2. QNAME=SRI-NIC.ARPA，QTYPE=*

类似于前面的查询，但QTYPE为*，将从C.ISI.EDU收到如下响应：
```

以下是英文内容的中文翻译：

```
               +---------------------------------------------------+
    头部       | OPCODE=SQUERY，响应，AA                          |
               +---------------------------------------------------+
    问题       | QNAME=SRI-NIC.ARPA.，QCLASS=IN，QTYPE=*            |
               +---------------------------------------------------+
    答案       | SRI-NIC.ARPA. 86400 IN  A     26.0.0.73            |
               |                         A     10.0.0.51            |
               |                         MX    0 SRI-NIC.ARPA.      |
               |                         HINFO DEC-2060 TOPS20     |
               +---------------------------------------------------+
    权威       | <空>                                              |
               +---------------------------------------------------+
    附加信息   | <空>                                              |
               +---------------------------------------------------+









Mockapetris                                                    [第41页]


RFC 1034             域名概念与功能        1987年11月


如果将类似的查询发送给两个非权威的域名服务器，响应可能是：

               +---------------------------------------------------+
    头部       | OPCODE=SQUERY，响应                              |
               +---------------------------------------------------+
    问题       | QNAME=SRI-NIC.ARPA.，QCLASS=IN，QTYPE=*            |
               +---------------------------------------------------+
    答案       | SRI-NIC.ARPA. 12345 IN  A       26.0.0.73          |
               |                            A       10.0.0.51          |
               +---------------------------------------------------+
    权威       | <空>                                              |
               +---------------------------------------------------+
    附加信息   | <空>                                              |
               +---------------------------------------------------+

以及

               +---------------------------------------------------+
    头部       | OPCODE=SQUERY，响应                              |
               +---------------------------------------------------+
    问题       | QNAME=SRI-NIC.ARPA.，QCLASS=IN，QTYPE=*            |
               +---------------------------------------------------+
    答案       | SRI-NIC.ARPA. 1290 IN HINFO  DEC-2060 TOPS20       |
               +---------------------------------------------------+
    权威       | <空>                                              |
               +---------------------------------------------------+
    附加信息   | <空>                                              |
               +---------------------------------------------------+
```

这两个答案都没有设置AA位，因此都不是来自权威数据。内容不同、TTL不同，表明这两个服务器在不同时间缓存了数据，第一个服务器缓存了对QTYPE=A查询的响应，第二个缓存了对HINFO查询的响应。
















Mockapetris                                                    [第42页]


RFC 1034             域名概念与功能        1987年11月


6.2.3. QNAME=SRI-NIC.ARPA，QTYPE=MX

这种类型的查询可能是邮件服务器试图查找邮件目的地HOSTMASTER@SRI-NIC.ARPA的路由信息而发出的。来自C.ISI.EDU的响应可能是：

               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应，AA                            |
               +---------------------------------------------------+
    问题     | QNAME=SRI-NIC.ARPA.，QCLASS=IN，QTYPE=MX          |
               +---------------------------------------------------+
    回答     | SRI-NIC.ARPA. 86400 IN MX 0 SRI-NIC.ARPA.        |
               +---------------------------------------------------+
    权威     | <空>                                              |
               +---------------------------------------------------+
    附加     | SRI-NIC.ARPA. 86400 IN A 26.0.0.73                |
               |                         A 10.0.0.51             |
               +---------------------------------------------------+

该响应在答案部分包含了MX资源记录（RR）。附加部分包含了地址资源记录（RR），因为C.ISI.EDU的域名服务器猜测请求者可能需要这些地址信息，以便正确使用MX携带的信息。

6.2.4. QNAME=SRI-NIC.ARPA，QTYPE=NS

C.ISI.EDU对此类查询的回复可能是：

               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应，AA                            |
               +---------------------------------------------------+
    问题     | QNAME=SRI-NIC.ARPA.，QCLASS=IN，QTYPE=NS          |
               +---------------------------------------------------+
    回答     | <空>                                              |
               +---------------------------------------------------+
    权威     | <空>                                              |
               +---------------------------------------------------+
    附加     | <空>                                              |
               +---------------------------------------------------+

该响应与查询的唯一区别在于头部中的AA和RESPONSE位。对该响应的解释是：该服务器对该名称具有权威性，名称存在，但没有NS类型的资源记录（RR）存在。

6.2.5. QNAME=SIR-NIC.ARPA，QTYPE=A

如果用户拼写错误了主机名，可能会看到这种类型的查询。

Mockapetris                                                    [第43页]

RFC 1034             域名概念与功能        1987年11月

C.ISI.EDU 会用以下内容作出回答：

               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应，AA，RCODE=NE                  |
               +---------------------------------------------------+
    问题     | QNAME=SIR-NIC.ARPA.，QCLASS=IN，QTYPE=A            |
               +---------------------------------------------------+
    答案     | <空>                                              |
               +---------------------------------------------------+
    权威     | . SOA SRI-NIC.ARPA. HOSTMASTER.SRI-NIC.ARPA.       |
               |       870611 1800 300 604800 86400                |
               +---------------------------------------------------+
    附加     | <空>                                              |
               +---------------------------------------------------+

此响应表明该名称不存在。 这一情况在响应码（RCODE）部分的头部中进行了标示。

权威部分中的 SOA 资源记录（RR）是可选的负缓存信息，允许使用此响应的解析器假设该名称在 SOA 最小（86400秒）时间内不存在。

6.2.6. QNAME=BRL.MIL，QTYPE=A

如果将此查询发送到 C.ISI.EDU，回复将会是：

               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应                              |
               +---------------------------------------------------+
    问题     | QNAME=BRL.MIL，QCLASS=IN，QTYPE=A                  |
               +---------------------------------------------------+
    答案     | <空>                                              |
               +---------------------------------------------------+
    权威     | MIL.             86400 IN NS       SRI-NIC.ARPA.  |
               |                  86400    NS       A.ISI.EDU.     |
               +---------------------------------------------------+
    附加     | A.ISI.EDU.                A        26.3.0.103     |
               | SRI-NIC.ARPA.             A        26.0.0.73      |
               |                           A        10.0.0.51      |
               +---------------------------------------------------+

此响应的答案部分为空，但不是权威的，因此是一次转发。 C.ISI.EDU上的域名服务器意识到它不是 MIL 域的权威服务器，于是将请求者转发给 A.ISI.EDU 和 SRI-NIC.ARPA 这两个它知道是 MIL 域权威的服务器。

---

Mockapetris                                                    [第44页]

RFC 1034             域名概念与功能        1987年11月

6.2.7. QNAME=USC-ISIC.ARPA，QTYPE=A

对 A.ISI.EDU 的此类查询的响应将会是：

以下是英文内容的中文翻译：

```
               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应，AA                            |
               +---------------------------------------------------+
    问题     | QNAME=USC-ISIC.ARPA.，QCLASS=IN，QTYPE=A            |
               +---------------------------------------------------+
    答案     | USC-ISIC.ARPA. 86400 IN CNAME C.ISI.EDU.             |
               | C.ISI.EDU. 86400 IN A 10.0.0.52                     |
               +---------------------------------------------------+
    权威     | <空>                                              |
               +---------------------------------------------------+
    附加信息 | <空>                                              |
               +---------------------------------------------------+

请注意，头部中的AA位保证了与QNAME匹配的数据具有权威性，但并不表示C.ISI.EDU的数据也是权威的。这个完整的回复之所以可能，是因为A.ISI.EDU恰好对USC-ISIC.ARPA所在的ARPA域和C.ISI.EDU所在的ISI.EDU域都具有权威性。

如果将相同的查询发送给C.ISI.EDU，其响应可能与上述相同（如果它在缓存中有自己的地址），但也可能是：
























Mockapetris                                                    [第45页]


RFC 1034             域名概念与功能        1987年11月


               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应，AA                            |
               +---------------------------------------------------+
    问题     | QNAME=USC-ISIC.ARPA.，QCLASS=IN，QTYPE=A            |
               +---------------------------------------------------+
    答案     | USC-ISIC.ARPA. 86400 IN CNAME C.ISI.EDU.             |
               +---------------------------------------------------+
    权威     | ISI.EDU. 172800 IN NS VAXA.ISI.EDU.                |
               |                           NS A.ISI.EDU.             |
               |                           NS VENERA.ISI.EDU.        |
               +---------------------------------------------------+
    附加信息 | VAXA.ISI.EDU. 172800 A 10.2.0.27                     |
               | 172800 A 128.9.0.33                                |
               | VENERA.ISI.EDU. 172800 A 10.1.0.52                   |
               | 172800 A 128.9.0.32                                |
               | A.ISI.EDU. 172800 A 26.3.0.103                        |
               +---------------------------------------------------+

此回复包含了对别名USC-ISIC.ARPA的权威应答，以及对ISI.EDU域名服务器的引用。由于查询是针对被询问的名称服务器的主机名，这类回复不太可能出现，但在其他别名的情况下则很常见。

6.2.8. QNAME=USC-ISIC.ARPA，QTYPE=CNAME
```

如果这个查询被发送到 A.ISI.EDU 或 C.ISI.EDU，回复将会是：

               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应，AA                            |
               +---------------------------------------------------+
    问题     | QNAME=USC-ISIC.ARPA.，QCLASS=IN，QTYPE=A            |
               +---------------------------------------------------+
    答案     | USC-ISIC.ARPA. 86400 IN CNAME C.ISI.EDU.            |
               +---------------------------------------------------+
    权威     | <空>                                              |
               +---------------------------------------------------+
    附加信息 | <空>                                              |
               +---------------------------------------------------+

由于QTYPE为CNAME，CNAME资源记录本身就能回答该查询，域名服务器不会尝试去查找C.ISI.EDU的任何信息（除非是为了附加部分的内容）。

6.3. 示例解析

以下示例说明了解析器为其客户端执行的操作。我们假设解析器在没有缓存的情况下开始，就像系统启动后那样。我们还假设系统不是数据中的任何一个主机，且该主机位于网络26的某个位置，其安全带（SBELT）数据结构包含以下信息：

    匹配计数 = -1
    SRI-NIC.ARPA.   26.0.0.73       10.0.0.51
    A.ISI.EDU.      26.3.0.103

这些信息指定了要尝试的服务器、它们的地址，以及匹配计数为-1，表示这些服务器与目标的距离不太近。注意，-1并不代表一个准确的接近程度，只是为了让算法的后续阶段能够正常工作而设定的一个值。

以下示例说明了使用缓存的情况，因此每个示例都假设之前的请求已经完成。

6.3.1. 解析 ISI.EDU 的 MX 记录。

假设第一个发起请求的解析器来自本地的邮件程序，它需要为 PVM@ISI.EDU 寻找邮件。然后，邮件程序可能会请求域名 ISI.EDU 的 MX 资源记录。

解析器会在其缓存中查找 ISI.EDU 的 MX 记录，但空缓存不会提供帮助。解析器会意识到需要查询外部服务器，并尝试确定最合适的服务器进行查询。这一搜索会查找 ISI.EDU、EDU 以及根域的 NS 资源记录。这些缓存的搜索也会失败。作为最后的手段，解析器会使用 SBELT 中的信息，将其复制到 SLIST 结构中。

此时，解析器需要从三个可用的地址中选择一个进行尝试。鉴于解析器位于网络26，它应选择 26.0.0.73 或 26.3.0.103 作为首选。然后，它会发出如下形式的查询：

模卡佩特里斯                                                    [第47页]


RFC 1034             域名概念与功能        1987年11月


               +---------------------------------------------------+
    头部     | OPCODE=SQUERY                                     |
               +---------------------------------------------------+
    问题     | QNAME=ISI.EDU., QCLASS=IN, QTYPE=MX               |
               +---------------------------------------------------+
    回答     | <空>                                              |
               +---------------------------------------------------+
    权威     | <空>                                              |
               +---------------------------------------------------+
    附加     | <空>                                              |
               +---------------------------------------------------+

解析器随后会等待对其查询的响应或超时。
如果发生超时，它会尝试不同的服务器，然后尝试同一服务器的不同地址，最后重试已尝试过的地址。
最终，它可能会收到来自 SRI-NIC.ARPA 的回复：

               +---------------------------------------------------+
    头部     | OPCODE=SQUERY, RESPONSE                           |
               +---------------------------------------------------+
    问题     | QNAME=ISI.EDU., QCLASS=IN, QTYPE=MX               |
               +---------------------------------------------------+
    回答     | <空>                                              |
               +---------------------------------------------------+
    权威     | ISI.EDU.        172800 IN NS       VAXA.ISI.EDU.  |
               |                           NS       A.ISI.EDU.     |
               |                           NS       VENERA.ISI.EDU.|
               +---------------------------------------------------+
    附加     | VAXA.ISI.EDU.   172800    A        10.2.0.27      |
               |                 172800    A        128.9.0.33     |
               | VENERA.ISI.EDU. 172800    A        10.1.0.52      |
               |                 172800    A        128.9.0.32     |
               | A.ISI.EDU.      172800    A        26.3.0.103     |
               +---------------------------------------------------+

解析器会注意到，响应中的信息比其现有的SLIST提供了更接近的委派（因为它匹配了三个标签）。解析器会将此响应中的信息缓存起来，并用它来建立一个新的SLIST：

    匹配数 = 3
    A.ISI.EDU.      26.3.0.103
    VAXA.ISI.EDU.   10.2.0.27       128.9.0.33
    VENERA.ISI.EDU. 10.1.0.52       128.9.0.32

A.ISI.EDU 也出现在这个列表中以及之前的列表中，但这纯属巧合。解析器会再次开始传输并等待响应。最终，它会得到一个答案：

Mockapetris                                                    [第48页]

RFC 1034             域名概念与功能        1987年11月

               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应，AA                            |
               +---------------------------------------------------+
    问题     | QNAME=ISI.EDU.，QCLASS=IN，QTYPE=MX                |
               +---------------------------------------------------+
    答案     | ISI.EDU.                MX 10 VENERA.ISI.EDU.     |
               |                         MX 20 VAXA.ISI.EDU.       |
               +---------------------------------------------------+
    权威     | <空>                                              |
               +---------------------------------------------------+
    附加信息 | VAXA.ISI.EDU.   172800  A  10.2.0.27               |
               |                 172800  A  128.9.0.33              |
               | VENERA.ISI.EDU. 172800  A  10.1.0.52               |
               |                 172800  A  128.9.0.32              |
               +---------------------------------------------------+

解析器会将这些信息添加到其缓存中，并将MX资源记录（RRs）返回给客户端。

6.3.2. 获取地址为26.6.0.65的主机名

解析器会将此请求转化为对65.0.6.26.IN-ADDR.ARPA的PTR资源记录的查询。由于此信息不在缓存中，解析器会寻找外部服务器进行询问。没有匹配的服务器，因此会再次使用SBELT。（注意，ISI.EDU域的服务器在缓存中，但ISI.EDU不是65.0.6.26.IN-ADDR.ARPA的祖先域，因此使用SBELT。）

由于此请求在两个SBELT中的权威数据范围内，最终会有一个服务器返回：





















Mockapetris                                                    [第49页]

RFC 1034             域名概念与功能        1987年11月

               +---------------------------------------------------+
    头部     | OPCODE=SQUERY，响应，AA                            |
               +---------------------------------------------------+
    问题     | QNAME=65.0.6.26.IN-ADDR.ARPA.，QCLASS=IN，QTYPE=PTR |
               +---------------------------------------------------+
    答案     | 65.0.6.26.IN-ADDR.ARPA.    PTR     ACC.ARPA.      |
               +---------------------------------------------------+
    权威     | <空>                                              |
               +---------------------------------------------------+
    附加信息 | <空>                                              |
               +---------------------------------------------------+

6.3.3. 获取poneria.ISI.EDU的主机地址

该请求将被转换为针对 poneria.ISI.EDU 的 A 记录请求。解析器不会在本地缓存中找到该名称的任何数据，但在查找外部服务器时，会在缓存中找到 ISI.EDU 的 NS 资源记录。利用这些数据，它会构建一个类似于以下的服务器列表（SLIST）：

    匹配数 = 3

    A.ISI.EDU.      26.3.0.103
    VAXA.ISI.EDU.   10.2.0.27       128.9.0.33
    VENERA.ISI.EDU. 10.1.0.52

假设解析器按照偏好顺序排列这些选项，A.ISI.EDU 被列在首位，因为它与请求解析器所在的网络相同。

其中一个服务器会响应此次查询。

7. 参考文献与书目

[Dyer 87]       Dyer, S. 和 F. Hsu, 《Hesiod》，Project Athena 技术计划——名称服务，1987年4月，版本1.9。

                描述了 Hesiod 名称服务的基本原理。

[IEN-116]       J. Postel, 《Internet Name Server》，IEN-116，南加州大学信息科学研究所，1979年8月。

                一种已被域名系统取代但仍在使用的名称服务。








Mockapetris                                                    [第50页]


RFC 1034             域名概念与功能        1987年11月


[Quarterman 86] Quarterman, J. 和 J. Hoskins, 《著名计算机网络》，《通信杂志》（Communications of the ACM），1986年10月，第29卷第10期。

[RFC-742]       K. Harrenstien, 《NAME/FINGER》，RFC-742，网络信息中心，SRI国际，1977年12月。

[RFC-768]       J. Postel, 《用户数据报协议》（User Datagram Protocol），RFC-768，南加州大学信息科学研究所，1980年8月。

[RFC-793]       J. Postel, 《传输控制协议》（Transmission Control Protocol），RFC-793，南加州大学信息科学研究所，1981年9月。

[RFC-799]       D. Mills, 《互联网名称域》（Internet Name Domains），RFC-799，COMSAT，1981年9月。

                建议在互联网中引入层级结构，取代扁平的命名空间。

[RFC-805]       J. Postel, 《计算机邮件会议记录》，RFC-805，南加州大学信息科学研究所，1982年2月。

[RFC-810]       E. Feinler, K. Harrenstien, Z. Su 和 V. White, 《DOD互联网主机表规范》，RFC-810，网络信息中心，SRI国际，1982年3月。

                已废弃。详见 RFC-952。

[RFC-811]       K. Harrenstien, V. White 和 E. Feinler, 《主机名服务器》，RFC-811，网络信息中心，SRI国际，1982年3月。

                已废弃。详见 RFC-953。

[RFC-812]       K. Harrenstien 和 V. White, 《NICNAME/WHOIS》，RFC-812，网络信息中心，SRI国际，1982年3月。

[RFC-819]       Z. Su 和 J. Postel, 《互联网用户应用的域名命名规范》，RFC-819，网络信息中心，SRI国际，1982年8月。

关于域名系统设计的早期想法。
目前的实现方式完全不同。

[RFC-821]  J. Postel，“简单邮件传输协议”，RFC-821，南加州大学/信息科学研究所，1980年8月。

Mockapetris                                                    [第51页]

RFC 1034  域名概念与功能  1987年11月

[RFC-830]  Z. Su，“互联网名称服务的分布式系统”，RFC-830，网络信息中心，SRI国际，1982年10月。

关于域名系统设计的早期想法。
目前的实现方式完全不同。

[RFC-882]  P. Mockapetris，“域名——概念与功能”，RFC-882，南加州大学/信息科学研究所，1983年11月。

由本备忘录取代。

[RFC-883]  P. Mockapetris，“域名——实现与规范”，RFC-883，南加州大学/信息科学研究所，1983年11月。

由本备忘录取代。

[RFC-920]  J. Postel 和 J. Reynolds，“域名需求”，RFC-920，南加州大学/信息科学研究所，1984年10月。

解释顶级域名的命名方案。

[RFC-952]  K. Harrenstien, M. Stahl, E. Feinler，“国防部互联网主机表规范”，RFC-952，SRI，1985年10月。

规定了HOSTS.TXT的格式，该主机/地址表已被DNS取代。

[RFC-953]  K. Harrenstien, M. Stahl, E. Feinler，“主机名服务器”，RFC-953，SRI，1985年10月。

本RFC包含主机名服务器协议的官方规范，该协议已被DNS取代。该基于TCP的协议访问存储在RFC-952格式中的信息，用于获取主机表的副本。

[RFC-973]  P. Mockapetris，“域名系统的变更与观察”，RFC-973，南加州大学/信息科学研究所，1986年1月。

描述了对RFC-882和RFC-883的更改及其原因。现已废止。

Mockapetris                                                    [第52页]

RFC 1034  域名概念与功能  1987年11月

[RFC-974]  C. Partridge，“邮件路由与域名系统”，RFC-974，CSNET CIC BBN实验室，1986年1月。

描述了从基于HOSTS.TXT的邮件地址系统向使用域名系统的更强大的MX系统的过渡。

[RFC-1001]  NetBIOS工作组，“在TCP/UDP传输上实现NetBIOS服务的协议标准：概念与方法”，RFC-1001，1987年3月。

这份RFC以及RFC-1002是关于在TCP/IP之上实现NETBIOS的初步设计方案，建议将NetBIOS名称服务建立在DNS之上。

[RFC-1002]      NetBIOS工作组，“基于TCP/UDP传输的NetBIOS服务协议标准：详细规范”，RFC-1002，1987年3月。

[RFC-1010]      J. Reynolds 和 J. Postel，“已分配号码”，RFC-1010，USC/信息科学研究所，1987年5月。

                包含主机名、操作系统等的套接字号码和助记符。

[RFC-1031]      W. Lazear，“MILNET名称域过渡”，RFC-1031，1987年11月。

                描述了将MILNET迁移到DNS的计划。

[RFC-1032]      M. K. Stahl，“建立域——管理员指南”，RFC-1032，1987年11月。

                介绍了NIC用以管理顶级域和委派子域的注册政策。

[RFC-1033]      M. K. Lottor，“域管理员操作指南”，RFC-1033，1987年11月。

                为域管理员提供的操作手册。

[Solomon 82]    M. Solomon、L. Landweber 和 D. Neuhengen，“CSNET名称服务器”，计算机网络，卷6，第3期，1982年7月。

                描述了为CSNET设计的独立于DNS的名称服务，以及在CSNET中使用DNS的情况。

---

Mockapetris                                                    [第53页]

RFC 1034             域的概念与功能        1987年11月

索引

  A   12
  绝对名称   8
  别名   14, 31
  权威   6
  AXFR   17

  字符大小写   7
  CH   12
  CNAME   12, 13, 31
  完成查询   18

  域名   6, 7

  连接RR   20

  HINFO   12

  IN   12
  反向查询   16
  迭代查询   4

  标签   7

  邮箱名   9
  MX   12

  名称错误   27, 36
  名称服务器   5, 17
  NE   30
  否定缓存   44
  NS   12

  操作码   16

  PTR   12

  QCLASS   16
  QTYPE   16

  RDATA   13
  递归查询   4
  递归服务   22
  相对名称   7
  解析器   6
  RR   12

---

Mockapetris                                                    [第54页]

RFC 1034             域的概念与功能        1987年11月

  安全带   33
  节段   16
  SOA   12
  标准查询   22

  状态查询   18
  伪解析器   32

  TTL   12, 13

  通配符   25

  区传输   28
  区域   19

Mockapetris                                                    [第55页]