# RFC 791 中文翻译 (stub)
# 原文文件: ../../rfcs/RFCs0501-1000/rfc791.txt

RFC：791

互联网协议

DARPA互联网计划
协议规范

1981年9月

由以下机构起草：

国防高级研究计划局
信息处理技术办公室
地址：弗吉尼亚州阿灵顿，威尔逊大道1400号，邮编22209

撰写单位：

南加州大学信息科学研究所
地址：加利福尼亚州马里纳德尔雷，阿德米拉蒂大道4676号，邮编90291

1981年9月
互联网协议

目录

前言 ........................................................ iii

1. 引言 ......................................................... 1
  1.1 动机 .................................................... 1
  1.2 范围 .................................................... 1
  1.3 接口 .................................................... 1
  1.4 操作 .................................................... 2

2. 概述 ......................................................... 5
  2.1 与其他协议的关系 ....................................... 9
  2.2 操作模型 ................................................. 5
  2.3 功能描述 ................................................. 7
  2.4 网关 ..................................................... 9

3. 规范 ......................................................... 11
  3.1 互联网头部格式 ......................................... 11
  3.2 讨论 .................................................... 23
  3.3 接口 .................................................... 31

附录A：示例与场景 ............................................ 34
附录B：数据传输顺序 ............................................ 39

术语表 .......................................................... 41

参考文献 ........................................................ 45

[第i页]

1981年9月
互联网协议

1981年9月  
互联网协议

前言

本文件规定了国防部标准互联网协议。该文件基于之前六个版本的ARPA互联网协议规范，现行文本在很大程度上借鉴了它们。在概念和文本方面，许多贡献者共同参与了本工作的完成。本版本对地址分配、错误处理、选项代码，以及互联网协议的安全性、优先级、隔离区和处理限制等特性进行了修订。

乔恩·波斯特尔  
编辑

[第iii页]

1981年9月

RFC：791  
取代：RFC 760  
IENs：128、123、111、80、54、44、41、28、26

互联网协议

DARPA互联网计划协议规范

1. 引言

1.1. 设计动机

互联网协议旨在用于互联的分组交换计算机通信网络系统。这种系统被称为“链网”[1]。互联网协议提供了从源头到目的地传输被称为数据报的数据块的功能，其中源和目的地由固定长度的地址标识。互联网协议还支持在必要时对长数据报进行分段和重组，以便通过“微型包”网络进行传输。

1.2. 范围

互联网协议的范围专门限制在提供必要功能，以便在互联的网络系统中将一包比特（即互联网数据报）从源头传送到目的地。该协议没有机制增强端到端的数据可靠性、流量控制、排序或其他常见的主机到主机协议所具备的服务。互联网协议可以利用其支持网络的服务，提供各种类型和质量的服务。

1.3. 接口

在互联网环境中，此协议由主机到主机协议调用。该协议又调用本地网络协议，将互联网数据报传送到下一个网关或目的地主机。

例如，一个TCP模块会调用互联网模块，将一个TCP段（包括TCP头和用户数据）作为互联网数据报的数据部分。TCP模块会将互联网头中的地址和其他参数作为参数传递给互联网模块。然后，互联网模块会创建一个互联网数据报，并调用本地网络接口来传输该互联网数据报。

以ARPANET为例，互联网模块会调用一个本地网络模块，该模块会在互联网数据报中添加1822前导码[2]，从而创建一个ARPANET消息，传输到IMP（接口消息处理器）。ARPANET的地址会由本地网络接口从互联网地址中派生，通常是ARPANET中的某个主机的地址，该主机可能是通往其他网络的网关。

1.4 操作

互联网协议实现了两个基本功能：寻址和分段。

互联网模块利用互联网头中的地址信息，将互联网数据报传送到目的地。选择传输路径的过程称为路由。

互联网模块还利用互联网头中的字段，在必要时对互联网数据报进行分段和重组，以便通过“小包”网络进行传输。

其操作模型是在每个参与互联网通信的主机和每个连接不同网络的网关中都存在一个互联网模块。这些模块共享解释地址字段、分段和重组互联网数据报的共同规则。此外，特别是在网关中，这些模块还具有进行路由决策和其他功能的程序。

互联网协议将每个互联网数据报视为一个独立的实体，与其他数据报无关。不存在连接或逻辑电路（虚拟或其他形式）。

互联网协议在提供服务时使用四个关键机制：服务类型（Type of Service）、生存时间（Time to Live）、选项（Options）和头部校验和（Header Checksum）。

服务类型用于指示所需的服务质量。服务类型是一组抽象或泛化的参数，描述构成互联网的网络中提供的服务选择。这种服务类型的指示由网关使用，以选择特定网络的实际传输参数、下一跳的网络或下一台网关，以便在路由互联网数据报时使用。

生存时间（Time to Live，TTL）是指示互联网数据报（datagram）最大存活时间的一个指标。它由数据报的发送方设置，并在数据报经过的每个路由点被减一。如果在数据报到达目的地之前，TTL值减至零，则该数据报会被销毁。可以将TTL理解为一种自我销毁的时间限制。

[第2页]

1981年9月
互联网协议
引言

选项（Options）提供了在某些情况下需要或有用的控制功能，但对于大多数常规通信来说并非必要。这些选项包括时间戳、安全性和特殊路由的相关规定。

头部校验和（Header Checksum）用于验证在处理互联网数据报时所用信息是否正确传输。数据中可能存在错误。如果头部校验和检测失败，负责检测的实体会立即丢弃该数据报。

互联网协议不提供可靠的通信机制。没有端到端或跳到跳的确认，也没有数据的错误控制，只有头部校验和。没有重传机制，也没有流量控制。

检测到的错误可以通过互联网控制消息协议（ICMP）[3]报告，该协议在互联网协议模块中实现。

[第3页]

1981年9月
互联网协议

2. 综述

2.1 与其他协议的关系

下图展示了互联网协议在协议层次中的位置：

+------+ +-----+ +-----+     +-----+  
| Telnet | | FTP | | TFTP | ... | ... |  
+------+ +-----+ +-----+     +-----+  
      |   |         |           |     
     +-----+     +-----+     +-----+  
     | TCP |     | UDP | ... | ... |  
     +-----+     +-----+     +-----+  
        |           |           |     
+--------------------------+----+  
|    互联网协议与ICMP        |  
+--------------------------+----+  
                     |                 
        +---------------------------+  
        |   本地网络协议             |  
        +---------------------------+  

协议关系

图1。

一端是互联网协议接口，连接到更高层的主机到主机协议，另一端连接到本地网络协议。在此背景下，“本地网络”可以是建筑内的小型网络，也可以是像ARPANET这样的大型网络。

2.2. 操作模型

从一个应用程序向另一个应用程序传输数据报的操作模型如下所示：

我们假设此次传输将涉及一个中间网关。

发送端的应用程序准备好数据后，调用其本地互联网模块，将数据作为数据报发送，并将目标地址及其他参数作为调用参数传递。

互联网模块准备一个数据报头，并将数据附加到头部。互联网模块确定该互联网地址的本地网络地址，在本例中是网关的地址。

它将这个数据报和本地网络地址一起发送到本地网络接口。

本地网络接口创建一个本地网络头部，并将数据报附加到头部，然后通过本地网络发送。

数据报到达一个网关主机，包裹在本地网络头部中，本地网络接口剥去该头部，并将数据报交给互联网模块。互联网模块根据互联网地址判断，该数据报应转发到另一个网络中的另一台主机。它确定目标主机的本地网络地址，并调用该网络的本地网络接口来发送数据报。

这个本地网络接口创建一个本地网络头部，并将数据报附加到头部，将结果发送到目标主机。

在这个目标主机上，数据报被本地网络接口（LNI）剥离掉本地网络头部，然后交给互联网模块。

互联网模块判断该数据报是发给本地主机上的某个应用程序的。它会通过系统调用将数据传递给应用程序，并将源地址及其他参数作为调用的结果一同传递。

应用程序                                           应用程序
      \                                                   /
    互联网模块      互联网模块      互联网模块
          \                 /       \                /
          LNI-1          LNI-1      LNI-2         LNI-2
             \           /             \          /
        本地网络1           本地网络2

传输路径

图2

（页面6）

1981年9月
互联网协议概述

2.3 功能描述

互联网协议的功能或目的在于将数据报在一组互联的网络中传输。这是通过将数据报从一个互联网模块传递到另一个互联网模块，直到到达目的地来实现的。互联网模块位于主机和网关中。数据报根据互联网地址的解释在各个网络之间路由，从一个互联网模块传递到另一个互联网模块。因此，互联网协议的一个重要机制是互联网地址。

在从一个互联网模块到另一个互联网模块的消息路由过程中，数据报可能需要穿越最大包大小小于数据报本身的网络。为了解决这个问题，互联网协议提供了分段机制。

地址

区分名称、地址和路由[4]。名称表示我们要找的内容；地址表示它的所在位置；路由表示到达目的地的路径。互联网协议主要处理地址问题。将名称映射到地址的任务由更高层（即主机到主机或应用层）协议完成。互联网模块将互联网地址映射到本地网络地址。将本地网络地址映射到路由的任务由较低层（即本地网络或网关）程序负责。

地址长度固定为四个八位字节（32位）。一个地址由网络号开始，后跟本地地址（称为“剩余”字段）。互联网地址有三种格式或类别：在类别A中，高位为零，接下来的7位为网络号，最后24位为本地地址；在类别B中，高两位为“10”，接下来的14位为网络号，最后16位为本地地址；在类别C中，高三位为“110”，接下来的21位为网络号，最后8位为本地地址。

在将互联网地址映射到本地网络地址时必须格外注意；单一的物理主机必须能够表现得像多个不同的主机，具体做法是使用多个不同的互联网地址。一些主机还可能拥有多个物理接口（多宿主）。

也就是说，必须为一台主机配备多个物理接口，每个接口都可以拥有多个逻辑互联网地址。

（第7页）

1981年9月
互联网协议
概述

地址映射的示例可以在《地址映射》[5]中找到。

分段

当一个互联网数据报起源于允许较大数据包的本地网络，并且必须穿越限制包大小较小的本地网络以到达目的地时，就需要进行分段。

互联网数据报可以被标记为“不要分段”。任何被标记为“不要分段”的互联网数据报在任何情况下都不得进行互联网分段。如果标记为“不要分段”的数据报无法在不分段的情况下送达目的地，则应被丢弃。

跨越对互联网协议模块不可见的本地网络进行的分段、传输和重组，称为“内网分段”，并且可以使用[6]。

互联网的分段和重组过程需要能够将一个数据报几乎任意地分成多个片段，之后可以将这些片段重新组装。片段的接收方使用识别字段确保不同数据报的片段不会混淆。片段偏移字段告诉接收方该片段在原始数据报中的位置。片段偏移和长度确定了该片段覆盖的原始数据报的部分。更多片段标志（More Fragments）指示（通过重置标志）这是最后一个片段。这些字段提供了足够的信息以实现数据报的重组。

识别字段用于区分一个数据报的碎片与另一个数据报的碎片。互联网数据报的源协议模块会将识别字段设置为在该源地址-目标地址对和协议在互联网系统中有效期间内必须唯一的值。完整数据报的源协议模块会将“更多碎片”标志设置为零，碎片偏移量也设置为零。

为了对一个较长的互联网数据报进行碎片，互联网协议模块（例如在网关中）会创建两个新的互联网数据报，并将原始数据报中的互联网头字段内容复制到这两个新数据报的头部中。原始数据报的数据部分会在8个字节（64位）边界上被分成两部分（第二部分可能不是8的整数倍，但第一部分必须是）。将第一部分的8字节块数称为NFB（碎片块数）。第一部分的数据放入第一个新数据报中，并将总长度字段设置为该部分的长度。‘更多碎片’标志设置为1。第二部分的数据放入第二个新数据报中，并将总长度字段设置为该部分的长度。‘更多碎片’标志与原始长数据报相同。第二个新数据报的碎片偏移字段则设置为原始数据报中该字段的值加上NFB。

此过程可以推广为n路拆分，而不仅仅是两路拆分。

为了重组一个互联网数据报的碎片，互联网协议模块（例如在目的主机上）会将所有具有相同识别字段、源地址、目标地址和协议值的互联网数据报进行合并。合并的方法是将每个碎片的数据部分放置在由该碎片的碎片偏移量指示的相对位置。第一个碎片的碎片偏移量为零，最后一个碎片的‘更多碎片’标志会被重置为零。

2.4 网关

网关实现互联网协议，用于在网络之间转发数据报。网关还实现网关到网关协议（GGP）[7]，以协调路由和其他互联网控制信息。

在网关中，高级协议不必全部实现，GGP功能会被添加到IP模块中。

以下是英文内容的中文翻译：

```
                                    
                   +-------------------------------+   
                   | 互联网协议（IP） & ICMP & GGP |   
                   +-------------------------------+   
                           |                 |         
                 +---------------+   +---------------+ 
                 |   本地网络    |   |   本地网络    | 
                 +---------------+   +---------------+ 

                           网关协议

                               图 3

  





                                                                [第9页]



                                                          1981年9月
互联网协议






















































[第10页]                                                               



1981年9月                                                          
                                                       互联网协议



                           3.  规范

3.1.  互联网头部格式

  以下是互联网头部内容的摘要：

                                    
    0                   1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 版本 | 头部长度 | 服务类型 |        总长度               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  标识符  | 标志 | 片段偏移量 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  生存时间 |  协议 |  头部校验和 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                       源地址                          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    目的地址                        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    选项                    |  填充  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                    互联网数据报头部示例

                               图 4

  注意，每个刻度代表一个比特位置。

  版本：4 位

    版本字段指示互联网头部的格式。本文件描述的是第4版。

  头部长度（IHL）：4 位

    互联网头部长度以32位字为单位，指向数据的起始位置。注意，正确的头部的最小值为5。












                                                               [第11页]



                                                          1981年9月
互联网协议
规范



  服务类型：8 位
```

服务类型（Type of Service）提供了对所期望的服务质量的抽象参数的指示。这些参数用于指导在通过特定网络传输数据报时实际服务参数的选择。许多网络提供服务优先级（service precedence），在某种程度上将高优先级的流量视为比其他流量更重要（通常是在高负载时只接受优先级高于某一阈值的流量）。主要的选择是在低延迟、高可靠性和高吞吐量之间进行三者的权衡。

位 0-2：优先级（Precedence）  
位 3：0 = 正常延迟（Normal Delay），1 = 低延迟（Low Delay）  
位 4：0 = 正常吞吐量（Normal Throughput），1 = 高吞吐量（High Throughput）  
位 5：0 = 正常可靠性（Normal Reliability），1 = 高可靠性（High Reliability）  
位 6-7：保留供未来使用（Reserved for Future Use）

| 位 0-2 | 说明             |
|---------|------------------|
| 111     | 网络控制（Network Control） |
| 110     | 跨网控制（Internetwork Control） |
| 101     | 紧急/紧急控制（CRITIC/ECP） |
| 100     | 紧急（Flash Override） |
| 011     | 快速（Flash） |
| 010     | 立即（Immediate） |
| 001     | 优先（Priority） |
| 000     | 常规（Routine） |

使用延迟、吞吐量和可靠性指示可能会增加服务的成本（在某种意义上）。在许多网络中，为某一参数提供更好的性能往往会导致另一参数性能变差。除非极为特殊的情况，否则这三个指示中最多只应设置两个。

服务类型用于指定数据报在通过互联网系统传输过程中的处理方式。关于互联网服务类型到网络（如AUTODIN II、ARPANET、SATNET和PRNET）实际提供的服务的映射示例，详见“服务映射”[8]。

网络控制优先级（Network Control）仅在网络内部使用。该优先级的实际使用和控制由各个网络自行决定。跨网控制（Internetwork Control）优先级仅供网关控制发起者使用。如果某个网络关心这些优先级的实际使用，则由该网络负责控制对这些优先级的访问和使用。

总长度：16位

总长度：指数据报的总长度，以八位字节（octets）为单位，包括互联网头部和数据。该字段允许数据报的长度最大为65,535个八位字节。如此长的数据报对于大多数主机和网络来说是不切实际的。所有主机都必须准备接受最多576个八位字节的数据报（无论它们是完整到达还是以碎片形式到达）。建议主机只有在确认目的地准备好接受更大数据报的情况下，才发送超过576个八位字节的数据报。

576这个数值的选择是为了允许在传输中包含一个合理大小的数据块，同时附带必要的头部信息。例如，这个大小允许一个512个八位字节的数据块加上64个八位字节的头部信息，合计在一个数据报中。互联网头部的最大长度为60个八位字节，典型的互联网头部长度为20个八位字节，为更高层协议的头部留出一定的余量。

识别字段：16位

由发送方分配的标识值，用于帮助重组数据报的碎片。

标志位：3位

各种控制标志。

- 位0：保留位，必须为零
- 位1（DF，Don't Fragment，不分片）：0表示允许分片，1表示不允许分片
- 位2（MF，More Fragments，更多碎片）：0表示这是最后一个碎片，1表示还有后续碎片

二进制示意：
```
  0   1   2
+---+---+---+
|   | D | M |
| 0 | F | F |
+---+---+---+
```

碎片偏移：13位

此字段指示该碎片在原始数据报中的位置。

碎片偏移以8个八位字节（64位）为单位测量。第一个碎片的偏移值为零。

生存时间（TTL）：8位

此字段指示数据报在互联网系统中允许存在的最大时间。如果该字段值为零，则数据报必须被销毁。该字段在互联网头部处理过程中会被修改。时间以秒为单位进行测量，但由于每个处理模块即使在少于一秒的时间内处理完毕，也必须将TTL至少减一，因此TTL应被视为数据报可能存在的最大时间限制。其目的是丢弃无法投递的数据报，限制其最大存活时间。

协议：8位

此字段指示互联网数据报中数据部分所使用的下一层协议。不同协议的值在“已分配号码”列表中有详细定义。

头部校验和：16位

仅对头部进行的校验和。由于某些头部字段（如生存时间）会发生变化，因此每次处理互联网头部时都需要重新计算和验证。

校验和算法为：

校验和字段是所有头部中所有16位字的补码和的16位一补码。为了计算校验和，校验和字段的值设为零。

这是一种计算简单的校验和方法，实验结果表明它是足够的，但目前仍为临时方案，可能会被一种循环冗余检验（CRC）方法所取代，具体取决于未来的使用经验。

源地址：32位

源地址。详见第3.2节。

目的地址：32位

目的地址。详见第3.2节。

[第14页]

1981年9月
互联网协议规范

选项：可变长度

选项可以出现在数据报中，也可以不出现。所有的IP模块（主机和网关）都必须实现它们。这里的“可选”指的是在某个特定数据报中是否传输这些选项，而不是它们的实现。

在某些环境中，安全选项可能在所有数据报中都是必需的。

选项字段长度可变。可以没有选项，也可以有多个选项。选项的格式有两种情况：

情况1：单个八位字节的选项类型。

情况2：一个选项类型八位字节，一个选项长度八位字节，以及实际的选项数据八位字节。

选项长度八位字节包括了选项类型八位字节、选项长度八位字节以及所有的选项数据八位字节。

选项类型八位字节被视为包含三个字段：

- 1位：复制标志（copied flag）
- 2位：选项类别（option class）
- 5位：选项编号（option number）

复制标志表示该选项是否会被复制到所有分片中。

0 = 不复制
1 = 复制

选项类别包括：

0 = 控制
1 = 保留以备将来使用
2 = 调试和测量
3 = 保留以备将来使用

以下定义了互联网选项：

类别编号 长度 描述
----- ------ ------ -----------
  0     0      -    选项列表结束。该选项仅占用1个八位字节；没有长度字节。
  0     1      -    无操作。该选项仅占用1个八位字节；没有长度字节。
  0     2     11    安全。用于携带符合国防部（DOD）要求的安全、隔离、用户组（TCC）和处理限制代码。
  0     3     可变  松散源路由。用于根据源提供的信息对互联网数据报进行路由。
  0     9     可变  严格源路由。用于根据源提供的信息对互联网数据报进行路由。
  0     7     可变  记录路由。用于追踪互联网数据报经过的路径。
  0     8      4    流ID。用于携带流标识符。
  2     4     可变  互联网时间戳。

具体选项定义

选项列表结束

+--------+
|00000000|
+--------+
类型=0

此选项表示选项列表的结束。根据互联网头长度，这可能与互联网头的实际结束位置不一致。此标志用于所有选项的末尾，而非每个选项的末尾，且只有在选项结束位置与互联网头的实际结束位置不一致时才需要使用。

在分段或其他情况下，可能会复制、引入或删除。

[第16页]

1981年9月
互联网协议规范

无操作

+--------+
|00000001|
+--------+
类型=1

此选项可用于选项之间，例如，用于将后续选项的起始位置对齐到32位边界。

在分段或其他情况下，可能会复制、引入或删除。

安全

此选项提供一种方式，让主机传送安全、隔离、处理限制以及TCC（封闭用户组）参数。该选项的格式如下：

+--------+--------+---//---+---//---+---//---+---//---+
|10000010|00001011|SSS  SSS|CCC  CCC|HHH  HHH|  TCC   |
+--------+--------+---//---+---//---+---//---+---//---+
类型=130 长度=11

安全（S字段）：16位

以下是英文内容的中文翻译：

```
          指定16个安全级别中的一个（其中八个为将来使用预留）。

            00000000 00000000 - 未分类
            11110001 00110101 - 机密
            01111000 10011010 - EFTO
            10111100 01001101 - MMMM
            01011110 00100110 - PROG
            10101111 00010011 - 限制级
            11010111 10001000 - 秘密
            01101011 11000101 - 绝密
            00110101 11100010 - （为将来使用预留）
            10011010 11110001 - （为将来使用预留）
            01001101 01111000 - （为将来使用预留）
            00100100 10111101 - （为将来使用预留）
            00010011 01011110 - （为将来使用预留）
            10001001 10101111 - （为将来使用预留）
            11000100 11010110 - （为将来使用预留）
            11100010 01101011 - （为将来使用预留）





                                                               [第17页]



                                                          1981年9月
互联网协议
规范



        分隔区（C字段）：16位

          当传输的信息不进行分隔时，使用全零值。其他分隔区字段的值可以从国防情报局获取。

        处理限制（H字段）：16位

          控制和释放标记的值为字母数字双字母组合，定义在国防情报局手册DIAM 65-19《标准安全标记》中。

        传输控制码（TCC字段）：24位

          提供一种隔离流量和定义订阅者之间受控兴趣社区的方法。TCC值为三字母组合，可从DCA总部代码530获取。

        必须在分段时复制。此选项在数据报中最多出现一次。

      松散源路由和记录路由

        +--------+--------+--------+---------//--------+
        |10000011| 长度   | 指针   |     路由数据        |
        +--------+--------+--------+---------//--------+
        类型=131

        松散源路由（LSRR）选项提供一种方式，使互联网数据报的源头可以提供路由信息，由网关在转发数据报到目的地时使用，并记录路由信息。

        该选项以选项类型代码开始。第二个八位字节是选项长度，包括选项类型代码、长度八位字节、指针八位字节以及长度减3的路由数据八位字节。第三个八位字节是指针，指示路由数据中下一个要处理的源地址的起始位置。指针相对于此选项，最小合法值为4。
```

一条路由数据由一系列互联网地址组成。每个互联网地址为32位或4个八位字节。如果指针值大于长度，则源路由为空（已记录的路由已满），此时路由将基于目标地址字段进行转发。

[第18页]

1981年9月
互联网协议规范

如果目标地址字段中的地址已到达，并且指针不大于长度，则下一条源路由中的地址将替换目标地址字段中的地址，已记录的路由地址将替换刚刚使用的源地址，指针则增加4。

已记录的路由地址是该数据报在转发环境中所知的互联网模块自身的互联网地址。

用已记录的路由替换源路由的这个过程（虽然顺序是反的，不符合用作源路由的顺序）意味着该选项（以及整个IP头部）在数据报通过互联网时保持长度不变。

此选项为松散源路由，因为网关或主机的IP允许使用任何路径，经过任意数量的中间网关，达到路由中的下一个地址。

在分片时必须复制此选项。每个数据报中最多出现一次。

严格源路由和记录路由（Strict Source and Record Route, SSRR）

+--------+--------+--------+---------//--------+
|10001001| 长度   | 指针   |     路由数据        |
+--------+--------+--------+---------//--------+
类型=137

严格源路由和记录路由（SSRR）选项提供了一种方式，使得互联网数据报的源头可以提供路由信息，由网关在转发数据报到目的地时使用，并记录路由信息。

该选项以选项类型代码开头。第二个八位字节是选项长度，包括选项类型代码、长度字节、指针字节和长度减3的路由数据字节。第三个八位字节是指针，指示路由数据中下一个要处理的源地址的起始字节。指针相对于此选项，最小合法值为4。

路由数据由一系列互联网地址组成。每个地址为32位或4个八位字节。如果指针值大于长度，则源路由为空（已记录的路由已满）。

以下是英文内容的中文翻译：

```
                                                               [第19页]



                                                          1981年9月
互联网协议规范



        记录的路由（完整）以及路由应基于目标地址字段。

        如果目标地址字段中的地址已到达，并且指针不大于长度，则源路由中的下一个地址将替换目标地址字段中的地址，记录的路由地址将替换刚刚使用的源地址，指针增加四个字节。

        记录的路由地址是指在该数据报被转发的环境中，互联网模块自身的互联网地址。

        用记录的路由替换源路由的这个过程（虽然它的顺序与用作源路由的顺序相反）意味着该选项（以及整个IP头部）在数据报通过互联网时保持长度不变。

        这个选项是严格的源路由，因为网关或主机的IP必须直接将数据报发送到源路由中的下一个地址，且只能通过指示的直接连接网络到达路由中指定的下一个网关或主机。

        必须在分片时复制。在数据报中最多出现一次。

      记录路由（Record Route）

        +--------+--------+--------+---------//--------+
        |00000111| 长度   | 指针   |     路由数据        |
        +--------+--------+--------+---------//--------+
          类型=7

        记录路由选项提供了一种记录互联网数据报路由的方法。

        该选项以选项类型代码开头。第二个字节是选项长度，包括选项类型代码、长度字节、指针字节以及长度减3的路由数据字节。第三个字节是指针，指向路由数据中的位置，指示下一个存储路由地址的区域的起始字节。指针相对于此选项而言，最小合法值为4。

        记录的路由由一系列互联网地址组成。每个互联网地址为32位或4个字节。如果指针是
```

超过长度时，记录的路由数据区域已满。  
发起主机必须用足够大的路由数据区域来组成此选项，以容纳所有预期的地址。添加地址不会改变选项的大小。路由数据区域的初始内容必须为零。

当互联网模块转发数据报时，它会检查是否存在记录路由选项。若存在，它会将其在该环境中已知的自己的互联网地址插入到数据报的记录路由中，从指针所指示的字节开始，并将指针向后移动四个字节。

如果路由数据区域已满（指针超过长度），则数据报会被转发而不将地址插入到记录路由中。如果还有空间但不足以插入完整的地址，则视为数据报出错并被丢弃。在任何情况下，可能会向源主机发送一个ICMP参数问题消息。

在分片时不复制，只在第一个分片中出现。最多在数据报中出现一次。

流标识符

```
+--------+--------+--------+--------+
|10001000|00000010|    流ID          |
+--------+--------+--------+--------+
  类型=136 长度=4
```

此选项提供一种方式，将16位SATNET流标识符携带到不支持流概念的网络中。

在分片时必须复制。最多在数据报中出现一次。

---

互联网时间戳

```
+--------+--------+--------+--------+
|01000100| 长度   | 指针   |溢出|标志|
+--------+--------+--------+--------+
|        互联网地址        |
+--------+--------+--------+--------+
|        时间戳             |
+--------+--------+--------+--------+
|            .               |
             .
             .
```

类型=68

选项长度是指从类型、长度、指针、溢出/标志字节开始到最后的时间戳区域的字节数（最大长度为40字节）。

指针表示从此选项的起始位置到时间戳区域末尾再加一的字节数（即指向下一个时间戳空间的起始字节）。最小合法值为5。当指针大于长度时，表示时间戳区域已满。

溢出（oflw）[4位]表示由于空间不足，无法注册时间戳的IP模块数量。

标志（flg）[4位]的取值如下：

0 —— 仅存储时间戳，连续存放在32位字中，

1 —— 每个时间戳前面都带有注册实体的互联网地址，

3 —— 互联网地址字段是预先指定的。IP模块只有在其地址与下一个指定的互联网地址匹配时，才会注册其时间戳。

时间戳是一个右对齐的32位值，表示自UT午夜以来的毫秒数。如果无法以毫秒为单位提供时间，或者无法以UT午夜为参考提供时间，则可以插入任何时间，只要时间戳字段的高位比特被设置为1，以指示使用了非标准值。

发起主机必须在此选项中预留足够大的时间戳数据区，以容纳所有预期的时间戳信息。添加时间戳不会改变选项的大小。时间戳数据区的初始内容必须为零或互联网地址/零对。

如果时间戳数据区已满（指针超过长度），则不插入时间戳，数据报会被转发，且溢出计数加一。

如果有空间但不足以插入完整的时间戳，或者溢出计数本身溢出，则原始数据报被视为出错并被丢弃。在任何情况下，都可以向源主机发送ICMP参数问题消息[3]。

时间戳选项在分片时不会被复制。它会在第一个分片中携带，并且在一个数据报中最多出现一次。

填充：可变长度

互联网头部填充用于确保互联网头部的结束位置在32位边界上。填充部分为零。

3.2 讨论

协议的实现必须具有鲁棒性。每个实现都应预期与由不同个体创建的其他实现进行互操作。虽然本规范的目标是明确协议细节，但仍存在不同解释的可能性。一般而言，实施应在发送行为上保持保守，在接收行为上保持宽容。也就是说，必须确保发送的数据报格式正确，但应接受任何能够理解的（即使存在技术错误，只要其含义仍然清楚）数据报。

基本的互联网服务是面向数据报的，允许在网关处对数据报进行分段，重组则在目标主机的互联网协议模块中完成。当然，在网络内部或由网络网关之间的私下协议中进行数据报的分段和重组也是允许的，因为这对互联网协议和更高层协议来说是透明的。这种透明的分段和重组被称为“网络依赖型”或“内联网”分段，目前不在此处详细讨论。

互联网地址在主机层面区分源和目的地，并提供协议字段。假设每个协议都能提供在主机内部进行必要多路复用的功能。

地址编址

为了在为网络分配地址时提供灵活性，并适应大量的小型到中型网络，地址字段的解释被编码为：指定少量网络但有大量主机的情况；中等数量网络和中等数量主机的情况；以及大量网络但每个网络主机较少的情况。此外，还设有一个转义码，用于扩展地址模式。

地址格式：

| 高位比特 | 格式                         | 类别 |
| -------- | ---------------------------- | ---- |
| 0        | 7位网络号，24位主机号        | a    |
| 10       | 14位网络号，16位主机号       | b    |
| 110      | 21位网络号，8位主机号        | c    |
| 111      | 转入扩展地址模式              |      |

网络字段中的值为零表示本网络。这种情况仅在某些ICMP消息中使用。扩展地址模式未定义。这两种特性都保留供将来使用。

实际分配的网络地址值详见“已分配编号”[9]。

本地地址由本地网络分配，必须允许单一物理主机作为多个不同的互联网主机存在。也就是说，必须存在一种映射机制，将互联网主机地址与网络/主机接口相对应，允许多个互联网地址对应一个接口。同时，允许一个主机拥有多个物理接口，并将来自多个接口的数据报视为都发往同一主机。

互联网地址与ARPANET、SATNET、PRNET及其他网络地址之间的映射关系详见“地址映射”[5]。

分段与重组。

互联网识别字段（ID）与源地址、目的地址及协议字段一起，用于识别数据报片段以进行重组。

如果数据报不是最后一个片段，则“更多片段”标志位（MF）被设置。片段偏移字段标识该片段相对于原始未分段数据报起始位置的相对位置。片段的计数单位为8个八位字节（octets）。设计的分段策略是：未分段的数据报具有全部为零的分段信息（MF=0，片段偏移=0）。如果一个互联网数据报被分段，其数据部分必须在8个八位字节的边界上进行断开。

该格式允许最多有2^13=8192个8字节的片段，总共可达65,536个八位字节。请注意，这与数据报的总长度字段一致（当然，头部长度包含在总长度中，而不计入片段中）。

当发生分段时，某些选项会被复制，但其他选项只保留在第一个片段中。

每个互联网模块必须能够转发一个68个八位字节的未分段数据报，而无需进一步分段。这是因为互联网头部最多可能有60个八位字节，而最小的片段为8个八位字节。

每个互联网目的地必须能够接收一个576个八位字节的数据报，无论是完整的还是分段后再重组。

可能受分段影响的字段包括：

1. 选项字段
2. 更多片段标志
3. 片段偏移
4. 互联网头部长度字段
5. 总长度字段
6. 头部校验和

如果设置了“不要分段”标志（DF）位，则不允许对该数据报进行互联网分段，尽管可能会被丢弃。这可以用来禁止分段，特别是在接收主机没有足够资源进行互联网片段重组的情况下。

“不要分段”功能的一个应用示例是下载一个小型主机。一个小型主机可以有一个引导程序，接受一个数据报，将其存储在内存中，然后执行。

分段和重组的过程最容易通过示例来描述。以下程序为示例实现。

以下伪代码中的通用符号：“=<”表示“小于或等于”，“#”表示“不等于”，“=”表示“等于”，“<-”表示“被设置为”。此外，“x到y”包括x但不包括y；例如，“4到7”包括4、5和6（但不包括7）。

1981年9月
互联网协议规范

一个示例分片程序

通过下一网络传输的最大数据报尺寸称为最大传输单元（MTU）。

如果总长度小于或等于最大传输单元，则将该数据报提交到下一步的数据报处理；否则，将数据报分成两个片段，第一个片段为最大尺寸，第二个片段为剩余部分。第一个片段提交到下一步的数据报处理，而第二个片段如果仍然过大，则再次提交到此程序中。

符号说明：

FO    -  分片偏移
IHL   -  互联网头部长度
DF    -  不分片标志
MF    -  更多片段标志
TL    -  总长度
OFO   -  旧的分片偏移
OIHL  -  旧的互联网头部长度
OMF   -  旧的更多片段标志
OTL   -  旧的总长度
NFB   -  分片块数
MTU   -  最大传输单元

程序步骤：

如果 TL 小于或等于 MTU，则将此数据报提交到下一步处理；否则，如果 DF=1，则丢弃该数据报。否则，进行如下操作：

生成第一个片段：
1. 复制原始互联网头部；
2. OIHL <- IHL； OTL <- TL； OFO <- FO； OMF <- MF；
3. NFB <- (MTU - IHL*4) / 8；
4. 附加前 NFB*8 个数据八位组；
5. 校正头部：
   - MF <- 1；
   - TL <- (IHL*4) + (NFB*8)；
   - 重新计算校验和；
6. 将此片段提交到下一步处理。

生成第二个片段：
7. 有选择性地复制互联网头部（部分选项不复制，详见选项定义）；
8. 附加剩余数据；
9. 校正头部：
   - IHL <- (((OIHL*4) - 不复制的选项长度) + 3) / 4；
   - TL <- OTL - NFB*8 - (OIHL - IHL)*4；
   - FO <- OFO + NFB；
   - MF <- OMF；
   - 重新计算校验和；
10. 将此片段提交到分片测试；完成。

在上述程序中，每个片段（除最后一个）都达到了最大允许尺寸。另一种方案可能产生小于最大尺寸的数据报。例如，可以实现一种反复将大数据报一分为二，直到得到的片段小于最大传输单元尺寸的分片程序。

一个示例重组程序

对于每个数据报，计算缓冲区标识符的方法是将源地址、目的地址、协议类型和识别字段连接在一起。如果这是一个完整的数据报（即偏移量和“是否有更多片段”字段都为零），那么与该缓冲区标识符相关的任何重组资源将被释放，并将该数据报转发到下一步处理。

如果没有其他具有相同缓冲区标识符的片段在手中，则会分配重组资源。重组资源包括一个数据缓冲区、一个头部缓冲区、一个片段块位图表、一个总数据长度字段和一个计时器。片段中的数据根据其偏移量和长度放入数据缓冲区，并在片段块位图中设置对应已接收片段块的位。

如果这是第一个片段（即偏移量为零），则将该片段的头部放入头部缓冲区。如果这是最后一个片段（即“是否有更多片段”字段为零），则计算出总数据长度。如果该片段完成了整个数据报（通过检查片段块位图中的设置位），则将数据报送到下一步处理；否则，将计时器设置为当前计时器值与该片段的生存时间（TTL）字段值中的较大者，重组程序放弃控制。

当计时器耗尽时，所有与该缓冲区标识符相关的重组资源将被释放。计时器的初始设置是等待时间的下限，因为如果到达的片段的TTL大于当前计时器值，等待时间会增加，但如果TTL较小，则不会减少。该计时器可能达到的最大值为最大生存时间（大约4.25分钟）。目前建议的初始计时器设置为15秒。随着对该协议的使用经验积累，这一参数可能会调整。请注意，选择此参数值与可用缓冲区容量和传输媒介的数据速率有关；也就是说，数据速率乘以计时器值等于缓冲区大小（例如，10Kb/s × 15秒 = 150Kb）。

符号说明：

以下是英文内容的中文翻译：

```
        FO    -  片偏移
        IHL   -  互联网头部长度
        MF    -  更多片段标志
        TTL   -  生存时间
        NFB   -  片段块数
        TL    -  总长度
        TDL   -  总数据长度
        BUFID -  缓冲区标识符
        RCVBT -  已接收片段位表
        TLB   -  定时器下界

      过程：

        (1)  BUFID <- 源|目的|协议|标识；
        (2)  如果 FO = 0 且 MF = 0
        (3)     则如果已分配了 BUFID 的缓冲区
        (4)             则清除所有该 BUFID 的重组；
        (5)          将数据报提交到下一步；完成。
        (6)     否则如果没有分配 BUFID 的缓冲区
        (7)             则分配重组资源
                             以 BUFID；
                             TIMER <- TLB； TDL <- 0；
        (8)          将片段中的数据放入 BUFID 的数据缓冲区，从第 FO*8 个字节到
                     第 (TL - (IHL*4)) + FO*8 个字节；
        (9)          设置 RCVBT 位，从 FO 到 FO + ((TL - (IHL*4) + 7)/8)；
        (10)         如果 MF = 0，则 TDL <- TL - (IHL*4) + (FO*8)
        (11)         如果 FO = 0，则将头部放入头部缓冲区
        (12)         如果 TDL 不等于 0
        (13)          且所有 RCVBT 位从 0 到 (TDL+7)/8 都已设置
        (14)            则 TL <- TDL + (IHL*4)
        (15)                 将数据报提交到下一步；
        (16)                 释放该 BUFID 的所有重组资源；完成。
        (17)         TIMER <- MAX(TIMER, TTL)；
        (18)         放弃等待下一个片段或定时器到期；
        (19) 定时器到期：清除所有 BUFID 的重组；完成。

      如果两个或多个片段包含相同数据

[第28页]

1981年9月
                                                       互联网协议
                                                       规范

      无论是完全相同还是部分重叠，此过程
      都会使用最新到达的副本存放在数据缓冲区中，并交付数据报。

  标识

    选择数据报的标识符是为了提供一种唯一识别某个数据报所有片段的方法。  
    组装片段的协议模块判断片段属于同一数据报的依据是它们具有相同的源、目的、协议和标识符。  
    因此，发送方必须选择一个在该源-目的-协议对在数据报（或其任何片段）在互联网中存活期间唯一的标识符。
```

看来，发送协议模块需要维护一张标识符（Identifier）表，每个与之通信过的目的地在互联网的最大包存活时间内都应有一条对应的记录。

然而，由于标识符字段允许的值有65,536个，有些主机可能可以仅仅使用独特的标识符，而不依赖于目的地。

对于某些高级协议来说，选择标识符是合适的。例如，TCP协议模块可能会重传相同的TCP段，如果重传携带的标识符与原始传输相同，那么正确接收的概率会提高，因为可以使用任意数据报的片段来构建正确的TCP段。

服务类型（Type of Service，TOS）

服务类型用于互联网服务质量的选择。它通过抽象参数优先级（precedence）、延迟（delay）、吞吐量（throughput）和可靠性（reliability）来指定。这些抽象参数需要映射到特定网络中数据报所经过的实际服务参数。

优先级：衡量该数据报重要性的独立指标。

延迟：对于标明此项的数据报，及时交付非常重要。

吞吐量：对于标明此项的数据报，高数据速率很重要。

可靠性：对于标明此项的数据报，确保交付的努力程度较高。

例如，ARPANET具有一个优先级位，可以在“标准”消息（类型0）和“非控制”消息（类型3）之间进行选择（在单包和多包消息之间的选择也可以视为一种服务参数）。非控制消息的传递通常不那么可靠，延迟也较少。假设要通过ARPANET发送一个互联网数据报，其互联网服务类型如下：

优先级：5  
延迟：0  
吞吐量：1  
可靠性：1

在此例中，将这些参数映射到ARPANET的可用参数时，应将ARPANET的优先级位设置为1（因为互联网优先级在其范围的上半部分），选择标准消息（因为已指明吞吐量和可靠性要求，而延迟不是重点）。关于服务映射的更多细节，请参见《服务映射》[8]。

生存时间（Time to Live）

生存时间由发送方设置，表示数据报在互联网系统中允许存在的最大时间。如果数据报在互联网系统中存在的时间超过了生存时间，则必须将其销毁。

该字段必须在处理每个互联网头部时递减，以反映处理数据报所花费的时间。即使没有关于实际耗时的本地信息可用，该字段也必须减1。时间以秒为单位（即值1表示一秒）。因此，最大生存时间为255秒或4.25分钟。由于每个处理数据报的模块即使在少于一秒的时间内也必须至少将TTL减1，因此TTL应被视为数据报可能存在的时间上限。其目的是使无法投递的数据报被丢弃，并限制数据报的最大存活时间。

一些较高级别的可靠连接协议基于假设：在经过一定时间后，旧的重复数据报不会再到达。TTL为这些协议提供了一种保证其假设成立的方法。

[第30页]

1981年9月
互联网协议规范

选项

每个数据报中的选项是可选的，但在实现中是必须的。也就是说，选项的存在与否由发送方决定，但每个互联网模块必须能够解析每个选项。选项字段中可以存在多个选项。

这些选项可能不会以32位边界结束。互联网头部必须用零填充字节。第一个零填充字节会被解释为结束选项标志，剩余部分作为互联网头部填充。

每个互联网模块必须能够对每个选项采取行动。如果要传递分类、受限或隔离的流量，则必须使用安全选项。

校验和

如果互联网头部发生变化（例如，生存时间减小、互联网选项的添加或更改，或由于分片），则会重新计算互联网头部的校验和。此校验和旨在保护互联网头部字段免受传输错误的影响。

在某些应用中，允许出现少量数据位错误，而不允许重传延迟。如果强制执行数据正确性，可能无法支持这些应用。

错误

互联网协议错误可以通过ICMP消息进行报告[3]。

3.3 接口

用户界面对IP的功能描述充其量也只能算是虚构的，因为每个操作系统都具有不同的功能。因此，我们必须提醒读者，不同的IP实现可能具有不同的用户界面。然而，所有的IP都必须提供一套基本的服务，以保证所有IP实现都能支持相同的协议层次。本节将规定所有IP实现所需的功能接口。

一方面，互联网协议接口连接本地网络，另一方面连接到更高层的协议或应用程序。在下文中，较高层的协议或应用程序（甚至是网关程序）将被称为“用户”，因为它们使用互联网模块。由于互联网协议是一个数据报协议，在数据报传输之间几乎不需要维护内存或状态，每次用户调用互联网协议模块时，都提供完成所请求服务所需的全部信息。

一个示例的上层接口

以下两个示例调用满足用户与互联网协议模块通信的要求（“=>”表示返回）：

SEND（源地址，目标地址，协议，服务类型，生存时间，缓冲区指针，长度，标识符，不分片标志，选项 => 结果）

其中：

- 源地址 = 源地址
- 目标地址 = 目标地址
- 协议 = 协议类型
- TOS = 服务类型
- TTL = 生存时间
- BufPTR = 缓冲区指针
- len = 缓冲区长度
- Id = 标识符
- DF = 不分片标志
- opt = 选项数据
- 结果 = 响应
  - OK = 数据报已成功发送
  - Error = 参数错误或本地网络错误

注意，优先级包含在TOS中，安全性/隔离性作为选项传递。

RECV（BufPTR，协议，=> 结果，源地址，目标地址，TOS，长度，选项）

其中：

- BufPTR = 缓冲区指针
- 协议 = 协议类型
- 结果 = 响应
  - OK = 数据报已成功接收
  - Error = 参数错误
- 长度 = 缓冲区长度
- 源地址 = 源地址
- 目标地址 = 目标地址
- TOS = 服务类型
- 选项 = 选项数据

当用户发送一个数据报时，系统会执行 SEND 调用，并提供所有参数。互联网协议模块在接收到此调用后，会检查参数的有效性，然后准备并发送消息。如果参数正确且数据报被本地网络接受，调用将成功返回；如果参数不正确或数据报未被本地网络接受，调用将失败返回。在失败的情况下，必须对问题的原因做出合理的报告，但具体的报告细节由各个实现自行决定。

当一个数据报从本地网络到达互联网协议模块时，要么存在一个待处理的用户 RECV 调用，指向该数据报，要么不存在。在第一种情况下，待处理的调用会被满足，即将数据报中的信息传递给用户。在第二种情况下，用户被通知有待处理的数据报。如果指定的用户不存在，则会向发送方返回一个 ICMP 错误消息，并丢弃该数据。

通知用户的方式可以是伪中断或类似机制，具体取决于实现所处的操作系统环境。

用户的 RECV 调用可以立即由待处理的数据报满足，也可以保持挂起状态，直到有数据报到达。

在发送调用中，源地址会被包含在内，以防发送主机拥有多个地址（如多个物理连接或逻辑地址）。互联网模块必须检查源地址是否为该主机的合法地址。

实现还可以允许或要求调用互联网模块，以表示对某一类数据报（例如，协议字段具有特定值的所有数据报）的兴趣或排他使用权。

本节功能上描述了 USER/IP 接口。所用符号类似于大多数高级语言中的过程或函数调用，但这种用法并不排除陷阱类型的服务调用（如 SVC、UUO、EMT）或任何其他形式的进程间通信。

---

[第33页]

1981年9月
互联网协议

附录A：示例与场景

示例1：

这是一个最小数据承载互联网数据报的示例：

以下是英文内容的中文翻译：

```
                                    
    0                   1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |版本=4  |IHL=5  |服务类型|        总长度=21             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      标识=111     |标志=0|   片偏移=0   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   时间=123  |  协议=1 |        头部校验和        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         源地址                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      目的地址                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     数据     |                                                
   +-+-+-+-+-+-+-+-+                                                

                       互联网数据报示例

                               图5。

  注意，每个刻度代表一个比特位置。

  这是一个基于互联网协议第4版的互联网数据报；互联网头部由五个32位字组成，数据报的总长度为21个八位字节。此数据报是一个完整的数据报（非碎片）。


















[第34页]                                                               



1981年9月                                                          
                                                       互联网协议



示例2：

  在这个例子中，我们首先展示一个中等大小的互联网数据报（452个数据八位字节），然后展示两个可能由该数据报碎片化产生的互联网碎片，如果允许的最大传输单元为280个八位字节。
```

以下是英文内容的中文翻译：

```
                                    
    0                   1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |版本=4  |IHL=5  |服务类型|       总长度=472             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     标识=111     |标志=0| 片偏移=0  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   时间=123  | 协议=6  |        头部校验和             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         源地址                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      目的地址                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             数据                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             数据                              |
   \                                                               \
   \                                                               \
   |                             数据                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |             数据             |                                
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                

                       互联网数据报示例

                               图6。

















                                                               [第35页]



                                                          1981年9月
互联网协议



  现在，第一段片段是将数据报在经过256个数据八位字节后拆分而成的。
```

以下是该英文内容的中文翻译：

```
                                    
    0                   1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |版本= 4 |头部长度= 5 |服务类型|       总长度 = 276          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |标识= 111  |标志=1| 片偏移=0 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   时间=119  |协议=6  | 头部校验和                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         源地址                                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      目的地址                                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             数据                                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             数据                                |
   \                                                               \
   \                                                               \
   |                             数据                                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             数据                                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                       互联网分片示例

                               图7。





















[第36页]                                                               



1981年9月                                                          
                                                       互联网协议



  以及第二个分片。
```

以下是英文内容的中文翻译：

```
                                    
    0                   1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |版本=4  |IHL=5  |服务类型|       总长度=216             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     标识=111     |标志=0|  片偏移=32  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   时间=119  |协议=6|        头部校验和        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         源地址                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      目的地址                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             数据                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             数据                              |
   \                                                               \
   \                                                               \
   |                             数据                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |            数据               |                                
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                

                       示例互联网分片

                               图8。






















                                                               [第37页]



                                                          1981年9月
互联网协议



示例3：

  这里，我们展示一个包含选项的数据报的示例：
```

以下是英文内容的中文翻译：

```
                                    
    0                   1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |Ver= 4 |IHL= 8 |服务类型|       总长度 = 576             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |       标识 = 111    |标志=0| 片偏移 = 0                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   时间 = 123  |  协议 = 6 |       头部校验和                   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                        源地址                                 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      目的地址                                 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  选项代码 = x | 选项长度=3 | 选项值 | 选项代码 = x |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  选项长度=4 |        选项值             |  选项代码=1 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  选项代码=y |  选项长度=3 |  选项值 |  选项代码=0 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             数据                                |
   \                                                               \
   \                                                               \
   |                             数据                                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             数据                                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                       示例互联网数据报

                               图9。
















[第38页]                                                               



1981年9月                                                          
                                                       互联网协议



附录B：数据传输顺序

本文档中描述的头部和数据的传输顺序以字节（八位字节）为单位进行解析。每当图示显示一组字节时，这些字节的传输顺序即为它们在英语中阅读的正常顺序。例如，在以下图示中，字节按编号顺序进行传输。
```

以下是英文内容的中文翻译：

```
                                    
    0                   1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |       1       |       2       |       3       |       4       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |       5       |       6       |       7       |       8       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |       9       |      10       |      11       |      12       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                      字节的传输顺序

                               图 10.

每当一个八位字节代表一个数值时，图中的最左边的位是高位或最重要的位。也就是说，标记为0的位是最重要的位。例如，下面的图表示十进制的170。

                                    
                            0 1 2 3 4 5 6 7 
                           +-+-+-+-+-+-+-+-+
                           |1 0 1 0 1 0 1 0|
                           +-+-+-+-+-+-+-+-+

                          位的意义

                               图 11.

类似地，每当一个多八位字节字段代表一个数值时，整个字段的最左边的位是最高位。当多八位字节的数值被传输时，最高位的八位字节会先传输。









                                                               [第39页]



                                                          1981年9月
互联网协议






















































[第40页]                                                               



1981年9月                                                          
互联网协议



术语表



1822
          BBN报告1822，“主机与IMP互连的规范”。描述主机与ARPANET接口的规范。

ARPANET领导
          ARPANET消息在主机-IMP接口上的控制信息。

ARPANET消息
          在ARPANET中，主机与IMP之间的传输单位。最大尺寸约为1012个八位字节（8096比特）。

ARPANET数据包
          在ARPANET内部IMP之间使用的传输单位。最大尺寸约为126个八位字节（1008比特）。

目的地
          目的地址，互联网头字段。

DF
          在标志字段中携带的“不要分段”位。

标志
          携带各种控制标志的互联网头字段。

片偏移
          该互联网头字段指示一个片段在互联网数据报中的位置。
```

GGP
          网关到网关协议，主要在网关之间使用的协议，用于控制路由和其他网关功能。

header
          消息、段、数据报、包或数据块开头的控制信息。

ICMP
          互联网控制消息协议，嵌入在互联网模块中，用于网关与主机之间以及主机之间报告错误和提供路由建议。

                                                               [第41页]

                                                          1981年9月
互联网协议
术语表

Identification
          互联网头部中的一个字段，携带由发送方分配的标识值，用于帮助重组数据报的碎片。

IHL
          互联网头部长度字段，表示互联网头部的长度，以32位字（字）为单位。

IMP
          接口消息处理器，ARPANET的包交换机。

Internet Address
          一个由四个字节（32位）组成的源或目的地址，包括网络字段和本地地址字段。

internet datagram
          在一对互联网模块之间交换的数据单位（包括互联网头部）。

internet fragment
          带有互联网头部的互联网数据报的一部分。

Local Address
          网络中主机的地址。互联网本地地址映射到网络中的主机地址的方式相当灵活，允许多对一的映射。

MF
          互联网头部标志字段中的“更多碎片”标志。

module
          协议或其他程序的实现，通常以软件形式存在。

more-fragments flag
          一个标志，指示此互联网数据报是否包含最后一个碎片，信息载于互联网头部的Flags字段中。

NFB
          互联网碎片中数据部分的碎片块数，即以8个字节为单位测量的数据段长度。

[第42页]                                                               

1981年9月                                                          
互联网协议
术语表

octet
          一个八位字节。

Options
          互联网头部的Options字段可以包含多个选项，每个选项可能由多个字节组成。

Padding
          互联网头部的Padding字段用于确保数据从32位字边界开始。填充内容为零。

协议
          在本文档中，指的是下一层协议标识符，
          一个互联网头字段。

剩余
          互联网地址的本地地址部分。

源
          源地址，互联网头字段。

TCP
          传输控制协议：一种在互联网环境中实现可靠通信的主机到主机协议。

TCP段
          TCP模块之间交换的数据单位（包括TCP头部）。

TFTP
          简单文件传输协议：一种基于UDP的简易文件传输协议。

生存时间（TTL）
          一个互联网头字段，表示该互联网数据报可能存在的最大时间。

服务类型（TOS）
          服务类型字段。

总长度
          互联网头字段“总长度”表示数据报的长度（以八位字节为单位），包括互联网头和数据。

TTL
          生存时间（Time to Live）

服务类型（Type of Service）
          一个互联网头字段，指示该互联网数据报的服务类型（或质量）。

UDP
          用户数据报协议：一种面向事务的用户层协议。

用户
          使用互联网协议的用户。这可以是更高层的协议模块、应用程序或网关程序。

版本
          版本字段，指示互联网头的格式。




































[第44页]                                                               



1981年9月                                                          
互联网协议
词汇表



服务类型（Type of Service）
          一个互联网头字段，指示该互联网数据报的服务类型（或质量）。

UDP
          用户数据报协议：一种面向事务的用户层协议。

用户
          使用互联网协议的用户。这可以是更高层的协议模块、应用程序或网关程序。

版本
          版本字段，指示互联网头的格式。




































[第44页]                                                               



1981年9月                                                          
互联网协议



参考文献



[1]  Cerf, V.，“互联网互联的Catenet模型”，国防高级研究计划局信息处理技术办公室，IEN 48，1978年7月。

[2]  Bolt Beranek and Newman，“主机与IMP互连的规范”，BBN技术报告1822，修订版，1978年5月。

[3]  Postel, J.，“互联网控制消息协议——DARPA互联网程序协议规范”，RFC 792，南加州大学信息科学研究所，1981年9月。

[4]  Shoch, J.，“互联网命名、寻址与路由”，COMPCON，IEEE计算机学会，1978年秋。

[5]  Postel, J.，“地址映射”，RFC 796，南加州大学信息科学研究所，1981年9月。

[6]  Shoch, J.，“互联网协议中的分包碎片化”，《计算机网络》，第3卷，第1期，1979年2月。

[7]  Strazisar, V.，“如何构建网关”，IEN 109，Bolt Beranek and Newman，1979年8月。

[8]  Postel, J.，“服务映射”，RFC 795，南加州大学信息科学研究所，1981年9月。

[9] Postel, J.，《已分配号码》，RFC 790，美国南加州大学信息科学研究所，1981年9月。

【第45页】