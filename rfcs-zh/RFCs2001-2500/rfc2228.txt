# RFC 2228 中文翻译 (stub)
# 原文文件: ../../rfcs/RFCs2001-2500/rfc2228.txt

网络工作组                                        M. Horowitz
意见请求编号：2228                              Cygnus Solutions
更新编号：959                                                     S. Lunt
类别：标准轨道                                       Bellcore
                                                            1997年10月

                        FTP安全扩展

本备忘录的状态

   本文件为互联网社区制定的互联网标准轨道协议，旨在征求讨论和改进建议。请参阅当前版本的《互联网官方协议标准》（STD 1），了解该协议的标准化状态和最新进展。本备忘录的发行不受限制。

版权声明

   版权所有（C）互联网协会（1997年）。保留所有权利。

摘要

   本文件定义了对FTP规范STD 9、RFC 959《文件传输协议（FTP）》（1985年10月）的扩展。这些扩展在控制通道和数据通道上提供了强认证、完整性和机密性，新增了若干可选命令、应答和文件传输编码。

   本规范引入了以下新的可选命令：

      AUTH（认证/安全机制），
      ADAT（认证/安全数据），
      PROT（数据通道保护级别），
      PBSZ（保护缓冲区大小），
      CCC（清除命令通道），
      MIC（完整性保护命令），
      CONF（机密性保护命令），以及
      ENC（隐私保护命令）。

   还引入了一类新的应答类型（6yz），用于保护性应答。

   以上命令均非强制要求实现，但存在相互依赖关系。这些依赖关系在相关命令中有所说明。

   请注意，本规范与STD 9、RFC 959兼容。



Horowitz & Lunt             标准轨道                     [第1页]


RFC 2228                FTP安全扩展             1997年10月


1.  引言

   目前在STD 9、RFC 959中定义的文件传输协议（FTP）在互联网中的实现，使用明文传递用户名和密码来验证客户端与服务器的身份（通过USER和PASS命令）。除“匿名”FTP存档等特殊服务外，这存在安全风险——密码可能在本地和广域网监控中被窃取。这不仅可能帮助潜在攻击者获取密码，还可能限制FTP服务器对文件的访问权限，因为一些服务器无法或不愿接受固有的安全风险。

除了以安全方式验证用户的问题之外，还存在验证服务器、保护敏感数据和/或验证数据完整性的问题。攻击者可能仅通过监控网络就能够访问有价值或敏感的数据，或者通过主动手段删除或修改传输中的数据，从而破坏其完整性。主动攻击者还可能发起虚假文件传输到攻击者选择的站点，或在服务器上调用其他命令。目前，FTP没有任何机制对命令、应答或传输的数据进行加密或验证其真实性。需要注意的是，即使是匿名文件访问，这些安全服务也具有重要价值。

目前安全传输文件的做法通常包括：

1. 通过事先用手动分发的密钥加密的文件进行FTP传输，
2. 通过包含用手动分发的密钥加密的文件编码的电子邮件，
3. 通过PEM消息传递，
4. 通过增强版的rcp命令，使用Kerberos。

这些方法都不能被视为事实上的标准，也都不是完全交互式的。迫切需要一种在FTP协议内以一致的方式支持的安全文件传输方法，能够利用现有的安全基础设施和技术。如果要将这些安全服务引入协议，必须对FTP规范进行扩展，以实现互操作性。

尽管FTP控制连接遵循Telnet协议，且Telnet定义了认证和加密选项[TELNET-SEC]，[RFC-1123]明确禁止在控制连接上使用Telnet选项协商（除同步和IP之外），但Telnet的认证和加密选项并不提供仅用于完整性保护（没有机密性），也未涉及数据通道的保护。

2. FTP安全概述

在最高层面，FTP安全扩展旨在提供一种抽象机制，用于验证和/或授权连接，以及保护命令、应答和数据传输的完整性和/或机密性。

在FTP安全的背景下，认证是以安全的方式确认客户端和/或服务器身份的过程，通常采用加密技术。基本的FTP协议本身并没有认证的概念。

授权是验证用户登录的过程。基本的授权流程涉及USER、PASS和ACCT命令。通过FTP安全扩展，使用安全机制建立的认证也可以用来做出授权决策。

在没有安全扩展的情况下，通常所理解的客户端认证并不存在。FTP的授权是通过密码实现的，该密码以明文形式作为PASS命令的参数在网络上传输。持有此密码的用户被假定有权限以USER命令中指定的用户身份进行文件传输，但客户端的身份从未被安全确认。

FTP安全交互始于客户端向服务器发送AUTH命令，告知其希望使用的安全机制。服务器会接受该机制、拒绝该机制，或者在不支持安全扩展的服务器上完全拒绝该命令。客户端可以尝试多种安全机制，直到请求被服务器接受。这允许进行一种初步的协商（如果需要更复杂的协商，可以作为一种安全机制实现）。服务器的回复会指示客户端是否需要提供额外的数据以供安全机制解释。如果不需要，通常意味着该机制会以不同方式解释密码（由PASS命令指定），例如使用令牌或一次性密码系统。

如果服务器需要额外的安全信息，客户端和服务器将进入安全数据交换阶段。客户端会发送包含第一块安全数据的ADAT命令。服务器的回复会指示数据交换是否完成、是否出现错误，或是否需要更多数据。服务器的回复还可以包含供客户端解释的安全数据。如果需要更多数据，客户端会发送另一块包含下一部分数据的ADAT命令，并等待服务器回复。这个交换可以根据需要无限次进行。一旦完成，客户端和服务器就建立了安全关联。这个安全关联可能包括认证（客户端、服务器或双向认证）以及用于完整性和/或机密性的密钥信息，具体取决于所使用的机制。

这里所说的“安全数据”一词经过了慎重选择。安全数据交换的目的是建立一个安全关联（security association），这可能根本不涉及任何身份验证，如上所述。例如，Diffie-Hellman 密钥交换可以建立一个秘密密钥，但不进行任何身份验证。如果一个FTP服务器拥有一对RSA密钥，但客户端没有，那么客户端可以验证服务器的身份，但服务器无法验证客户端的身份。

一旦建立了安全关联，作为该关联一部分的身份验证可以用来代替或补充标准的用户名/密码交换，以授权用户连接到服务器。由USER命令指定的用户名始终是用来标识在服务器上的身份。

为了防止攻击者在控制流中插入或删除命令，如果安全关联支持完整性保护，则服务器和客户端必须在控制流上使用完整性保护，除非它们首先发送一个CCC命令以关闭此要求。完整性保护通过MIC和ENC命令以及63z响应码实现。CCC命令及其应答必须通过完整性保护传输。只有在未建立安全关联、协商的安全关联不支持完整性，或CCC命令已成功的情况下，命令和应答才可以在没有完整性保护的情况下传输（即明文或仅有机密性保护）。

一旦客户端和服务器通过PBSZ命令协商出一个可接受的缓冲区大小，用于在数据通道上传输受保护的数据，安全机制也可以用来保护数据通道的传输。

本规范未对策略作出具体规定。特别是，客户端和服务器的实现可以选择根据存在的安全关联，限制可以执行的操作。例如，服务器可能要求客户端通过某种安全机制进行授权，而不是使用密码；要求客户端提供一次性密码（OTP）令牌；要求在命令通道上至少提供完整性保护；或要求某些文件只能在加密状态下传输。匿名FTP客户端可能会拒绝在没有完整性保护的情况下进行文件传输，以确保下载文件的有效性。

没有特定的功能集是必须的，除非在下一节中描述的依赖关系。这意味着实现不需要具备认证、完整性或机密性功能，尽管没有这些功能的机制用处不大。例如，某个机制只实现完整性保护、一方认证和/或加密，或者只实现加密而不具备任何认证或完整性保护，或者实现其他任何子集的功能，如果政策或技术考虑使其变得可取。当然，一方可能出于政策要求比另一方能提供更强的保护，从而阻碍了完全的互操作性。

3. 新的FTP命令

以下命令是可选的，但彼此依赖。它们是对FTP访问控制命令的扩展。

这里记录的应答码通常被描述为建议使用的，而非强制要求。其意图是存在描述全部成功和失败模式的应答码，但允许服务器限制向客户端展示的信息。例如，服务器可能实现某个特定的安全机制，但出于政策限制不使用它。在这种情况下，服务器应以534应答码响应，但如果不希望透露不允许使用的机制被支持，则可以使用504应答码。如果服务器选择使用不同于建议的应答码，应尽量只在最后一位数字上有所不同。在所有情况下，服务器必须使用被记录为可以由收到的命令返回的应答码，并且该应答码必须以与情况相符的建议应答码相同的首位数字开头。

Horowitz 和 Lunt  规范追踪  [第5页]

RFC 2228  FTP安全扩展  1997年10月

认证/安全机制（AUTH）

- 参数字段是一个Telnet字符串，用于标识支持的机制。该字符串不区分大小写。值必须在IANA注册，除非以“X-”开头的值，保留供本地使用。

- 如果服务器不识别AUTH命令，必须以应答码500响应。这旨在涵盖大量未启用安全功能的FTP服务器，它们会对任何无法识别的命令返回500。如果服务器识别AUTH命令但未实现安全扩展，应以502应答码响应。

- 如果服务器不理解指定的安全机制，应以504应答码响应。

- 如果服务器不愿接受指定的安全机制，应以534应答码响应。

如果服务器无法接受所指定的安全机制，例如某个必需的资源不可用，应以回复码431进行响应。

如果服务器愿意接受所指定的安全机制，但需要安全数据，则必须以回复码334进行响应。

如果服务器愿意接受所指定的安全机制，并且不需要任何安全数据，则必须以回复码234进行响应。

当服务器以334回复码响应时，可以包含安全数据，具体内容在下一节中描述。

一些服务器允许重新发出AUTH命令，以建立新的认证。若接受该命令，则会清除与之前的FTP安全命令相关的任何状态。在这种情况下，服务器还必须要求用户重新授权（即重新发出部分或全部的USER、PASS和ACCT命令）（详见第4节关于“授权”在此上下文中的解释）。

---

**AUTHENTICATION/SECURITY DATA (ADAT)**

参数字段是一个Telnet字符串，表示经过Base64编码的安全数据（参见第9节“Base64编码”）。如果返回的回复码表示成功，服务器也可以使用“ADAT=base64data”格式的字符串作为回复的文本部分，以将安全数据返回给客户端。

这两种情况下的数据都与前一次AUTH命令指定的安全机制相关。ADAT命令及其相关回复允许客户端和服务器进行任意安全协议的通信。安全数据的交换必须包含足够的信息，使双方都能了解哪些可选功能可用。例如，如果客户端不支持数据加密，服务器必须知道这一点，以避免发送加密的命令通道回复。强烈建议安全机制提供命令通道的序列控制，以确保命令不会被删除、重新排序或重放。

ADAT命令必须在成功的AUTH命令之后发出，且在安全数据交换完成（无论成功与否）后不能再次发出，除非先发出一个AUTH命令以重置安全状态。

如果服务器尚未收到AUTH命令，或者之前的安全数据交换已完成但未通过AUTH命令重置安全状态，则应以回复码503进行响应。

如果服务器无法对参数进行Base64解码，应以回复码501进行响应。

如果服务器拒绝安全数据（例如，校验和失败），它应以回复码535进行响应。

如果服务器接受安全数据，并且需要额外的数据，它应以回复码335进行响应。

如果服务器接受安全数据，但不需要任何额外数据（即，安全数据交换已成功完成），它必须以回复码235进行响应。

如果服务器以235或335的回复码进行响应，则可以在回复的文本部分包含安全数据，具体如上所述。

---

如果ADAT命令返回错误，安全数据交换将失败，客户端必须重置其内部的安全状态。如果客户端与服务器不同步（例如，服务器对AUTH命令返回234回复码，但客户端还有数据要传输），则客户端必须重置服务器的安全状态。

---

保护缓冲区大小（PBSZ）

该参数是一个十进制整数，表示在文件传输过程中要发送或接收的编码数据块的最大大小（以字节为单位）。此数字不得超过用32位无符号整数能表示的最大值。

此命令允许FTP客户端和服务器协商连接的最大保护缓冲区大小。没有默认值；客户端必须在发出第一个PROT命令之前发出PBSZ命令。

PBSZ命令必须在成功完成安全数据交换之后发出。

如果服务器无法解析参数，或参数超出32位范围，应以回复码501进行响应。

如果服务器尚未与客户端完成安全数据交换，应以回复码503进行响应。

否则，服务器必须以回复码200进行响应。如果客户端提供的大小对服务器来说过大，服务器必须在回复的文本部分使用“PBSZ=数字”的字符串，指示一个较小的缓冲区大小。如果双方都指定了缓冲区大小，客户端和服务器必须使用较小的那个。

---

数据通道保护级别（PROT）

该参数是一个单一的Telnet字符代码，指定数据通道的保护级别。

此命令向服务器指示客户端和服务器将使用的安全保护类型。以下代码已被分配：

C - 纯文本（Clear）  
S - 安全（Safe）  
E - 机密（Confidential）  
P - 私有（Private）

如果没有指定其他保护级别，默认的保护级别为“清除（Clear）”。“清除”保护级别表示数据通道将传输文件的原始数据，没有应用任何安全措施。“安全（Safe）”保护级别表示数据将进行完整性保护。“机密（Confidential）”保护级别表示数据将进行保密保护。“私有（Private）”保护级别表示数据将同时进行完整性和保密保护。

合理的安全机制可能不会提供所有的数据通道保护级别。也可以在某一保护级别上提供比要求更高的保护（例如，某个机制可能提供“机密”保护，但由于API或其他考虑，将完整性保护包含在该编码中）。

在使用PROT命令之前，必须成功完成保护缓冲区大小的协商。

如果服务器不理解指定的保护级别，应以回复码504作出响应。

如果当前的安全机制不支持指定的保护级别，服务器应以回复码536作出响应。

如果服务器尚未与客户端完成保护缓冲区大小的协商，应以回复码503作出响应。

如果没有先发出PBSZ命令，PROT命令将被拒绝，服务器应回复503。

如果服务器不愿意接受指定的保护级别，应以回复码534作出响应。

如果服务器无法接受指定的保护级别，例如所需资源不可用，应以回复码431作出响应。

否则，服务器必须以回复码200表示已接受所请求的保护级别。

**清除命令通道（CCC）**

此命令不带参数。

在某些环境中，使用安全机制对客户端和服务器进行身份验证和/或授权，但不对后续命令进行完整性检查是可取的。这可能在IP安全已部署的环境中使用，确保主机已被验证，TCP流未被篡改，但希望进行用户身份验证。

如果在任何连接上允许未受保护的命令，那么攻击者可能会在控制流中插入命令，而服务器无法识别其是否有效。为了防止此类攻击，一旦安全数据交换成功完成，如果安全机制支持完整性保护，则必须使用完整性保护（通过MIC或ENC命令，以及631或632的应答），直到发出CCC命令以启用非完整性保护的控制通道消息。CCC命令本身也必须受到完整性保护。

一旦CCC命令成功完成，如果某个命令未受到保护，那么对此命令的应答也必须不受保护。这是为了支持与不支持保护的客户端的互操作性，一旦发出CCC命令。

此命令必须在成功完成安全数据交换之后才能执行。

如果该命令未进行完整性保护，服务器必须返回533应答码。

如果服务器不愿意关闭完整性要求，应返回534应答码。

否则，服务器应返回200应答码，表示现在可以在命令通道上使用未受保护的命令和应答。

完整性保护命令（MIC）、机密性保护命令（CONF）和隐私保护命令（ENC）

MIC的参数字段是一个Telnet字符串，由安全机制特定的消息完整性程序生成的经过Base64编码的“安全”消息组成。CONF的参数字段是一个Telnet字符串，由安全机制特定的机密性程序生成的经过Base64编码的“机密”消息组成。ENC的参数字段是一个Telnet字符串，由安全机制特定的消息完整性和机密性程序生成的经过Base64编码的“私密”消息组成。

服务器将对编码的消息进行解码和/或验证。

此命令必须在成功完成安全数据交换之后才能执行。

服务器可能要求在成功完成安全数据交换后，第一条命令必须是CCC，而不实现保护命令。在这种情况下，服务器应返回502应答码。

如果服务器无法对参数进行Base64解码，应返回501应答码。

如果服务器尚未与客户端完成安全数据交换，应返回503应答码。

如果服务器已使用支持完整性验证的机制与客户端完成了安全数据交换，并且由于政策或实现限制需要使用CCC命令，它应以503回复码进行响应。

如果服务器拒绝该命令，因为当前的安全机制不支持该命令，服务器应以537回复码进行响应。

如果服务器拒绝该命令（例如，校验和失败），它应以535回复码进行响应。

如果服务器不愿意接受该命令（例如，政策要求隐私，或者在收到CCC命令之前收到了CONF命令），它应以533回复码进行响应。

否则，该命令将被解释为FTP命令。可以不包含行结束码，但如果包含，必须是Telnet的行结束码，而非本地的行结束码。

服务器可能要求在某些或所有情况下，所有命令都受到保护。在这种情况下，除了MIC、CONF和ENC命令外，服务器应对其他命令返回533回复码。

4. 登录授权

安全数据交换可以在多方面以安全的方式确认客户端的身份。该身份可以作为登录授权过程的一个输入。

在对FTP登录命令（AUTH、PASS、ACCT）作出响应时，服务器可以选择改变RFC 959中规定的命令和应答顺序。此外，还提供一些新的应答码。

如果服务器愿意允许由USER命令指定的用户基于安全数据交换建立的身份登录，应以232回复码响应。

如果安全机制要求进行挑战/应答密码验证，应对USER命令返回336回复码。应答的文本部分应包含挑战信息。在这种情况下，客户端必须在提示输入密码之前，将挑战显示给用户。这对于提供对话框或其他模态输入的更复杂客户端或图形用户界面尤为重要。这些客户端应当注意不要在用户名发送到服务器之前提示输入密码，以免用户需要用336应答中的挑战信息来构造有效的密码。

5. 新的FTP应答码

新的应答码分为两类。第一类是由新的FTP安全命令引入的必要应答码。第二类是用于指示受保护应答的新应答类型。

5.1. 新的单独应答码

232 用户已登录，已通过安全数据交换获得授权。
234 安全数据交换完成。
235 [ADAT=base64数据]
    ；此回复表示安全数据交换已成功完成。方括号中的内容不应包含在回复中，但表示回复中的安全数据是可选的。

334 [ADAT=base64数据]
    ；此回复表示请求的安全机制正常，并包含供客户端用以构建下一条命令的安全数据。方括号中的内容不应包含在回复中，但表示回复中的安全数据是可选的。

335 [ADAT=base64数据]
    ；此回复表示安全数据是可接受的，但还需要更多数据以完成安全数据交换。方括号中的内容不应包含在回复中，但表示回复中的安全数据是可选的。

Horowitz 和 Lunt             标准追踪                    [第12页]

RFC 2228                FTP安全扩展                     1997年10月

336 用户名已确认，需要密码。挑战是“....”
    ；挑战的确切表示应由机制选择，以便对系统的人工用户来说是合理的。

431 需要一些不可用的资源以处理安全。

533 出于策略原因，命令保护级别被拒绝。
534 请求被拒绝，出于策略原因。
535 安全检查失败（哈希、序列等）。
536 请求的PROT级别不被机制支持。
537 安全机制不支持命令的保护级别。

5.2. 受保护的回复

引入了一种新的回复类型：

6yz   受保护的回复

    这种类型的回复有三种代码。第一种，回复码631，表示完整性受保护的回复。第二种，回复码632，表示机密性和完整性受保护的回复。第三种，回复码633，表示机密性受保护的回复。

    631回复的文本部分是一个Telnet字符串，由安全机制特定的消息完整性程序生成的经过Base64编码的“安全”消息组成。632回复的文本部分是一个Telnet字符串，由安全机制特定的消息机密性和完整性程序生成的经过Base64编码的“私密”消息组成。633回复的文本部分是一个Telnet字符串，由安全机制特定的消息机密性程序生成的经过Base64编码的“机密”消息组成。

客户端将对编码的回复进行解码和验证。解码或验证回复时出现的失败处理方式依赖于具体的实现。可以不包含行尾码，但如果包含，必须是Telnet的行尾码，而非本地的行尾码。

只有在安全数据交换成功后，才能发送受保护的回复。

63z回复可能是多行回复。在这种情况下，明文回复必须被拆分成多个片段。每个片段都必须经过保护，然后以Base64编码，按顺序放入多行回复中。明文回复中的换行符与编码回复中的换行符之间不必一一对应。编码回复中的明文内容必须包含Telnet的行尾码，最后一个行尾码是可选的。

多行回复的格式必须比RFC 959中的续行规范更为严格。特别是，每行（除了最后一行）必须由回复码、紧接着的连字符“-”和Base64编码的回复片段组成。

例如，如果明文回复为：

```
123-First line
Second line
  234 A line beginning with numbers
123 The last line
```

那么，经过保护的回复可能是以下任意一种（第一个示例仅为了适应排版而换行）：

```
631 base64(protect("123-First line\r\nSecond line\r\n  234 A line beginning with numbers\r\n"))
631-base64(protect("123-First line\r\n"))
631-base64(protect("Second line\r\n"))
631-base64(protect("  234 A line beginning with numbers\r\n"))
631-base64(protect("123 The last line"))
```

或者：

```
631-base64(protect("123-First line\r\nSecond line\r\n  234 A line b"))
631-base64(protect("eginning with numbers\r\n123 The last line\r\n"))
```

6. 数据通道封装

当客户端与服务器之间的数据传输受到保护（无论是双向）时，必须进行特定的转换和封装，以确保接收方能够正确解码传输的文件。

在进行所有与表示类型、文件结构和传输模式相关的转换之后，发送方必须应用所有的保护服务。为了保护的目的，通过数据通道传输的数据应被视为字节流。

在以认证方式进行数据传输时，认证检查是在文件的每个单独块上进行的，而不是在整个文件上进行。因此，可能会出现插入攻击，即在数据流中插入经过认证的块（即重放攻击），这些块会被正确认证，但可能导致接收方未能检测到文件已被篡改。为了防范此类攻击，所采用的具体安全机制应包括防护措施。许多可与附录 I中的规范配合使用的 GSS-API 机制，以及附录 II中的 Kerberos 机制，都具备此类防护能力。

发送方必须将输入的字节流分割成若干块，每个块在使用特定的安全机制进行编码后，其大小不得超过客户端通过 PBSZ 命令协商的缓冲区大小。每个块必须先进行编码，然后在传输时，将编码后块的长度（以四个字节的无符号整数，最高字节在前）作为前缀一同发送。

当到达文件末尾时，发送方必须编码一个零字节的块，并在关闭数据连接之前，将此最终块发送给接收方。

接收方将读取四字节的长度信息，然后读取相应长度的数据块，接着使用特定的安全机制对该块进行解码和验证。此过程必须重复，直到接收到编码了零字节的块为止，这表示编码的字节流已结束。

与表示类型、文件结构和传输模式相关的任何变换，都由接收方在上述字节流基础上进行处理。

在块传输模式下，发送方（明文）缓冲区的大小与块大小无关。

如果当前的保护级别未达到服务器对特定文件传输所要求的安全级别，服务器将在收到 STOR、STOU、RETR、LIST、NLST 或 APPE 命令时返回 534 响应。

如果在数据传输过程中（包括尝试发送超过协商最大缓冲区大小的缓冲区）任何数据保护服务失败，服务器将在对应的数据传输命令（STOR、STOU、RETR、LIST、NLST 或 APPE）上返回 535 响应。

7. 潜在的策略考虑

虽然对客户端和服务器的策略没有限制，但有一些建议是实现时应考虑的。

一旦发生安全数据交换，服务器应要求所有命令都受到保护（包括完整性和/或机密性），并且应保护所有的应答。应答应采用与产生它们的命令相同的保护级别。这包括指示MIC、CONF和ENC命令失败的应答。特别是，要求AUTH和ADAT受到保护并没有多大意义；而要求PROT和PBSZ受到保护则是有意义且有用的。尤其是不建议使用CCC，但为了实现不同实现之间的互操作性，定义了该功能，可能希望支持此功能。

客户端应尽可能对PASS命令进行加密。如果服务器知道可以使用加密，服务器有理由拒绝接受未加密的PASS命令。

虽然没有强制要求实现安全命令，但建议实现应提供所有支持的机制所能实现的命令，考虑到支持的机制和站点的政策（例如出口控制）。

8.  声明性规范

这些部分模仿RFC 959的第5.3和5.4节，描述相同的信息，但不包括标准FTP命令和应答。

8.1.  FTP安全命令及参数

```
AUTH <SP> <机制名称> <CRLF>
ADAT <SP> <Base64数据> <CRLF>
PROT <SP> <保护码> <CRLF>
PBSZ <SP> <十进制整数> <CRLF>
MIC <SP> <Base64数据> <CRLF>
CONF <SP> <Base64数据> <CRLF>
ENC <SP> <Base64数据> <CRLF>
```

<机制名称> ::= <字符串>  
<Base64数据> ::= <字符串>（必须按照第9节的描述进行格式化）  
<保护码> ::= C | S | E | P  
<十进制整数> ::= 任何从1到(2^32)-1的十进制整数

Horowitz 和 Lunt  规范追踪  [第16页]

RFC 2228  FTP安全扩展  1997年10月

8.2.  命令-应答序列

安全关联设置
   认证（AUTH）
      234
      334
      502, 504, 534, 431
      500, 501, 421
   ADAT
      235
      335
      503, 501, 535
      500, 501, 421
数据保护协商命令
   PBSZ
      200
      503
      500, 501, 421, 530
   PROT
      200
      504, 536, 503, 534, 431
      500, 501, 421, 530
命令通道保护命令
   MIC
      535, 533
      500, 501, 421
   CONF
      535, 533
      500, 501, 421
   ENC
      535, 533
      500, 501, 421
安全增强登录命令（仅列出新回复）
   USER
      232
      336
数据通道命令（仅列出新回复）
   STOR
      534, 535
   STOU
      534, 535
   RETR
      534, 535
   LIST
      534, 535
   NLST
      534, 535
   APPE
      534, 535

除了这些回复码外，任何安全命令还可能返回
500、501、502、533或421。 一旦安全数据交换成功完成，任何FTP命令都可能返回封装在631、632或633中的回复码。

---

Horowitz 和 Lunt  规范追踪  [第17页]

RFC 2228  FTP安全扩展  1997年10月

9. 状态图

本节包括一个状态图，展示了在安全增强的FTP实现中认证和授权的流程。矩形块表示客户端必须发出命令的状态，菱形块表示服务器必须发出响应的状态。

以下是英文内容的中文翻译：

```
          ,------------------,  用户
       __\| 未认证           |_________\
      |  /| (新连接)         |         /|
      |   `------------------'          |
      |            |                    |
      |            | 认证               |
      |            V                    |
      |           / \                   |
      | 4yz,5yz  /   \   234            |
      |<--------<     >------------->.  |
      |          \   /               |  |
      |           \_/                |  |
      |            |                 |  |
      |            | 334             |  |
      |            V                 |  |
      |  ,--------------------,      |  |
      |  | 需要安全数据       |<--.  |  |
      |  `--------------------'   |  |  |
      |            |              |  |  |
      |            |  ADAT        |  |  |
      |            V              |  |  |
      |           / \             |  |  |
      | 4yz,5yz  /   \   335      |  |  |
      `<--------<     >-----------'  |  |
                 \   /               |  |
                  \_/                |  |
                   |                 |  |
                   | 235             |  |
                   V                 |  |
           ,---------------.         |  |
      ,--->| 认证已通过       |<--------'  |  客户端和服务器完成认证后
      |    `---------------'            |  如果具有完整性保护，则命令必须
      |            |                    |  进行完整性保护。可以发出
      |            | 用户               |  CCC命令以放宽此限制。
      |            |                    |
      |            |<-------------------'
      |            V
```

如下是英文内容的中文翻译：

```

      |           / \
      | 4yz,5yz  /   \   2yz
      |<--------<     >------------->.
      |          \   /               |
      |           \_/                |
      |            |                 |
      |            | 3yz             |
      |            V                 |
      |    ,---------------.         |
      |    | 需要密码      |         |
      |    `---------------'         |
      |            |                 |
      |            | 密码（PASS）    |
      |            V                 |
      |           / \                |
      | 4yz,5yz  /   \   2yz         |
      |<--------<     >------------->|
      |          \   /               |
      |           \_/                |
      |            |                 |
      |            | 3yz             |
      |            V                 |
      |    ,--------------.          |
      |    | 需要账号      |          |
      |    `--------------'          |
      |            |                 |
      |            | 账号（ACCT）   |
      |            V                 |
      |           / \                |
      | 4yz,5yz  /   \   2yz         |
      `<--------<     >------------->|
                 \   /               |
                  \_/                |
                   |                 |
                   | 3yz             |
                   V                 |
             ,-------------.         |
             | 已授权（登录）|/________|
             |               |\
             `--------------'











霍洛威茨 & 伦特             标准追踪                    [第20页]


RFC 2228                FTP安全扩展                1997年10月


10.  基本64编码

   基本64编码与[RFC-1421]第4.3.2.4节中描述的可打印编码相同，唯一不同的是编码中不得包含换行符。该编码定义如下。

   从左到右，机制特定保护例程产生的比特串被编码成在所有站点都能通用表示的字符，尽管这些字符的比特模式不一定相同（例如，字符"E"在基于ASCII的系统中用十六进制45表示，在EBCDIC系统中用十六进制C5表示，但这两种表示的本地意义是等价的）。

   使用国际字母表IA5的64字符子集，每个可打印字符代表6比特信息。（建议的字符子集在IA5和ASCII中表示相同。）字符"="表示在可打印编码过程中用于填充的特殊处理功能。
```

编码过程将24位输入比特组表示为4个编码字符的输出字符串。从左到右处理由安全机制特定消息保护程序输出的24位输入组，每个6位组用作64个可打印字符数组的索引，即"[A-Z][a-z][0-9]+/"。索引所指的字符被放入输出字符串中。这些字符的选择旨在具有普遍的可表示性，并且该集合排除了对Telnet具有特殊意义的字符（例如"<CR>"、"<LF>"、IAC）。

如果在消息末尾的输入组中少于24位，则会进行特殊处理。每个编码单元在消息结束时总是完整完成。当输入组中的输入比特少于24位时，会在右侧添加零比特，以形成完整的6位组。未用于表示实际输入数据的输出字符位置将设置为"="。由于所有规范编码的输出都是完整的字节数，因此可能出现以下情况：(1) 最后一个编码量的输入是24位的整数倍，此时编码输出的最后一单元将是4个字符的整数倍，没有"="填充；(2) 最后一个编码量的输入恰好为8位，此时编码输出的最后一单元将是两个字符，后跟两个"="填充字符；(3) 最后一个编码量的输入恰好为16位，此时编码输出的最后一单元将是三个字符，后跟一个"="填充字符。

实现者必须牢记，ADAT、MIC、CONF和ENC命令中的Base64编码，以及63z应答中的编码，可能会非常长。因此，必须在处理之前读取整行内容。可能需要在控制通道上连续多次读取。仅仅因为编码过长而拒绝包含Base64编码的命令是不合适的（前提是解码在其被发送的上下文中是格式正确的）。

在读取包含Base64编码的命令和应答时，不应忽略大小写。

11. 安全注意事项

本文档的全部内容都涉及与文件传输协议相关的安全考虑。

第三方文件传输无法使用这些扩展进行安全保护，因为在两个服务器之间无法建立安全上下文（没有控制连接用于传递ADAT令牌）。在此方面的进一步工作将被推迟。

12. 致谢

我想感谢CAT工作组的成员，以及所有在“cat-ietf@mit.edu”邮件列表上讨论的参与者，感谢他们为本文件所做的贡献。特别感谢Sam Sjogren、John Linn、Ted Ts'o、Jordan Brown、Michael Kogut、Derrick Brashear、John Gardiner Myers、Denis Pinkas和Karri Balk，他们为本工作做出了贡献。当然，没有Steve Lunt——本文件前六个版本的作者——的努力，这份文件根本不存在。

13. 参考文献

[TELNET-SEC] Borman, D.，“Telnet认证与加密选项”，进行中。

[RFC-1123] Braden, R.，“互联网主机的需求——应用与支持”，STD 3，RFC 1123，1989年10月。

[RFC-1421] Linn, J.，“互联网电子邮件的隐私增强：第一部分：消息加密与认证程序”，RFC 1421，1993年2月。

Horowitz & Lunt             标准轨道                    [第22页]

RFC 2228                FTP安全扩展                1997年10月

14. 作者联系方式

Marc Horowitz  
Cygnus Solutions  
955 Massachusetts Avenue  
剑桥，马萨诸塞州 02139  
电话：+1 617 354 7688  
电子邮件：marc@cygnus.com

（以下为空白页和重复的页脚信息，无需翻译）

Horowitz & Lunt             标准轨道                    [第23页]

RFC 2228                FTP安全扩展                1997年10月

附录一：基于GSSAPI的规范

为了最大化新安全机制的实用性，建议将新机制作为GSSAPI机制实现，而非作为FTP安全机制。这将使现有的FTP实现更容易支持新机制，因为几乎无需更改代码。此外，该机制还可以被其他基于GSSAPI的协议（如IMAP）使用，无需机制设计者进行额外的规范或实现工作。

所有采用GSSAPI的机制（用于AUTH命令）对应的安全机制名称为GSSAPI。如果服务器支持采用GSSAPI的安全机制，则必须以响应代码334回应，表示接下来将期待ADAT命令。

客户端必须通过调用 GSS_Init_Sec_Context 来开始认证交换，将 input_context_handle 设置为 0（初始状态），并将 targ_name 设置为由 GSS_Import_Name 使用 input_name_type 为 Host-Based Service 和 input_name_string 为 "ftp@hostname" 调用所得的 output_name，其中 "hostname" 是服务器的完全限定域名，所有字母均为小写。（如果失败，客户端可以尝试使用 input_name_string 为 "host@hostname"。）然后，输出的 token 必须进行 Base64 编码，并作为 ADAT 命令的参数发送给服务器。如果 GSS_Init_Sec_Context 返回 GSS_S_CONTINUE_NEEDED，则客户端应预期在对 ADAT 命令的回复中收到一个 token。该 token 后续必须传递给另一次 GSS_Init_Sec_Context 调用。在这种情况下，如果 GSS_Init_Sec_Context 没有返回 output_token，则说明之前的 ADAT 命令的回复代码应为 235。如果 GSS_Init_Sec_Context 返回 GSS_S_COMPLETE，则表示不再需要服务器返回其他 tokens，客户端应认为服务器已被认证。

服务器必须对 ADAT 命令的参数进行 Base64 解码，并将解码得到的 token 传递给 GSS_Accept_Sec_Context 作为 input_token，acceptor_cred_handle 设置为 NULL（使用默认凭据），input_context_handle 初始为 0。如果返回了 output_token，则必须进行 Base64 编码，并在回复文本中包含 "ADAT=base64string" 来返回给客户端。如果 GSS_Accept_Sec_Context 返回 GSS_S_COMPLETE，则回复代码必须为 235，服务器应认为客户端已被认证。如果返回 GSS_S_CONTINUE_NEEDED，则回复代码必须为 335。否则，回复代码应为 535，且回复文本应包含描述性错误信息。

GSS_Init_Sec_Context 和 GSS_Accept_Sec_Context 的 chan_bindings 输入应使用客户端和服务器的互联网地址，分别作为发起者和接受者的地址。两者的地址类型都应为 GSS_C_AF_INET，不应指定任何应用数据。

由于 GSSAPI 支持对安全上下文的匿名对等体，因此客户端对服务器的认证可能实际上并未建立明确的身份。

与 MIC 命令、631 回复和安全文件传输相关的过程为：

- 发送端：GSS_Wrap，conf_flag 设置为 FALSE
- 接收端：GSS_Unwrap

与 ENC 命令、632 回复和私有文件传输相关的过程为：

- 发送端：GSS_Wrap，conf_flag 设置为 TRUE
- 接收端：GSS_Unwrap

不支持 CONF 命令和 633 回复。

客户端和服务器都应检查 conf_avail 的值，以确定对等方是否支持保密服务。

当安全状态被重置（当第二次接收到 AUTH，或接收到 REIN 时），应通过调用 GSS_Delete_sec_context 函数来完成。

附录二：基于 Kerberos 版本4的规范

与 Kerberos 版本4相关的安全机制名称（用于 AUTH 命令）为 KERBEROS_V4。如果服务器支持 KERBEROS_V4，则必须以响应代码 334 回复，表示接下来预期收到 ADAT 命令。

客户端必须通过调用 krb_mk_req(3)，使用主体现名为 "ftp"、实例为服务器规范主机名（全部小写，参考 krb_get_phost(3) 返回的值）、服务器的领域名（参考 krb_realmofhost(3)）以及任意校验和，来获取一个针对 Kerberos 主体 "ftp.hostname@realm" 的票据。然后，将该票据进行 Base64 编码，并作为 ADAT 命令的参数发送。

如果 "ftp" 主体名未在 Kerberos 数据库中注册为有效主体，则客户端可以退而使用 "rcmd" 主体名（实例和领域相同）。但服务器必须只接受其中一种主体名，不能接受两者。通常，如果服务器在其 srvtab 文件中有 "ftp" 主体的密钥，则必须只使用该主体，否则只能使用 "rcmd" 主体。

服务器应对 ADAT 命令的参数进行 Base64 解码，并将结果传递给 krb_rd_req(3)。服务器还应将认证者中的校验和加一，转换为网络字节序（最高有效字节在前），并使用 krb_mk_safe(3) 进行签名，然后将结果进行 Base64 编码。成功后，服务器应以 235 代码回复客户端，并在回复文本中包含 "ADAT=base64string"。失败时，服务器应回复 535。

收到服务器的 235 回复后，客户端应解析回复文本中的 Base64 编码数据，进行解码，转换为网络字节序，并将结果传递给 krb_rd_safe(3)。如果解码后得到的校验和等于之前发送的值加一，客户端应认为服务器已成功认证。

与 MIC 命令、631 回复和安全文件传输相关的流程为：
- 发送端：krb_mk_safe(3)
- 接收端：krb_rd_safe(3)

与 ENC 命令、632 回复和私有文件传输相关的流程为：
- 发送端：krb_mk_priv(3)
- 接收端：krb_rd_priv(3)

不支持 CONF 命令和 633 回复。

请注意，关于KERBEROS_V4的此规范不包含协商备用完整性和机密性方案的条款。另请注意，ADAT交换并不传达对端是否支持机密性服务。

为了保持在允许的PBSZ范围内，实施者必须注意到，当通过krb_mk_safe(3)处理时，明文缓冲区将增加31字节；而通过krb_mk_priv(3)处理时，将增加26字节。

---

Horowitz 和 Lunt             标准轨道                    [第26页]

RFC 2228                FTP安全扩展             1997年10月

完整版权声明

版权所有 (C) 互联网协会（1997年）。保留所有权利。

本文件及其翻译版本可以被复制并提供给他人，也可以准备、复制、出版和分发其评论、说明或协助实现的派生作品，全部或部分，且不受任何限制，前提是所有此类副本和派生作品都必须包含上述版权声明和本段内容。然而，本文件本身不得以任何方式修改，例如删除版权声明或对互联网协会或其他互联网组织的引用，除非是为了制定互联网标准的目的，在此情况下必须遵循互联网标准流程中的版权规定，或为了将其翻译成非英语的其他语言。

上述授予的有限权限是永久性的，不会被互联网协会或其继任者或受让人撤销。

本文件及其中包含的信息是“按原样”提供的，互联网协会和互联网工程任务组对其不作任何明示或暗示的保证，包括但不限于保证其使用不会侵犯任何权利或具有适销性或适合特定用途的隐含保证。