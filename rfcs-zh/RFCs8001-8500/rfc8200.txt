# RFC 8200 中文翻译 (stub)
# 原文文件: ../../rfcs/RFCs8001-8500/rfc8200.txt

互联网工程任务组（IETF）                        S. Deering
意见征求稿：8200                                       已退休
标准：86                                                        R. Hinden
废止：2460                                     Check Point Software
标准轨道类别：标准追踪                                      2017年7月
ISSN：2070-1721


           互联网协议第6版（IPv6）规范

摘要

   本文档规定了互联网协议（IPv6）的第6版。  
   它废止RFC 2460。

本备忘录的状态

   这是一个互联网标准追踪文档。

   本文档由互联网工程任务组（IETF）制定。  
   它代表了IETF社区的共识。  
   已经过公众审查，并获得互联网工程指导组（IESG）批准发布。  
   关于互联网标准的更多信息，请参见RFC 7841第2节。

   有关本文件当前状态、任何勘误以及如何提供反馈的信息，  
   可访问 http://www.rfc-editor.org/info/rfc8200。























Deering & Hinden             标准追踪                    [第1页]


RFC 8200                   IPv6规范                  2017年7月


版权声明

   版权所有（c）2017年IETF信托及本文档作者。  
   保留所有权利。

   本文档受BCP 78和IETF信托关于IETF文档的法律规定（http://trustee.ietf.org/license-info）约束，  
   以发布之日的规定为准。  
   请仔细阅读这些文件，它们描述了您对本文件的权利和限制。  
   从本文档中提取的代码组件必须包括简化BSD许可证文本，详见信托法律规定第4.e节，  
   并且在没有担保的情况下提供，如简化BSD许可证所述。

   本文档可能包含在2008年11月10日之前发布或公开的IETF文档或贡献中的内容。  
   控制部分此类内容版权的人可能未授予IETF信托允许在IETF标准流程之外修改此类内容的权利。  
   未获得控制此类内容版权的人士的充分许可，  
   本文档不得在IETF标准流程之外修改，也不得在IETF标准流程之外创建其派生作品，  
   除非将其格式化为RFC发布或翻译成非英语语言。























Deering & Hinden             标准追踪                    [第2页]


RFC 8200                   IPv6规范                  2017年7月


目录

   1.  引言  . . . . . . . . . . . . . . . . . . . . . . . .   4
   2.  术语定义 . . . . . . . . . . . . . . . . . . . . . .   5
   3.  IPv6头部格式  . . . . . . . . . . . . . . . . . .   6
   4.  IPv6扩展头部  . . . . . . . . . . . . . . . . . .   7
     4.1.  扩展头部顺序  . . . . . . . . . . . . . . . .  10
     4.2.  选项 . . . . . . . . . . . . . . . . . . . . .  11
     4.3.  每跳选项头部  . . . . . . . . . . . . . . .  13
     4.4.  路由头部  . . . . . . . . . . . . . . . . .  14
     4.5.  分片头部  . . . . . . . . . . . . . . . .  15
     4.6.  目的地选项头部  . . . . . . . . . . . .  23
     4.7.  无后续头部  . . . . . . . . . . . . .  24
     4.8.  定义新扩展头部和选项  . . . . . .  24
   5.  数据包大小问题  . . . . . . . . . . . . .  25
   6.  流标签  . . . . . . . . . . . . . . . . .  26
   7.  流量类别  . . . . . . . . . . . . . . .  26
   8.  上层协议问题  . . . . . . . . . . . . .  27
     8.1.  上层校验和  . . . . . . . . . .  27
     8.2.  最大数据包生存时间  . . . . .  28
     8.3.  最大上层有效载荷大小  . . .  29
     8.4.  对携带路由头的包的响应  . .  29
   9.  IANA考虑事项  . . . . . . . . . . .  29
   10. 安全考虑  . . . . . . . . . . . .  30
   11. 参考文献  . . . . . . . . . . .  32
     11.1.  核心参考文献  . . . . . .  32
     11.2.  资料性参考文献  . . . . .  33
   附录A.  选项格式指南  . . . . . . .  36
   附录B.  自RFC 2460以来的变更  . .  39
   致谢  . . . . . . . . . . . . . . . .  42
   作者联系方式  . . . . . . . . . . .  42




















Deering & Hinden             标准追踪                    [第3页]


RFC 8200                   IPv6规范                  2017年7月


1.  引言

   IPv6（互联网协议第6版）是一种新的互联网协议（IP）版本，  
   设计为IPv4（第4版）[RFC791]的继任者。  
   IPv4到IPv6的主要变化包括：

      o  扩展的地址能力

         IPv6将IP地址长度从32位增加到128位，以支持更高层次的地址层级，  
         更大量的可寻址节点，以及更简便的地址自动配置。  
         通过在多播地址中添加“作用域”字段，提升多播路由的可扩展性。  
         还定义了一种新地址类型，称为“任播地址”；它用于将数据包发送到一组节点中的任意一个。

      o  头部格式简化

         一些IPv4头部字段被删除或设为可选，以减少包处理的常规成本，  
         并限制IPv6头部的带宽消耗。

      o  改进的扩展和选项支持

         改变了IP头部选项的编码方式，使转发更高效，  
         对选项长度的限制更少，未来引入新选项更灵活。

      o  流标签功能

         增加了一项新功能，用于标记一系列由发送方请求在网络中作为单一流处理的数据包。

      o  认证和隐私功能

         规定了支持认证、数据完整性和（可选）数据机密性的扩展。

   本文档规定了IPv6的基本头部、最初定义的扩展头部和选项。  
   还讨论了数据包大小问题、流标签和流量类别的语义，以及IPv6对上层协议的影响。  
   IPv6地址的格式和语义在[RFC4291]中单独定义。  
   所有IPv6实现都必须包含的ICMP的IPv6版本在[RFC4443]中规定。

IPv6的数据传输顺序与IPv4相同，详见[RFC791]的附录B。

注意：由于本文件废止RFC 2460，任何引用本文件且指向RFC 2460的文档，应视为引用本文件。

2.  术语定义

node         实现IPv6的设备。

router       转发非明确指向自己的IPv6包的节点。（见下方注释）

host         不是路由器的任何节点。（见下方注释）

upper layer  直接在IPv6之上的协议层。例如，传输协议如TCP和UDP，控制协议如ICMP，路由协议如OSPF，以及在IPv6之上“隧道化”的互联网层或更低层协议，如IPX、AppleTalk或IPv6本身。

link         节点在链路层（即IPv6下方的层）上通信的媒介或设施。例如，以太网（简单或桥接）、PPP链路、X.25、帧中继或ATM网络，以及互联网层或更高层的“隧道”，如IPv4或IPv6上的隧道。

neighbors    连接在同一链路上的节点。

interface    节点连接到链路的接口。

address      IPv6层的接口标识符，代表一个或一组接口。

packet       IPv6头部加载荷。

link MTU     在链路上传输的最大传输单元，即最大包大小（以字节为单位）。

path MTU     源节点到目标节点路径上所有链路的最小链路MTU。

注意：具有多个接口的设备可以配置为转发来自某些（少于全部）接口的非自我目的包，并丢弃来自其他接口的非自我目的包。此类设备在接收来自（转发）前者接口的包时，必须遵守路由器的协议要求；在接收来自（非转发）后者接口的包时，必须遵守主机的协议要求。

3.  IPv6头部格式

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |版本| 流量类别 |           流标签                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |         有效载荷长度        |  后续头部类型  |   跳数限制   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   +                                                               +
   |                                                               |
   +                         源地址                                +
   |                                                               |
   +                                                               +
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   +                                                               +
   |                                                               |
   +                     目的地址                                   +
   |                                                               |
   +                                                               +
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   版本：  4位，互联网协议版本号，值为6。

   流量类别：  8位，详见第7节。

   流标签：  20位，详见第6节。

   有效载荷长度：  16位无符号整数，表示IPv6有效载荷的长度（即此IPv6头之后的包的其余部分），以字节为单位。（注意：任何扩展头部（见第4节）都视为有效载荷的一部分，包括在长度计算中。）

   后续头部类型：  8位选择器，标识紧随IPv6头部之后的头部类型。使用与IPv4协议字段相同的值（[IANA-PN]）。

   跳数限制：  8位无符号整数，每经过一节点转发，值减1。若在转发时值为零或减到零，则包被丢弃。目的节点不应丢弃跳数为零的包，应正常处理。

   源地址：  128位，包的发起者地址。详见[RFC4291]。

   目的地址：  128位，包的预期接收者地址（可能不是最终接收者，如果存在路由头部）。详见[RFC4291]和第4.4节。

4.  IPv6扩展头部

在IPv6中，可选的互联网层信息被编码在单独的扩展头中，这些扩展头可以放置在IPv6头和上层协议头之间的包中。此类扩展头的数量较少，每个都由不同的“下一头部”值（Next Header）标识。

扩展头的编号来自IANA的IP协议编号（[IANA-PN]），这些编号与IPv4和IPv6使用的编号相同。在处理包中的一系列“下一头部”值时，第一个不是扩展头的值（[IANA-EH]）表示包中的下一项是相应的上层协议头。如果没有上层协议头，则使用特殊的“无下一头部”值。

如这些示例所示，一个IPv6包可以携带零个、一个或多个扩展头，每个扩展头由前一个头的“下一头部”字段标识：

+---------------+------------------------
|  IPv6头部     | TCP头部 + 数据
|               |
| 下一头部 =    |
|      TCP      |
+---------------+------------------------

+---------------+----------------+------------------------
|  IPv6头部     | 路由头        | TCP头部 + 数据
|               |                |
| 下一头部 =    |  下一头部 =    |
|    路由       |      TCP       |
+---------------+----------------+------------------------

+---------------+----------------+-----------------+-----------------
|  IPv6头部     | 路由头        | 分段头        | TCP头部 + 数据
|               |                |                 |
| 下一头部 =    |  下一头部 =    |  下一头部 =   |
|    路由       |    分段        |      TCP      |
+---------------+----------------+-----------------+-----------------

除跳跃跳转选项头（Hop-by-Hop Options）外，扩展头在包的传递路径中不会被任何节点处理、插入或删除，直到包到达IPv6头中目标地址字段所指示的节点（或多播情况下的每个节点）。

跳跃跳转选项头不会被插入或删除，但可以由沿途的任何节点检查或处理，直到包到达目标节点（或多播中的每个节点）。当存在时，跳跃跳转选项头必须紧跟在IPv6头之后，其存在由IPv6头中“下一头部”字段的值为零表示。

注意：[RFC2460]要求所有节点必须检查和处理跳跃跳转选项头，但现在预计沿途节点只有在明确配置的情况下才会检查和处理。

在目的节点，按照IPv6头中的“下一头部”字段进行正常的多路复用，处理第一个扩展头或如果没有扩展头，则处理上层协议头。每个扩展头的内容和语义决定是否继续处理下一个头部。因此，扩展头必须严格按照它们在包中的出现顺序处理；接收方不能扫描包以寻找特定类型的扩展头，然后在处理所有前置扩展头之前处理该头。

如果在处理某个头部后，目的节点需要继续处理下一个头部，但当前头部中的“下一头部”值未被识别，节点应丢弃该包，并向源发送ICMP参数问题消息，ICMP代码值为1（“遇到未识别的下一头部类型”），ICMP指针字段应包含未识别值在原始包中的偏移量。如果节点在除IPv6头之外的任何头部中遇到“下一头部”值为零，也应采取相同的措施。

每个扩展头的长度都是8个八位字节的整数倍，以保持后续头部的8字节对齐。每个扩展头内的多字节字段应按其自然边界对齐，即宽度为n字节的字段应放在距离头部起始位置的整数倍n字节处，n可以是1、2、4或8。

完整的IPv6实现应包括以下扩展头的实现：

- 跳跃跳转选项
- 分段
- 目的选项
- 路由
- 认证
- 封装安全载荷

前四个在本文档中定义；后两个在[RFC4302]和[RFC4303]中定义。当前IPv6扩展头的列表可在[IANA-EH]查阅。

4.1 扩展头的顺序

当在同一包中使用多个扩展头时，建议它们按以下顺序出现：

1. IPv6头
2. 跳跃跳转选项头
3. 目的选项头（注1）
4. 路由头
5. 分段头
6. 认证头（注2）
7. 封装安全载荷头（注2）
8. 目的选项头（注3）
9. 上层协议头

注1：用于由IPv6目的地址字段中第一个目的地以及路由头中列出的后续目的地处理的选项。

注2：关于认证头和封装安全载荷头的相对顺序的其他建议，详见[RFC4303]。

注3：用于仅由包的最终目的地处理的选项。

每个扩展头应最多出现一次，除了目的选项头可以出现最多两次（一次在路由头之前，一次在上层协议头之前）。

如果上层协议头是另一个IPv6头（如IPv6隧道或封装在IPv6中），它可以后续附加自己的扩展头，这些扩展头也应遵循相同的顺序建议。

未来定义的其他扩展头，其顺序限制必须与上述头部的顺序关系明确规定。

IPv6节点必须接受并尝试以任何顺序和任何次数处理扩展头，除了跳跃跳转选项头仅能紧跟在IPv6头之后出现。尽管如此，强烈建议IPv6包的源遵循上述推荐顺序，除非后续规范修订了该建议。

4.2 选项

本文档中定义的两个扩展头——跳跃跳转选项头和目的选项头——携带可变数量的“选项”，这些选项采用类型-长度-值（TLV）编码，格式如下：

```
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Option Type  |  Opt Data Len |  Option Data  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- 选项类型（Option Type）：8位标识符，指示选项的类型。
- 选项数据长度（Opt Data Len）：8位无符号整数，表示该选项数据字段的长度（以字节为单位）。
- 选项数据（Option Data）：可变长度，特定于类型的选项数据。

头部中的选项序列必须严格按照在头部中出现的顺序处理；不能扫描头部寻找特定类型的选项并在处理所有前置选项之前处理该选项。

选项类型标识符在内部编码时，其最高两位（高位）指示在处理节点不识别该选项类型时应采取的动作：

- 00：跳过此选项，继续处理头部。
- 01：丢弃包。
- 10：丢弃包，并向源地址发送ICMP参数问题消息（代码2），指向未识别的选项类型的偏移量，无论目标地址是否为多播。
- 11：丢弃包，且仅当目标地址不是多播时，向源地址发送ICMP参数问题消息（代码2），指向未识别的选项类型。

选项类型的第三高位（第3位）指示该选项的数据是否可以在传输途中更改：

- 0：数据不可更改
- 1：数据可能更改

当包中存在认证头时，任何数据可能更改的选项，其整个选项数据字段在计算或验证包的认证值时必须视为全零。

选项类型的完整8位编号由上述三高位和剩余的五位组成，不能只用低五位识别。

跳跃跳转选项头和目的选项头使用相同的选项类型编号空间，但某些特定选项可能限制其仅用于其中一个头。

单个选项可能有特定的对齐要求，以确保多字节值在Option Data字段中对齐到自然边界。对齐要求用“xn+y”表示，意味着该选项类型必须出现在距离头部起始位置的x的整数倍加y个字节处。例如：

- 2n：任何距离头部起始位置的偶数偏移（2字节对齐）
- 8n+2：距离头部起始位置的8字节偏移加2个字节

必要时，为了对齐后续选项和将整个头部填充到8字节的整数倍长度，还会使用两种填充选项（Pad1和PadN），所有IPv6实现都必须识别这些填充选项。

Pad1选项（无对齐要求）：

```
+ - - - - - - - - +
|      0        |
+ - - - - - - - - +
```

注意：Pad1选项格式特殊——没有长度和值字段。用于在头部的选项区插入1字节的填充。如果需要多于1字节的填充，应使用PadN选项。

PadN选项（无对齐要求）：

```
+ - - - - - - - - +
|      1        |  Opt Data Len |  Option Data  |
+ - - - - - - - - +
```

用于插入两个或更多字节的填充。Opt Data Len字段的值为N-2，Option Data由N-2个零值字节组成。

附录A提供了设计新选项的格式指南。

4.3 跳跃跳转选项头

跳跃跳转选项头用于携带沿途每个节点都可能检查和处理的可选信息。该头由IPv6头中的“下一头部”值为0标识，格式如下：

```
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Next Header  |  Hdr Ext Len  |                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               +
|                                                               |
|                            选项                                |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- 下一头部（Next Header）：8位选择符，标识紧随跳跃跳转选项头之后的头部类型，使用与IPv4协议字段相同的值（[IANA-PN]）。
- 头部扩展长度（Hdr Ext Len）：8位无符号整数，表示跳跃跳转选项头的长度（以8字节为单位），不包括前8个字节。
- 选项（Options）：可变长度字段，包含一个或多个TLV编码的选项，详见第4.2节。

本文档中定义的唯一跳跃跳转选项是第4.2节中描述的Pad1和PadN选项。

路由头由IPv6源端用来列出一个或多个中间节点，沿途“访问”这些节点，直到到达目标。此功能与IPv4的松散源路由和记录路由选项非常相似。路由头由前导头的Next Header值为43标识，格式如下：

```
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Next Header  |  Hdr Ext Len  |  Routing Type | Segments Left |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
.                                                               .
.                       类型特定数据                              .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

各字段说明：

- **Next Header**：8位选择器，标识紧随路由头之后的头部类型，使用与IPv4协议字段相同的值 [IANA-PN]。
- **Hdr Ext Len**：8位无符号整数，表示路由头的长度（以8字节为单位），不包括前8个字节。
- **Routing Type**：8位标识符，指示特定的路由头变体类型。
- **Segments Left**：8位无符号整数，表示剩余的路由段数，即仍需访问的中间节点数，直到到达最终目的地。
- **类型特定数据**：可变长度字段，其格式由Routing Type决定，长度确保整个路由头长度为8字节的整数倍。

当节点在处理接收的包时，遇到未识别的Routing Type值的路由头，行为取决于Segments Left字段的值：

- 如果Segments Left为零，节点必须忽略该路由头，继续处理包中的下一个头部，其类型由路由头中的Next Header字段标识。
- 如果Segments Left非零，节点必须丢弃该包，并向包的源地址发送一条ICMP参数问题（代码0）消息，指向未识别的Routing Type。

如果在处理接收包的路由头后，中间节点判断包需转发到链路MTU小于包大小的链路上，必须丢弃该包，并向源地址发送“Packet Too Big” ICMP消息。

目前定义的IPv6路由头及其状态可在 [IANA-RH] 查阅，IPv6路由头的分配指南见 [RFC5871]。

---

**4.5. 分段头**

分段头由IPv6源端用来发送比路径MTU更大的包（注意：与IPv4不同，IPv6中的分段仅由源节点执行，路由器不进行分段——详见第5节）。分段头由前导头的Next Header值为44标识，格式如下：

```
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Next Header  |   Reserved    |      Fragment Offset    |Res|M|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         Identification                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

字段说明：

- **Next Header**：8位选择器，标识原始包中可分段部分的第一个头部类型（定义如下），使用与IPv4协议字段相同的值 [IANA-PN]。
- **Reserved**：8位保留字段，传输时初始化为零，接收时忽略。
- **Fragment Offset**：13位无符号整数，表示此片段相对于原始包可分段部分起点的偏移（以8字节为单位），第一个（左端）片段的偏移为0。
- **Res**：2位保留字段，传输时初始化为零，接收时忽略。
- **M（More Fragments）标志**：1表示还有后续片段，0表示这是最后一个片段。
- **Identification**：32位，用于标识属于同一原始包的所有片段。

源端可以将超出路径MTU的包拆分成多个片段，逐个发送，接收端再重组。每个片段都带有一个唯一的Identification值，必须与近期发送的其他片段不同（相同源地址和目的地址），以避免混淆。若存在路由头，目标地址指最终目的地。

“近期”指包的最大可能存活时间，包括从源到目的地的传输时间和等待重组的时间。源端不必知道最大包寿命，但应通过实现低重用频率的算法满足此要求，相关算法示例见 [RFC7739]。

原始未分段包称为“原始包”，由三部分组成（如下图所示）：

- **Per-Fragment Headers**：包括IPv6头和必须由中途节点处理的扩展头（直到路由头或跳跃选项头，若存在）。
- **Extension Headers**：除Per-Fragment部分外的其他扩展头，不包括封装安全载荷（ESP）。
- **Upper-Layer Header**：第一个非IPv6扩展头的上层协议头（如TCP、UDP、IPv4、IPv6、ICMPv6、ESP等）。

可分段部分（Fragmentable Part）是除上层协议头外的剩余包内容。每个片段长度应确保整体符合路径MTU，且除最后一个外，长度为8字节的整数倍。

---

**片段的传输示意：**

原始包拆分成多个片段，每个片段作为单独的“片段包”发送：

```
原始包：
+-----------------+-----------------+--------+--------+-//-+--------+
|  Per-Fragment   |Ext & Upper-Layer|  first | second |    |  last  |
|    Headers      |    Headers      |fragment|fragment|....|fragment|
+-----------------+-----------------+--------+--------+-//-+--------+
```

片段包示意：

```
+------------------+---------+-------------------+----------+
|  Per-Fragment    |Fragment | Ext & Upper-Layer |  first   |
|    Headers       | Header  |   Headers         | fragment |
+------------------+---------+-------------------+----------+

+------------------+--------+-------------------------------+
|  Per-Fragment    |Fragment|    second                     |
|    Headers       | Header |   fragment                    |
+------------------+--------+-------------------------------+

（以此类推，最后一个片段）
```

第一个片段包含：

1. 原始包的Per-Fragment头，修改Payload Length为仅包含此片段长度（不含IPv6头），最后一个Per-Fragment头的Next Header值设为44。
2. 一个Fragment头，包含：
   - Next Header：指示第一个紧随Per-Fragment头之后的头部类型。
   - Fragment Offset：偏移值（8字节单位），为0。
   - M标志：设为1，表示后续还有片段。
   - Identification：为原始包生成的唯一值。
3. 其他扩展头和上层协议头（必须在第一个片段中）。
4. 第一个片段的内容。

后续片段包含：

1. 原始包的Per-Fragment头（同上）。
2. Fragment头，偏移值相应增加，M标志为0（最后一个片段）或1（非最后）。
3. 片段内容。

片段不得重叠。

---

**在目的地的重组：**

片段被重组成原始包，规则如下：

- 只用具有相同源地址、目的地址和Identification的片段重组。
- 重组包的Per-Fragment头由所有片段的头部组成，直到第一个片段的Fragment头（偏移为0）之前，且有以下两点变化：
  - 最后一个Per-Fragment头的Next Header由第一个片段的Fragment头中的Next Header字段获得。
  - 重组包的Payload Length由Per-Fragment头长度、最后一个片段的长度和偏移计算得出（公式如下）：
  
    ```
    PL.orig = PL.first - FL.first - 8 + (8 * FO.last) + FL.last
    ```
  
    其中：
    - **PL.orig**：重组包的Payload Length
    - **PL.first**：第一个片段的Payload Length
    - **FL.first**：第一个片段中，紧随Fragment头的长度
    - **FO.last**：最后一个片段的Fragment Offset
    - **FL.last**：最后一个片段中，紧随Fragment头的长度

- 重组包的可分段部分由每个片段中Fragment头之后的内容组成，长度由Payload Length减去IPv6头和Fragment头之间的长度计算，位置由Fragment Offset决定。
- 最终重组包中不含Fragment头。
- 若某个片段是完整的包（Fragment Offset和M都为0），则无需重组，直接作为完整包处理。

**重组时可能出现的错误条件：**

- 若在60秒内未收到所有片段，必须放弃重组，丢弃所有已接收的片段。
- 若已收到第一个片段（偏移为0），应向源发送ICMP超时（Time Exceeded）——片段重组时间超时消息。

以上内容详尽描述了IPv6的路由头和分段头的结构、处理规则及重组机制。

如果一个片段的长度（由片段包的载荷长度字段得出）不是8个八位字节的倍数，并且该片段的M标志为1，则必须丢弃该片段，并向该片段的源发送一条ICMP参数问题（Parameter Problem）消息，代码为0，指向该片段包的载荷长度字段。

如果一个片段的长度和偏移量导致从该片段重组的包的载荷长度超过65,535个八位字节，则必须丢弃该片段，并向该片段的源发送一条ICMP参数问题（Parameter Problem）消息，代码为0，指向该片段包的偏移字段。

如果第一个片段没有包含所有的头部信息直到上层协议头部，则应丢弃该片段，并向源发送一条ICMP参数问题（Parameter Problem）消息，代码为3，指针字段设为零。

如果在重组过程中，任何片段与同一包的其他片段重叠，则应放弃该包的重组，丢弃所有已接收的片段，并且不应发送任何ICMP错误消息。

需要注意的是，网络中可能会出现片段的重复。实现可以选择检测到这种情况后，丢弃完全相同的重复片段，同时保留属于同一包的其他片段，而不是将它们视为重叠片段。

以下情况不被视为错误，虽然不常发生，但如果发生也不算错误：

- 不同片段的头部（在片段头之前的部分）可能不同。无论这些头部内容如何，在包到达时，都会被处理，然后将片段排队进行重组。只有偏移为零的片段中的头部会在重组后保留。

- 不同片段的片段头中的Next Header值可能不同。重组时只使用偏移为零的片段中的Next Header值。

- 其他字段（如IPv6头部中的字段）在不同片段中也可能不同。如果使用这些字段的规范提供了额外指示，则可以在基本机制不足时采用。例如，[RFC3168]第5.3节描述了如何将不同片段中的显式拥塞通知（ECN）位结合起来，得出重组包的ECN位。

---

4.6 目的地选项头部

目的地选项头部用于携带仅需由目标节点（或节点们）检查的可选信息。该头部由前一头部的Next Header值为60标识，格式如下：

```
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Next Header  |  Hdr Ext Len  |                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
.                                                               .
.                            Options                            .
.                                                               .
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- Next Header：8位选择器，标识紧随目的地选项头部之后的头部类型，使用与IPv4协议字段相同的值（[IANA-PN]）。

- Hdr Ext Len：8位无符号整数，表示目的地选项头部的长度（以8字节为单位），不包括前8个字节。

- Options：可变长度字段，长度使整个目的地选项头部为8字节的整数倍。包含一个或多个TLV编码的选项，详见第4.2节。

本文中定义的唯一目的地选项是第4.2节中描述的Pad1和PadN选项。

注意，IPv6包中可用两种方式编码可选的目的地信息：一种是在目的地选项头部中作为选项，另一种是作为单独的扩展头部。片段头和认证头就是后者的例子。采用哪种方式取决于目标节点不理解可选信息时的预期行为：

- 如果希望目标节点丢弃包，并且（除非目标地址是多播地址）向源地址发送一条ICMP未识别类型（Unrecognized Type）消息，则信息可以编码在目的地选项头部中，Option Type的最高两位值为11。选择哪种编码方式可能取决于占用的字节数、对齐或解析效率等因素。

- 如果希望采取其他行动，则信息必须编码在Option Type的最高两位为00、01或10的目的地选项中，具体操作由第4.2节规定。

---

4.7 无后续头部（No Next Header）

IPv6头部或任何扩展头部中的Next Header字段值为59，表示该头部之后没有其他头部。如果IPv6头部的载荷长度字段指示在Next Header值为59的头部之后还有字节，则这些字节应被忽略，在转发包时保持不变。

---

4.8 定义新的扩展头部和选项

除非没有现有的IPv6扩展头部可以用来实现新功能，否则不建议定义新的IPv6扩展头部。提出新扩展头部的方案必须详细说明为何不能使用现有的扩展头部实现所需功能。更多背景信息请参见[RFC6564]。

注意：需要逐跳行为的扩展头部不应定义，因为根据本文件第4节的规定，唯一具有逐跳行为的扩展头部是逐跳选项头部（Hop-by-Hop Options header）。

不建议定义新的逐跳选项，因为节点可能被配置为忽略逐跳选项头部、丢弃包含逐跳选项头部的包，或将包含逐跳选项头部的包放入缓慢处理路径。设计者在考虑定义新逐跳选项时应充分意识到这一可能行为。在标准化之前，必须有非常明确的理由说明为何需要新的逐跳选项。

建议不要定义新的扩展头部，而应使用目的地选项头部携带仅由目标节点检查的可选信息，因为它们提供了更好的处理和向后兼容性。

如果确实定义新扩展头部，它们应采用以下格式：

```
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Next Header  |  Hdr Ext Len  |                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
.                                                               .
.                  Header-Specific Data                         .
.                                                               .
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- Next Header：8位选择器，标识紧随扩展头部之后的头部类型，使用与IPv4协议字段相同的值（[IANA-PN]）。

- Hdr Ext Len：8位无符号整数，表示扩展头部的长度（以8字节为单位），不包括前8个字节。

- Header-Specific Data：可变长度字段，包含特定于该扩展头部的字段。

---

5. 包大小问题

IPv6要求每个链路的最大传输单元（MTU）至少为1280个八位字节。这被称为IPv6的最小链路MTU。在任何不能一次传输1280字节包的链路上，必须在IPv6层以下提供链路特定的分片和重组。

具有可配置MTU的链路（如PPP链路[RFC1661]）必须配置为至少1280字节的MTU；建议配置为1500字节或更大，以适应可能的封装（如隧道）而不引发IPv6层的分片。

每个节点直接连接的链路，必须能够接受等于该链路MTU大小的包。

强烈建议IPv6节点实现路径MTU发现（Path MTU Discovery，[RFC8201]），以发现并利用大于1280字节的路径MTU。然而，最小的IPv6实现（如在引导ROM中）可以仅限制自己发送不超过1280字节的包，省略路径MTU发现的实现。

为了发送大于路径MTU的包，节点可以使用IPv6分片头在源端进行分片，并在目的端重组。然而，在能够调整包大小以适应路径MTU的应用中，不建议使用分片（即，尽量避免分片）。

节点必须能够接受在重组后大小不超过1500字节的分片包。也允许接受重组后超过1500字节的分片包。依赖IPv6分片传输大于路径MTU的上层协议或应用，不应发送超过1500字节的包，除非确认目标能重组更大尺寸的包。

---

6. 流标签（Flow Labels）

IPv6头部中的20位流标签（Flow Label）由源节点用来标记一组在网络中作为单一流处理的包。

当前的IPv6流标签定义详见[RFC6437]。

---

7. 流量类别（Traffic Classes）

IPv6头部中的8位流量类别（Traffic Class）由网络用于流量管理。接收包或片段中的流量类别值可能与源节点发送的值不同。

当前关于差异服务（Differentiated Services）和显式拥塞通知（ECN）的用途详见[RFC2474]和[RFC3168]。

---

8. 上层协议问题

8.1 上层校验和

任何在校验和计算中包含IP头部地址的传输层或其他上层协议，必须为IPv6进行修改，使用128位的IPv6地址代替原有的32位IPv4地址。特别是，以下示意图显示了IPv6的TCP和UDP“伪头部”：

```
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                                                               +
|                                                               |
+                         源地址                                +
|                                                               |
+                                                               +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                                                               +
|                                                               |
+                      目的地址                                +
|                                                               |
+                                                               +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                   上层包长度                                  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      零                     |  下一头部  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- 如果IPv6包中包含路由头（Routing header），伪头中的目的地址为最终目的地地址。在源节点，该地址在路由头的最后一个元素中；在接收端，该地址在IPv6头的目的地址字段中。

- 伪头中的Next Header值标识上层协议（例如，6为TCP，17为UDP）。如果IPv6头和上层协议头之间存在扩展头，则该值会不同。

---

以上内容为全文翻译。

- 伪头中的上层数据包长度是指上层头部和数据的总长度（例如，TCP头部加TCP数据）。一些上层协议携带自己的长度信息（例如，UDP头中的长度字段）；对于此类协议，伪头中使用的长度即为该长度。其他协议（如TCP）不携带自己的长度信息，此时伪头中使用的长度为IPv6头中的有效载荷长度减去IPv6头与上层头之间存在的任何扩展头的长度。

- 与IPv4不同，IPv6节点发起的UDP包默认情况下，UDP校验和不是可选的。也就是说，每当发起UDP包时，IPv6节点必须对包和伪头进行校验和计算，如果结果为零，则必须将其改为十六进制的FFFF，以放入UDP头中。IPv6接收端必须丢弃校验和为零的UDP包，并应记录该错误。

- 作为默认行为的例外，使用UDP作为隧道封装的协议可以为特定端口（或端口集）启用零校验和模式，用于发送和/或接收。任何实现零校验和模式的节点，必须遵循《IPv6 UDP数据报零校验和使用适用性声明》（[RFC6936]）中规定的要求。

- IPv6版本的ICMP（[RFC4443]）在其校验和计算中包含上述伪头；这与IPv4版本的ICMP不同，后者的校验和不包括伪头。此变化的原因是为了保护ICMP免受IPv6头部字段误投或损坏的影响，这些字段不像IPv4那样由互联网层校验和覆盖。ICMP伪头中的“Next Header”字段值为58，标识IPv6版本的ICMP。

8.2. 最大数据包存活时间

- 与IPv4不同，IPv6节点不要求强制限制最大数据包存活时间。这也是IPv4中的“生存时间（TTL）”字段在IPv6中被改名为“跳数限制（Hop Limit）”的原因。实际上，很少甚至没有IPv4实现严格遵守限制数据包存活时间的要求，因此这在实践中没有变化。任何依赖互联网层（IPv4或IPv6）限制数据包存活时间的上层协议，都应升级以提供自己的机制，用于检测和丢弃过时的数据包。

8.3. 最大上层负载大小

- 在计算上层数据的最大有效载荷大小时，上层协议必须考虑IPv6头比IPv4头更大的因素。例如，在IPv4中，TCP的最大段大小（MSS）是最大包大小（默认值或通过路径MTU发现得出）减去40个字节（20字节的最小IPv4头和20字节的最小TCP头）。在IPv6上使用TCP时，MSS应为最大包大小减去60个字节，因为IPv6的最小头长度（无扩展头）比IPv4的最小头长20字节。

8.4. 对携带路由头的包的响应

- 当上层协议对包含路由头的接收包作出响应时，响应包不得包含由“反转”接收包中的路由头自动派生的路由头，除非已验证接收包中的源地址和路由头的完整性与真实性（例如，通过接收包中的认证头验证）。换句话说，只有以下类型的响应包允许对携带路由头的接收包作出响应：

  - 不携带路由头的响应包。

  - 携带非由反转接收包中的路由头派生的路由头的响应包（例如，配置提供的路由头）。

  - 携带由反转接收包中的路由头派生的路由头的响应包，前提是响应者已验证接收包中的源地址和路由头的完整性与真实性。

9. IANA考虑事项

- RFC 2460在多个IANA注册表中被引用，包括：

  - 互联网协议第6版（IPv6）参数 [IANA-6P]

  - 已分配的互联网协议号码 [IANA-PN]

  - ONC RPC网络标识符（netids） [IANA-NI]

  - 关注的网络层协议标识符（NLPIDs） [IANA-NL]

  - 协议注册表 [IANA-PR]

- IANA已更新这些引用，指向本文件。

10. 安全注意事项

- 从基本的包格式和传输角度看，IPv6的安全属性与IPv4类似，包括：

  - 窃听：路径上的元素可以观察到每个IPv6数据报的全部内容（包括内容和元数据）。

  - 重放：攻击者记录一系列数据包后再发回原始接收方。

  - 数据包插入：攻击者伪造具有特定属性的数据包并注入网络。

  - 数据包删除：攻击者从线路中删除数据包。

  - 数据包修改：攻击者删除、修改后重新注入数据包。

  - 中间人（MITM）攻击：攻击者篡改通信流，冒充发件人或收件人。

  - 拒绝服务（DoS）攻击：攻击者向目标发送大量合法流量以使其瘫痪。

- 通过使用《互联网协议安全架构》（[RFC4301]），可以保护IPv6数据包免受窃听、重放、插入、修改和MITM攻击。此外，上层协议如传输层安全（TLS）或安全外壳（SSH）也可用于保护运行在IPv6之上的应用层流量。

- 目前没有机制能防御DoS攻击，防范此类攻击超出本规范范围。

- IPv6地址比IPv4地址大得多，更难在互联网甚至单一链路（如局域网）中扫描地址空间。详见[RFC7707]。

- IPv6节点的地址在互联网上比IPv4更易被识别，因为地址转换技术的使用减少。这带来一些隐私问题，例如更容易区分端点。详见[RFC7721]。

- IPv6扩展头架构的设计虽然增加了灵活性，但也带来了新的安全挑战。比如，碎片扩展头相关的问题已解决，但未来设计的任何新扩展头都应彻底评估其安全影响，包括其与现有扩展头的兼容性。详见[RFC7045]。

- 本版本的IPv6规范修正了之前版本（[RFC2460]）中发现的多个安全问题，包括：

  - 修改了处理完整数据报（即碎片偏移字段和M标志都为零的碎片）的内容，若收到此类碎片，应作为重组包处理。其他匹配的碎片应单独处理。碎片创建过程已调整，不再生成完整数据报碎片（碎片偏移和M标志为零）。详见[RFC6946]和[RFC8021]。

  - 移除了第5节中关于在报告下一跳MTU小于1280时，向外发包中加入碎片头的要求。详见[RFC6946]。

  - 改变了要求，IPv6节点不得创建重叠的碎片。当重组IPv6数据报时，如果发现任何碎片重叠，整个数据报（及所有碎片）应被静默丢弃。还明确指出，收到重叠碎片时不应发送ICMP错误消息。详见[RFC5722]。

  - 修订了要求，所有头部直到第一个上层协议头都必须在第一个碎片中。详见[RFC7112]。

  - 更新了[RFC5095]和[RFC5871]中的内容，删除了Routing Header类型0（RH0）的描述，Routing头的分配指南已在[RFC5871]中规定，且已从必需扩展头列表中移除RH0。

- 关于IPv6其他部分（如地址、ICMPv6、路径MTU发现等）的安全问题，已在相关规范中讨论。

11. 参考文献

11.1. 必要性参考文献

- [RFC791] Postel, J.，“互联网协议”，STD 5，RFC 791，1981年9月，<http://www.rfc-editor.org/info/rfc791>。

- [RFC2474] Nichols, K.等，“IPv4和IPv6头中的差异服务字段定义”，RFC 2474，1998年12月，<http://www.rfc-editor.org/info/rfc2474>。

- [RFC3168] Ramakrishnan, K.等，“在IP中添加显式拥塞通知（ECN）”，RFC 3168，2001年9月，<http://www.rfc-editor.org/info/rfc3168>。

- [RFC4291] Hinden, R.与Deering, S.，“IPv6地址架构”，RFC 4291，2006年2月，<http://www.rfc-editor.org/info/rfc4291>。

- [RFC4443] Conta, A.等，“IPv6的互联网控制消息协议（ICMPv6）”，STD 89，RFC 4443，2006年3月，<http://www.rfc-editor.org/info/rfc4443>。

- [RFC6437] Amante, S.等，“IPv6流标签规范”，RFC 6437，2011年11月，<http://www.rfc-editor.org/info/rfc6437>。

（以下省略部分参考文献，内容与原文一致）

以下是英文内容的中文翻译：

```
   [RFC7112]  Gont, F., Manral, V. 和 R. Bonica，"超大IPv6头链的影响"，RFC 7112，DOI 10.17487/RFC7112，2014年1月，<http://www.rfc-editor.org/info/rfc7112>。

   [RFC7707]  Gont, F. 和 T. Chown，"IPv6网络中的网络侦察"，RFC 7707，DOI 10.17487/RFC7707，2016年3月，<http://www.rfc-editor.org/info/rfc7707>。







Deering 和 Hinden             标准轨迹                   [第34页]


RFC 8200                   IPv6规范                     2017年7月


   [RFC7721]  Cooper, A.，Gont, F. 和 D. Thaler，"IPv6地址生成机制的安全性和隐私考虑"，RFC 7721，DOI 10.17487/RFC7721，2016年3月，<http://www.rfc-editor.org/info/rfc7721>。

   [RFC7739]  Gont, F.，"可预测的分段识别值的安全隐患"，RFC 7739，DOI 10.17487/RFC7739，2016年2月，<http://www.rfc-editor.org/info/rfc7739>。

   [RFC8021]  Gont, F.，Liu, W. 和 T. Anderson，"IPv6原子碎片的生成被认为有害"，RFC 8021，DOI 10.17487/RFC8021，2017年1月，<http://www.rfc-editor.org/info/rfc8021>。

   [RFC8201]  McCann, J.，Deering, S.，Mogul, J. 和 R. Hinden，"IP版本6的路径MTU发现"，STD 87，RFC 8201，DOI 10.17487/RFC8201，2017年7月，<http://www.rfc-editor.org/info/rfc8201>。

































Deering 和 Hinden             标准轨迹                   [第35页]


RFC 8200                   IPv6规范                     2017年7月


附录A. 选项格式指南

   本附录提供一些关于在设计用于跳数跳选项头或目的地选项头（如第4.2节所述）中字段布局的建议。这些指南基于以下假设：

      o  一个理想的特性是，选项数据区内的多字节字段应按其自然边界对齐，即宽度为n字节的字段应放置在距跳数跳或目的地选项头起始位置的n的整数倍偏移处，n可以是1、2、4或8。

      o  另一个理想的特性是，跳数跳或目的地选项头应尽可能占用最少空间，但前提是该头部长度必须是8字节的整数倍。

      o  可以假设，当这些携带选项的头部存在时，它们通常只携带少量选项，通常只有一个。

   这些假设建议采用以下字段布局方法：将字段按从小到大的顺序排列，无内部填充，然后根据最大字段（最多8字节）所需的对齐要求，推导整个选项的对齐要求。以下示例说明了这种方法：

   示例1

   如果一个选项X需要两个数据字段，一个长度为8字节，一个长度为4字节，则布局如下：

                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                   | 选项类型=X  | 选项数据长度=12 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         4字节字段                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   +                         8字节字段                         +
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+







Deering 和 Hinden             标准轨迹                   [第36页]


RFC 8200                   IPv6规范                     2017年7月


   其对齐要求为8n+2，以确保8字节字段从包裹头的起始位置起的偏移量是8的倍数。包含此选项的完整跳数跳或目的地选项头如下所示：

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  下一个头部  | 头部扩展长度=1 | 选项类型=X | 选项数据长度=12 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         4字节字段                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   +                         8字节字段                         +
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   示例2

   如果一个选项Y需要三个数据字段，一个长度为4字节，一个长度为2字节，一个长度为1字节，则布局如下：

                                                   +-+-+-+-+-+-+-+-+
                                                   | 选项类型=Y   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 选项数据长度=7 | 1字节字段 | 2字节字段                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         4字节字段                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   其对齐要求为4n+3，以确保4字节字段从包裹头起始位置起的偏移量是4的倍数。包含此选项的完整跳数跳或目的地选项头如下所示：

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  下一个头部  | 头部扩展长度=1 | 填充1选项=0 | 选项类型=Y |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 选项数据长度=7 | 1字节字段 | 2字节字段                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         4字节字段                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 填充N选项=1 | 选项数据长度=2 | 0 | 0 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+








Deering 和 Hinden             标准轨迹                   [第37页]


RFC 8200                   IPv6规范                     2017年7月


   示例3

   包含选项X和Y（示例1和2中的两个选项）的跳数跳或目的地选项头将具有以下两种格式之一，具体取决于哪个选项先出现：

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  下一个头部  | 头部扩展长度=3 | 选项类型=X | 选项数据长度=12 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         4字节字段                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   +                         8字节字段                         +
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 填充N选项=1 | 选项数据长度=1 | 0 | 选项类型=Y |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 选项数据长度=7 | 1字节字段 | 2字节字段                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         4字节字段                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 填充N选项=1 | 选项数据长度=2 | 0 | 0 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  下一个头部  | 头部扩展长度=3 | 填充1选项=0 | 选项类型=Y |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 选项数据长度=7 | 1字节字段 | 2字节字段                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         4字节字段                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 填充N选项=1 | 选项数据长度=4 | 0 | 0 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 0 | 0 | 选项类型=X | 选项数据长度=12 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         4字节字段                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   +                         8字节字段                         +
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+










Deering 和 Hinden             标准轨迹                   [第38页]


RFC 8200                   IPv6规范                     2017年7月


附录B.  自RFC 2460以来的变更

   本备忘录相较于RFC 2460有以下变更。

   o  在摘要中删除了IP下一代的内容。

   o  在第1节中补充说明，数据传输顺序与RFC 791中定义的IPv4相同。

   o  澄清了第3节中关于递减跳数限制的描述。

   o  澄清了扩展头（除跳数跳选项头外）不会被任何节点处理、插入或删除，沿数据包传递路径的任何节点都不会处理这些扩展头。

   o  将跳数跳选项头的要求改为“可能”，并添加说明关于跳数跳选项头的预期行为。

   o  在第4节中增加一段，说明扩展头的编号方式以及哪些是上层协议头。

   o  在第4节末尾添加引用，指向IANA的“IPv6扩展头类型”注册表。

   o  融合RFC 5095和RFC 5871的更新，删除了RH0的描述，路由头的分配指南在RFC 5871中规定，并将RH0从必需扩展头列表中移除。

   o  根据RFC 5722、6946、7112和8021的更新，修订了第4.5节关于IPv6分片的内容，包括：

      -  修改文本以处理完整数据报的分片（即分片偏移字段和M标志都为零的情况）。如果收到，应作为重组包处理。任何匹配的其他分片应单独处理。修订后的分片创建过程不再生成完整数据报的分片（分片偏移和M标志都为零）。

      -  改变要求IPv6节点不得创建重叠的分片。此外，在重组IPv6数据报时，如果发现一个或多个组成分片是重叠的，则应静默丢弃整个数据报（包括所有组成分片），并明确指出不应发送ICMP错误消息。

      -  修订要求所有头部（直到第一个上层协议头）都必须在第一个分片中。这改变了数据包分片和重组的描述，并增加了新的错误情况。

      -  增加关于处理完全重复分片的说明。

      -  更新分片头的描述，纠正包含认证头（AH）和“无下一个头”情况的内容。

      -  将“不可分片头部”术语改为“每个分片的头部”。

      -  移除第5节中关于在ICMP“包太大”消息报告下一跳MTU小于1280时必须在出站包中包含分片头的段落。

      -  改善MTU限制和8字节限制的描述，并指出第一个分片中头部的限制。

   o  在第4.5节中，增加说明某些IPv6头部字段在重组的分片中也可能不同，其他规范可能提供额外的重组指示。例如，参考[RFC3168]第5.3节。

   o  融合RFC 6564的更新，新增第4.8节，描述定义新扩展头和选项的建议。

   o  在第5节中定义“IPv6最小链路MTU”。

   o  简化第6节中关于流标签的内容，删除了“流标签字段的语义和用法”附录A，改为引用[RFC6437]中IPv6流标签字段的最新规范，以及[RFC2474]和[RFC3168]中Traffic Class字段的规范。

   o  融合RFC 6935（“隧道封装包的IPv6和UDP校验和”）的更新，增加了对隧道中UDP校验和为零的包的特殊处理例外。

   o  在第9节“ IANA考虑”中，增加指示，将对RFC 2460的引用改为本文件。

   o  修订和扩展第10节“安全考虑”。

   o  在致谢部分增加一段，感谢更新文档的作者。

   o  更新参考文献为最新版本，并为规范性和信息性引用分配编号。

   o  进行了修正RFC 2460的勘误的更改，包括：

         勘误编号2541 [Err2541]：指出RFC 2460在流标签长度由24比特改为20比特（自RFC 1883起）时未更新RFC 2205。此问题在RFC 6437中得到解决，现该规范引用RFC 6437，无需更改。

         勘误编号4279 [Err4279]：指出规范未处理转发节点收到零跳限的包的情况。此问题在本规范第3节中已修正。

         勘误编号4657 [Err4657]：提出扩展头不得由除源节点外的任何节点插入的建议。此问题在第4节“IPv6扩展头”中已解决。

         勘误编号4662 [Err4662]：提出扩展头（除一例外）不得由任何节点检查、处理、修改、插入或删除的建议。此问题在第4节“IPv6扩展头”中已解决。

         勘误编号2843：已标记为“拒绝”，未做更改。

















Deering 和 Hinden             标准轨迹                   [第41页]


致谢

   作者衷心感谢IPng工作组、端到端协议研究组以及整个互联网社区成员的许多宝贵建议。

   作者还要感谢在本文件中被采纳以推动IPv6规范成为互联网标准的更新RFC的作者们。他们包括：Joe Abley、Shane Amante、Jari Arkko、Manav Bhatia、Ronald P. Bonica、Scott Bradner、Brian Carpenter、P.F. Chimento、Marshall Eubanks、Fernando Gont、James Hoagland、Sheng Jiang、Erik Kline、Suresh Krishnan、Vishwas Manral、George Neville-Neil、Jarno Rajahalme、Pekka Savola、Magnus Westerlund 和 James Woodyatt。

作者联系方式

   史蒂芬 E. Deering
   退休
   加拿大不列颠哥伦比亚省温哥华

   罗伯特 M. Hinden
   Check Point 软件公司
   959 Skyway Road
   圣卡洛斯，加利福尼亚州 94070
   美国

   电子邮箱：bob.hinden@gmail.com























Deering 和 Hinden             标准轨迹                   [第42页]
```