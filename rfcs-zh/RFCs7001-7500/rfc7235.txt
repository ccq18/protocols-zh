# RFC 7235 中文翻译 (stub)
# 原文文件: ../../rfcs/RFCs7001-7500/rfc7235.txt

互联网工程任务组（IETF）                  R. Fielding，主编
意见征求稿：7235                                              Adobe
废止：2616                                              J. Reschke，主编
更新：2617                                                 greenbytes
类别：标准轨道                                              2014年6月
ISSN：2070-1721


         超文本传输协议（HTTP/1.1）：认证

摘要

   超文本传输协议（HTTP）是一种无状态的应用层协议，用于分布式、协作式的超媒体信息系统。本文件定义了HTTP认证框架。

本备忘录的状态

   这是一个互联网标准轨道的文档。

   本文件由互联网工程任务组（IETF）制定，代表了IETF社区的共识。它已经过公开审查，并已获互联网工程指导组（IESG）批准发布。关于互联网标准的更多信息，请参见RFC 5741第2节。

   有关本文件当前状态、任何勘误以及如何提供反馈的信息，可以在 http://www.rfc-editor.org/info/rfc7235 获取。

版权声明

   本文件的版权归2014年IETF信托及被列为作者的个人所有。保留所有权利。

   本文件受BCP 78和IETF信托关于IETF文件的法律规定（http://trustee.ietf.org/license-info）约束，适用于本文件发布之日。请仔细阅读这些文件，它们描述了您对本文件的权利和限制。从本文件中提取的代码组件必须包括简化BSD许可证文本（详见信托法律规定第4.e节），且提供时不附带任何担保。

   本文件可能包含在2008年11月10日之前发布或公开的IETF文件或贡献的内容。这些内容的版权控制人可能未授权IETF信托对该内容进行修改。未经版权所有人授权，您不得在IETF标准流程之外修改本文件，也不得在IETF标准流程之外创建其派生作品，除非是为了将其格式化为RFC或翻译成非英语语言。

目录

   1. 引言 ....................................................3
      1.1. 合规性与错误处理 ....................................3
      1.2. 语法符号 ............................................3
   2. 访问认证框架 ............................................3
      2.1. 挑战与响应 ..........................................3
      2.2. 保护空间（Realm） ..................................5
   3. 状态码定义 ..............................................6
      3.1. 401 未授权 ..........................................6
      3.2. 407 代理认证要求 ....................................6
   4. 头字段定义 ..............................................7
      4.1. WWW-Authenticate .....................................7
      4.2. Authorization ........................................8
      4.3. Proxy-Authenticate ...................................8
      4.4. Proxy-Authorization ..................................9
   5. IANA考虑事项 ............................................9
      5.1. 认证方案注册表 ....................................9
           5.1.1. 流程 ...........................................9
           5.1.2. 新认证方案的考虑 ................................10
      5.2. 状态码注册 .........................................11
      5.3. 头字段注册 .........................................11
   6. 安全考虑 ...............................................12
      6.1. 凭据的机密性 .......................................12
      6.2. 认证凭据与空闲客户端 .................................12
      6.3. 保护空间 ...........................................13
   7. 致谢 ...................................................14
   8. 参考文献 ...............................................14
      8.1. 核心参考 ...........................................14
      8.2. 资料性参考 .........................................14
   附录A. 与RFC 2616和2617的变更 .........................16
   附录B. 导入的ABNF ......................................16
   附录C. 收集的ABNF ......................................17
   索引 .....................................................18


1. 引言

   HTTP提供了一个通用的访问控制和认证框架，通过一套可扩展的挑战-响应认证方案，服务器可以向客户端发起挑战，客户端可以提供认证信息。本文件用“超文本传输协议（HTTP/1.1）：消息语法与路由” [RFC7230]中定义的架构，结合之前在“HTTP认证：基本和摘要访问认证” [RFC2617]中描述的通用框架，以及之前定义的“超文本传输协议——HTTP/1.1” [RFC2616]中的相关字段和状态码，定义了HTTP/1.1的认证机制。

   IANA的认证方案注册表（第5.1节）列出了已注册的认证方案及其对应的规范，包括之前由RFC 2617定义的“基本”和“摘要”认证方案。

1.1. 合规性与错误处理

   本文档中的关键词“必须（MUST）”、“不得（MUST NOT）”、“要求（REQUIRED）”、“应（SHALL）”、“不得（SHALL NOT）”、“建议（SHOULD）”、“不建议（SHOULD NOT）”、“推荐（RECOMMENDED）”、“可以（MAY）”和“可选（OPTIONAL）”的定义，参照[RFC2119]的描述。

   合规性标准和错误处理的考虑在[RFC7230]第2.5节中定义。

1.2. 语法符号

   本规范采用[RFC5234]中的增强巴科斯-诺尔范式（ABNF）符号，结合第7节的列表扩展（在[RFC7230]中定义），允许用“#”操作符紧凑定义逗号分隔的列表（类似于“*”操作符表示重复）。附录B描述了从其他文档导入的规则，附录C展示了所有列表操作符展开为标准ABNF的完整语法。

2. 访问认证框架

2.1. 挑战与响应

   HTTP提供了一个简单的挑战-响应认证框架，服务器可以用它向客户端发起挑战，客户端可以用它提供认证信息。该框架使用不区分大小写的令牌（token）作为认证方案的标识，后跟实现该方案所需的其他信息。后续信息可以是参数的逗号分隔列表，也可以是单一字符序列，能够容纳base64编码信息。

   认证参数是name=value对，其中name（令牌）不区分大小写，每个挑战中每个参数名只能出现一次。

     auth-scheme    = token

     auth-param     = token BWS "=" BWS ( token / quoted-string )

     token68        = 1*( ALPHA / DIGIT /
                          "-" / "." / "_" / "~" / "+" / "/" ) *"="

   token68语法允许66个未保留的URI字符（[RFC3986]）加上少数其他字符，用于存放base64、base64url（URL和文件名安全字母表）、base32或base16（十六进制）编码，可以带或不带填充，但不包括空白字符（[RFC4648]）。

   由源服务器发起的401（未授权）响应消息，用于挑战用户代理的授权，包括包含至少一个适用于请求资源的挑战的WWW-Authenticate头字段。

   由代理发起的407（代理认证要求）响应消息，用于挑战客户端的授权，包括包含至少一个适用于请求资源的代理的挑战的Proxy-Authenticate头字段。

     challenge   = auth-scheme [ 1*SP ( token68 / #auth-param ) ]

      注：许多客户端无法解析包含未知方案的挑战。解决此问题的一个办法是优先列出支持良好的方案（如“basic”）。

   希望向源服务器进行认证的用户代理——通常是在收到401（未授权）响应后——可以在请求中加入Authorization头字段。

   希望向代理进行认证的客户端——通常是在收到407（代理认证要求）后——可以在请求中加入Proxy-Authorization头字段。

   Authorization字段值和Proxy-Authorization字段值都包含客户端的凭据，基于响应中收到的挑战（可能是过去某个时间点的挑战）。在生成这些值时，用户代理应选择它理解的最安全的认证方案，并适当向用户获取凭据。凭据在头字段中的传输涉及重要的安全考虑，特别是关于底层连接的机密性（详见第6.1节）。

     credentials = auth-scheme [ 1*SP ( token68 / #auth-param ) ]

   当接收到请求访问受保护资源的请求时，如果请求中省略凭据、凭据无效（如密码错误）或凭据不完整（如认证方案需要多轮交互），源服务器应返回401（未授权）响应，包含至少一个适用于请求资源的挑战的WWW-Authenticate头字段。

   同样，当收到省略代理凭据或凭据无效或不完整的请求时，要求认证的代理应返回407（代理认证要求）响应，包含至少一个适用于该代理的挑战的Proxy-Authenticate头字段。

   如果服务器收到的有效凭据不足以访问资源，应返回403（禁止访问）状态码（详见[RFC7231]第6.5.3节）。

   HTTP并不限制应用于访问认证的简单挑战-响应框架，还可以使用其他机制，如传输层认证、消息封装，以及通过附加头字段传递认证信息。然而，这些额外机制未在本规范中定义。

2.2. 保护空间（Realm）

   “realm”认证参数由希望指示保护范围的认证方案使用。

   保护空间由被访问服务器的规范根URI（即请求URI的方案和授权部分；参见[RFC7230]第5.5节）结合（如果存在）realm值定义。这些realm允许将服务器上的受保护资源划分为多个保护空间，每个空间具有自己的认证方案和/或授权数据库。realm值是由源服务器通常分配的字符串，可能具有特定于认证方案的附加语义。注意，一个响应可以包含多个具有相同认证方案但不同realm的挑战。

   保护空间决定了凭据可以自动应用的域。如果之前的请求已获授权，用户代理可以在一定时间内（由认证方案、参数和/或用户偏好（如可配置的非活动超时）决定）重复使用相同的凭据。除非认证方案明确允许，否则单一保护空间不能超出其服务器的范围。

   出于历史原因，发送方必须只生成引号字符串（quoted-string）语法。接收方可能需要支持令牌（token）和引号字符串两种语法，以实现与长期接受两者的现有客户端的最大互操作性。

3. 状态码定义

3.1. 401 未授权

   401（未授权）状态码表示请求未被应用，因为缺少有效的认证凭据。生成该响应的服务器必须在响应中包含至少一个适用于目标资源的挑战的WWW-Authenticate头字段。

   如果请求中已包含认证凭据，则401响应表示这些凭据的授权被拒绝。用户代理可以用新的或替换的Authorization头字段重复请求（详见第4.2节）。如果401响应中的挑战与之前的相同，并且用户代理已至少尝试过一次认证，则应向用户展示包含的表示内容，因为它通常包含相关的诊断信息。

3.2. 407 代理认证要求

   407（代理认证要求）状态码类似于401，但表示客户端需要对代理进行认证才能使用该代理。代理必须在响应中包含一个Proxy-Authenticate头字段，内含适用于该代理的挑战。客户端可以用新的或替换的Proxy-Authorization头字段重复请求（详见第4.4节）。

4. 头字段定义

   本节定义了与HTTP认证框架相关的头字段的语法和语义。

4.1. WWW-Authenticate

   “WWW-Authenticate”头字段指示适用于目标资源的认证方案及参数。

     WWW-Authenticate = 1#challenge

   生成401（未授权）响应的服务器必须在响应中包含至少一个挑战的WWW-Authenticate头字段。服务器也可以在其他响应中生成该头字段，以指示提供凭据（或不同凭据）可能影响响应。

   转发响应的代理不得修改该响应中的任何WWW-Authenticate字段。

用户代理在解析字段值时应格外小心，因为该字段可能包含多个挑战（challenge），每个挑战还可以包含用逗号分隔的认证参数列表。此外，头字段本身也可能出现多次。

例如：

  WWW-Authenticate: Newauth realm="apps", type=1,
                    title="Login to \"apps\"", Basic realm="simple"

这个头字段包含两个挑战：一个是“Newauth”方案，realm值为“apps”，还包括两个参数“type”和“title”；另一个是“Basic”方案，realm值为“simple”。

注意：挑战的语法产生式也使用列表语法。因此，逗号、空白和逗号的序列可以被理解为作用于前一个挑战，或者为空的挑战列表项。在实际操作中，这种歧义通常不会影响头字段值的语义，因此是无害的。

---

字段说明：  
用户代理可以通过“Authorization”头字段向源服务器进行身份验证——通常是在收到401（未授权）响应后，但不一定非如此。其值由包含用户代理对请求资源的领域（realm）认证信息的凭据组成。

  Authorization = credentials

如果请求已通过验证且指定了领域，则假定在该领域内的所有其他请求都使用相同的凭据（前提是认证方案本身没有要求不同，比如凭据会根据挑战值变化，或使用同步时钟等特殊机制）。

代理转发请求时不得修改请求中的任何“Authorization”字段。关于HTTP缓存如何处理“Authorization”字段的详细信息，请参见[RFC7234]第3.2节。

---

“Proxy-Authenticate”头字段由至少一个挑战组成，指示适用于此请求URI的代理的认证方案和参数（详见[RFC7230]第5.5节）。代理在每个407（代理认证请求）响应中必须至少发送一个“Proxy-Authenticate”头字段。

  Proxy-Authenticate = 1#challenge

不同于“WWW-Authenticate”，该头字段仅适用于响应链中的下一个出站客户端。这是因为只有选择了特定代理的客户端才可能拥有所需的凭据。然而，在同一管理域内（如大型企业网络中的办公室和区域缓存代理）使用多个代理时，用户代理通常会生成凭据并在层级中传递，直到被使用。因此，在这种配置中，似乎“Proxy-Authenticate”被转发，因为每个代理都会发送相同的挑战集。

注意：对“WWW-Authenticate”的解析考虑同样适用于此头字段；详细信息请参见第4.1节。

---

“Proxy-Authorization”头字段允许客户端向需要认证的代理标识自己（或其用户）。其值由包含客户端对代理和/或请求资源领域的认证信息的凭据组成。

  Proxy-Authorization = credentials

不同于“Authorization”，该头字段仅适用于下一个要求认证的入站代理。当链中存在多个代理时，“Proxy-Authorization”由第一个期待接收凭据的入站代理消耗。如果多个代理合作认证，代理可以将客户端请求中的凭据转发到下一个代理。

---

**第5节 IANA考虑事项**

5.1 认证方案注册表  
“超文本传输协议（HTTP）认证方案注册表”定义了挑战和凭据中认证方案的命名空间。该注册表已创建并由<http://www.iana.org/assignments/http-authschemes>维护。

5.1.1 注册流程  
注册必须包括：  
- 认证方案名称  
- 规范文本的指针  
- 备注（可选）  

新增值需经过IETF审查（参见[RFC5226]第4.1节）。

5.1.2 新认证方案的考虑事项  
HTTP认证框架对新方案的设计提出一些限制：  
- HTTP认证假设是无状态的：所有验证请求所需的信息必须在请求中提供，而不依赖服务器记忆先前的请求。基于连接的认证（如绑定到底层连接）超出本规范范围，且除非采取措施确保连接仅由已认证用户使用，否则本身存在缺陷（参见[RFC7230]第2.3节）。  
- “realm”参数用于定义保护空间，必须符合第2.2节的定义，新方案不得以不兼容的方式使用它。  
- “token68”符号为兼容现有方案而引入，每个挑战或凭据只能使用一次。新方案应使用“auth-param”语法，否则未来扩展将受限。  
- 挑战和凭据的解析由本规范定义，不能由新方案修改。使用“auth-param”语法时，所有参数应支持“token”和“quoted-string”两种语法，且应定义字段值的语法约束（如引号字符串处理），以便使用通用解析器。  
- “realm”参数值限制为引号字符串的设计不佳，不应在新参数中重复。  
- 新方案应定义对未知扩展参数的处理策略，通常“必须忽略”优于“必须理解”，以便兼容旧系统。还应描述定义新参数的策略（如“更新规范”或“使用注册表”）。  
- 方案应说明是否支持在源服务器认证（使用“WWW-Authenticate”）和/或代理认证（使用“Proxy-Authenticate”）中使用。

- 在“Authorization”头中的凭据仅对用户代理有效，且在请求范围内对HTTP缓存具有“私有”Cache-Control指令的效果（参见[RFC7234]第5.2.2.6节）。因此，不在“Authorization”头中携带凭据的方案（如使用新定义的头字段）应明确禁止缓存，要求使用“Cache-Control”请求指令（如“no-store”）或响应指令（如“private”）。

---

5.2 状态码注册  
“超文本传输协议（HTTP）状态码注册表”已更新，新增如下：  
| 值  | 描述                         | 参考章节   |  
|-------|------------------------------|--------------|  
| 401   | 未授权                       | 第3.1节     |  
| 407   | 代理认证要求                 | 第3.2节     |  

---

5.3 头字段注册  
HTTP头字段在“消息头”注册表中注册，维护在<http://www.iana.org/assignments/message-headers/>。  
本文件定义了以下头字段，已相应更新“永久消息头字段名”注册表（参见[BCP90]）：  

| 头字段名             | 协议   | 状态     | 参考章节   |  
|---------------------|--------|----------|------------|  
| Authorization       | http   | 标准     | 第4.2节    |  
| Proxy-Authenticate  | http   | 标准     | 第4.3节    |  
| Proxy-Authorization | http   | 标准     | 第4.4节    |  
| WWW-Authenticate    | http   | 标准     | 第4.1节    |  

变更控制者：IETF（iesg@ietf.org）——互联网工程任务组。

---

**第6节 安全注意事项**  
本节旨在提醒开发者、信息提供者和用户关于HTTP认证的已知安全问题。更广泛的安全考虑请参见HTTP消息（[RFC7230]）和语义（[RFC7231]）部分。

关于HTTP认证的所有内容都涉及安全问题，因此以下列出的考虑事项并不详尽。它们主要关注认证框架的一般安全性，而非特定方案的所有潜在安全问题（这些应在各自方案的规范中详细说明）。各组织维护关于Web应用安全的专题信息和最新研究链接（如[OWASP]），包括实现和使用认证方案时常见的陷阱。

6.1 凭据的机密性  
HTTP认证框架未定义单一的凭据保密机制；每个方案定义凭据在传输前的编码方式。虽然这为未来方案的开发提供了灵活性，但对现有方案而言不足，尤其是那些本身不提供机密性或不能有效防止重放攻击的方案。此外，如果服务器期望凭据是针对每个用户的，凭据的交换仍可能识别用户，即使凭据内容保持机密。

HTTP依赖底层传输或会话连接的安全属性来确保头字段的机密传输。换句话说，如果服务器通过此框架限制访问，必须确保连接安全（如使用TLS）以符合所用方案的安全需求。例如，依赖用户身份验证的服务通常在交换凭据前需要用TLS保护连接（参见[RFC5246]）。

6.2 凭据与空闲客户端  
现有HTTP客户端和用户代理通常会无限期保留认证信息。HTTP没有机制让源服务器指示客户端丢弃缓存的凭据，因为协议不知凭据的获取或管理方式。凭据的过期或撤销机制应在方案定义中说明。

凭据缓存可能影响安全的情况包括：  
- 客户端长时间空闲后，服务器可能要求重新提示用户输入凭据。  
- 应用中包含会话终止指示（如“注销”按钮），服务器知道无需再保留凭据。

建议用户代理提供便捷的机制让用户控制地丢弃缓存凭据。

6.3 保护空间（Protection Spaces）  
仅依赖“realm”机制建立保护空间的方案会暴露凭据给同一源服务器上的所有资源。已认证的凭据可以在同一源的其他资源中复用，可能被不同资源采集。

特别是在一个源服务器托管多个实体的资源（参见第2.2节）时，这种风险更大。缓解策略包括限制直接访问凭据（不让内容暴露在“Authorization”请求头中），以及通过不同的主机名或端口区分保护空间。

---

**第7节 致谢**  
本规范继承了之前在RFC 2617中定义的HTTP认证框架。感谢John Franks、Phillip M. Hallam-Baker、Jeffery L. Hostetler、Scott D. Lawrence、Paul J. Leach、Ari Luotonen和Lawrence C. Stewart在该规范中的工作。详细致谢请参见[RFC2617]第6节。

请参阅 [RFC7230] 第10节，了解与本文件修订相关的致谢内容。

8. 参考文献

8.1. 标准引用

[RFC2119]  Bradner, S.，“用于指示RFC中需求级别的关键词”，BCP 14，RFC 2119，1997年3月。

[RFC5234]  Crocker, D.（编辑）和 P. Overell，“语法规范的增强BNF：ABNF”，STD 68，RFC 5234，2008年1月。

[RFC7230]  Fielding, R.（编辑）和 J. Reschke（编辑），“超文本传输协议（HTTP/1.1）：消息语法与路由”，RFC 7230，2014年6月。

[RFC7231]  Fielding, R.（编辑）和 J. Reschke（编辑），“超文本传输协议（HTTP/1.1）：语义与内容”，RFC 7231，2014年6月。

[RFC7234]  Fielding, R.（编辑）、Nottingham, M.（编辑）和 J. Reschke（编辑），“超文本传输协议（HTTP/1.1）：缓存”，RFC 7234，2014年6月。

8.2. 参考资料

[BCP90]  Klyne, G.、Nottingham, M. 和 J. Mogul，“消息头字段的注册程序”，BCP 90，RFC 3864，2004年9月。

[OWASP]  van der Stock, A.（编辑），“构建安全Web应用和Web服务指南”，开放Web应用安全项目（OWASP）2.0.1，2005年7月，<https://www.owasp.org/>。

[RFC2616]  Fielding, R.、Gettys, J.、Mogul, J.、Frystyk, H.、Masinter, L.、Leach, P. 和 T. Berners-Lee，“超文本传输协议——HTTP/1.1”，RFC 2616，1999年6月。

[RFC2617]  Franks, J.、Hallam-Baker, P.、Hostetler, J.、Lawrence, S.、Leach, P.、Luotonen, A. 和 L. Stewart，“HTTP认证：基本和摘要访问认证”，RFC 2617，1999年6月。

[RFC3986]  Berners-Lee, T.、Fielding, R. 和 L. Masinter，“统一资源标识符（URI）：通用语法”，STD 66，RFC 3986，2005年1月。

[RFC4648]  Josefsson, S.，“Base16、Base32和Base64数据编码”，RFC 4648，2006年10月。

[RFC5226]  Narten, T. 和 H. Alvestrand，“编写IANA考虑事项部分的指南”，BCP 26，RFC 5226，2008年5月。

[RFC5246]  Dierks, T. 和 E. Rescorla，“传输层安全（TLS）协议版本1.2”，RFC 5246，2008年8月。

---

附录A. 与RFC 2616和2617的变更

- 现行HTTP认证框架由本文件定义，而非RFC 2617。
- “realm”参数在挑战中不再总是必需；因此，ABNF允许没有任何认证参数的挑战。（第2节）
- 为了与“Basic”等遗留认证方案保持一致，增加“token68”作为auth-param列表的替代方案。（第2节）
- 本规范引入了认证方案注册表，以及关于新认证方案的考虑事项。（第5.1节）

附录B. 导入的ABNF

以下核心规则通过引用包含，定义在[RFC5234]的附录B.1中：ALPHA（字母）、CR（回车）、CRLF（回车换行）、CTL（控制字符）、DIGIT（十进制0-9）、DQUOTE（双引号）、HEXDIG（十六进制0-9/A-F/a-f）、LF（换行）、OCTET（任意8位数据序列）、SP（空格）和VCHAR（任何可见US-ASCII字符）。

以下规则在[RFC7230]中定义：

- BWS  = <BWS，见[RFC7230]第3.2.3节>
- OWS  = <OWS，见[RFC7230]第3.2.3节>
- quoted-string = <引号字符串，见[RFC7230]第3.2.6节>
- token = <标记，见[RFC7230]第3.2.6节>

---

附录C. 收集的ABNF

在下方的收集ABNF中，列表规则按照[RFC7230]第1.2节展开。

Authorization = credentials

BWS = <BWS，见[RFC7230]第3.2.3节>

OWS = <OWS，见[RFC7230]第3.2.3节>

Proxy-Authenticate = *( "," OWS ) challenge *( OWS "," [ OWS challenge ] )

Proxy-Authorization = credentials

WWW-Authenticate = *( "," OWS ) challenge *( OWS "," [ OWS challenge ] )

auth-param = token BWS "=" BWS ( token / quoted-string )

auth-scheme = token

challenge = auth-scheme [ 1*SP ( token68 / [ ( "," / auth-param ) *( OWS "," [ OWS auth-param ] ) ] ) ]

credentials = auth-scheme [ 1*SP ( token68 / [ ( "," / auth-param ) *( OWS "," [ OWS auth-param ] ) ] ) ]

quoted-string = <引号字符串，见[RFC7230]第3.2.6节>

token = <标记，见[RFC7230]第3.2.6节>

token68 = 1*( ALPHA / DIGIT / "-" / "." / "_" / "~" / "+" / "/" ) *"="

---

索引

4
- 401 未授权（状态码） 6
- 407 代理服务器认证要求（状态码） 6

A
- 认证头字段 8

C
- 规范根URI 5

G
- 语法
  - auth-param 4
  - auth-scheme 4
  - Authorization 8
  - challenge 4
  - credentials 5
  - Proxy-Authenticate 8
  - Proxy-Authorization 9
  - token68 4
  - WWW-Authenticate 7

P
- 保护空间 5
- 代理认证头字段 8
- 代理授权头字段 9

R
- 领域 5

W
- WWW-Authenticate头字段 7

---

作者联系方式

Roy T. Fielding（编辑）
Adobe Systems Incorporated
345 Park Ave
San Jose, CA 95110
美国

电子邮箱：fielding@gbiv.com
网址：http://roy.gbiv.com/

Julian F. Reschke（编辑）
greenbytes GmbH
Hafenweg 16
Münster, NW 48155
德国

电子邮箱：julian.reschke@greenbytes.de
网址：http://greenbytes.de/tech/webdav/