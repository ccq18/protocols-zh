# RFC 4301 中文翻译 (stub)
# 原文文件: ../../rfcs/RFCs4001-4500/rfc4301.txt

网络工作组                                            S. Kent
意见请求：4301                                        K. Seo
废止：2401                                         BBN技术公司
类别：标准轨道                                  2005年12月


            互联网协议的安全架构

本备忘录的状态

   本文件为互联网社区制定的互联网标准轨道协议，旨在征求讨论和改进建议。请参阅当前版本的《互联网官方协议标准》（STD 1），了解该协议的标准化状态和最新进展。本备忘录的分发不受限制。

版权声明

   版权所有 © 互联网协会（2005年）。

摘要

   本文件描述了“IP安全架构”的更新版本，旨在为IP层的流量提供安全服务。本文件废止RFC 2401（1998年11月）。

致敬

   本文件献给Charlie Lynn的纪念，他是BBN的资深同事，长期以来在IPsec相关文件的撰写中做出了重要贡献。



















Kent & Seo                  标准轨道                     [第1页]


RFC 4301              IP安全架构         2005年12月


目录

   1. 引言 ....................................................4
      1.1. 文件内容概要 ........................................4
      1.2. 目标读者 ............................................4
      1.3. 相关文档 ............................................5
   2. 设计目标 .................................................5
      2.1. 目标/需求/问题描述 ..................................5
      2.2. 注意事项与假设 ......................................6
   3. 系统概述 .................................................7
      3.1. IPsec的功能 ..........................................7
      3.2. IPsec的工作原理 ......................................9
      3.3. IPsec的实现位置 ....................................10
   4. 安全关联（SA） ..........................................11
      4.1. 定义与范围 ..........................................12
      4.2. SA的功能 ............................................16
      4.3. 组合SA ..............................................17
      4.4. 主要的IPsec数据库 ....................................18
           4.4.1. 安全策略数据库（SPD） ..........................19
                  4.4.1.1. 选择器 ................................26
                  4.4.1.2. SPD条目的结构 ..........................30
                  4.4.1.3. 关于与下一层协议相关字段的更多信息 ........32
           4.4.2. 安全关联数据库（SAD） ..........................34
                  4.4.2.1. SAD中的数据项 ........................36
                  4.4.2.2. SPD、PFP标志、数据包与SAD的关系 ..........38
           4.4.3. 对等方授权数据库（PAD） ..........................43
                  4.4.3.1. PAD条目ID与匹配规则 ....................44
                  4.4.3.2. IKE对等方认证数据 ........................45
                  4.4.3.3. 子SA授权数据 ............................46
                  4.4.3.4. PAD的使用方式 ............................46
      4.5. SA与密钥管理 ........................................47
           4.5.1. 手动技术 ........................................48
           4.5.2. 自动SA与密钥管理 .................................48
           4.5.3. 寻找安全网关 ....................................49
      4.6. SA与多播 ............................................50
   5. IP流量处理 ...............................................50
      5.1. 出站IP流量处理
           （受保护到未受保护） ..................................52
           5.1.1. 处理必须丢弃的出站数据包 ........................54
           5.1.2. 隧道模式的头部构建 ................................55
                  5.1.2.1. IPv4：隧道模式的头部构建 ..................57
                  5.1.2.2. IPv6：隧道模式的头部构建 ..................59
      5.2. 入站IP流量处理（未受保护到受保护） .................59



Kent & Seo                  标准轨道                     [第2页]


RFC 4301              IP安全架构         2005年12月


   6. ICMP处理 ................................................63
      6.1. 处理指向IPsec实现的ICMP错误消息 ......................63
           6.1.1. 在未受保护边界接收的ICMP错误消息 ..............63
           6.1.2. 在受保护边界接收的ICMP错误消息 ................64
      6.2. 处理受保护的中转ICMP错误消息 .........................64
   7. 片段处理（在IPsec边界的受保护侧） .......................66
      7.1. 携带初始和非初始片段的隧道模式SA ....................67
      7.2. 非初始片段的单独隧道模式SA ............................67
      7.3. 有状态的片段检查 ......................................68
      7.4. 绕过/丢弃流量 .........................................69
   8. 路径MTU/DF处理 ...........................................69
      8.1. DF位 ..................................................69
      8.2. 路径MTU（PMTU）发现 ...................................70
           8.2.1. PMTU的传播 ......................................70
           8.2.2. PMTU的老化 ......................................71
   9. 审计 .....................................................71
   10. 合规性要求 ..............................................71
   11. 安全考虑 ...............................................72
   12. IANA注意事项 ...........................................72
   13. 与RFC 2401的差异 .......................................72
   14. 致谢 ....................................................75
   附录A：术语表 ..............................................76
   附录B：去相关化 ............................................79
      B.1. 去相关化算法 ........................................79
   附录C：SPD条目的ASN.1编码 ..................................82
   附录D：片段处理的原理 .....................................88
      D.1. 传输模式与片段 ......................................88
      D.2. 隧道模式与片段 ......................................89
      D.3. 非初始片段的问题 ....................................90
      D.4. 绕过/丢弃流量 ........................................93
      D.5. 只说“不”给端口？ ....................................94
      D.6. 其他建议方案 ..........................................94
      D.7. 一致性 ................................................95
      D.8. 结论 ..................................................95
   附录E：通过SPD和转发表支持嵌套SA的示例 ....................96
   参考文献 ....................................................98
      标准参考文献 ............................................98
      资料性参考文献 ..........................................99







Kent & Seo                  标准轨道                     [第3页]


RFC 4301              IP安全架构         2005年12月


1. 引言

1.1. 文件内容概要

   本文件定义了符合IPsec标准的系统的基础架构。它描述了在IPv4 [Pos81a] 和IPv6 [DH98] 环境中，如何为IP层的流量提供一套安全服务。本文件阐述了实现IPsec的系统的基本要求、核心要素，以及这些要素如何组合并融入IP环境中。同时，介绍了IPsec协议提供的安全服务，以及在IP环境中如何利用这些服务。本文件并未涵盖IPsec架构的所有方面。其他文档提供了在特定环境中的额外架构细节，例如在网络地址转换（NAT）环境中使用IPsec，以及对IP多播的更全面支持。IPsec安全架构的基本组成部分，主要从其底层的必需功能角度进行讨论。其他相关RFC（详见第1.3节的指引）定义了（a）、（c）和（d）部分的协议内容。

        a. 安全协议——认证头（AH）和封装安全载荷（ESP）
        b. 安全关联——定义、工作原理、管理方式、相关处理
        c. 密钥管理——手动和自动（互联网密钥交换IKE）
        d. 认证和加密的密码算法

   本文件不是互联网的安全架构；它仅在IP层提供安全，依赖于密码学和协议安全机制的结合。

   在本文档及所有相关IPsec标准中，首选“IPsec”拼写方式。其他所有关于IPsec的大写形式（如IPSEC、IPSec、ipsec）均已废弃。任何“IPsec”字母序列的大小写变体，应理解为指代IPsec协议。

   当本文档中出现关键词MUST、MUST NOT、REQUIRED、SHALL、SHALL NOT、SHOULD、SHOULD NOT、RECOMMENDED、MAY和OPTIONAL时，应按照RFC 2119 [Bra97]中的定义理解。

1.2. 目标读者

   本文件的主要目标读者是实现IP安全技术的开发者或系统架构设计者。具有技术能力的终端用户或系统管理员也属于目标群体。附录A提供了术语表，以弥补背景知识的不足。假设读者已熟悉互联网协议（IP）、相关网络技术以及一般信息系统安全的术语和概念。

1.3. 相关文档

   如前所述，其他文档详细定义了IPsec的部分组件及其相互关系，包括以下主题的RFC：

        a. 安全协议——描述认证头（AH）[Ken05b]和封装安全载荷（ESP）[Ken05a]协议的RFC。
        b. 完整性和加密的密码算法——定义AH和ESP的强制默认算法的RFC [Eas05]，以及定义IKEv2强制算法的RFC [Sch05]，每个算法也有单独的RFC。
        c. 自动密钥管理——关于“互联网密钥交换（IKEv2）协议”[Kau05]和“互联网密钥交换版本2（IKEv2）中的密码算法”[Sch05]的RFC。

2. 设计目标

2.1. 目标/需求/问题描述

   IPsec旨在为IPv4和IPv6提供互操作的高质量、基于密码学的安全保障。其提供的安全服务包括访问控制、无连接完整性、数据源认证、防重放（部分序列完整性）、机密性（通过加密）以及有限的流量流量隐私。这些服务在IP层提供，能以标准化方式保护所有可能通过IP传输的协议（包括IP本身）。

   IPsec还定义了最低限度的防火墙功能，因为这是IP层访问控制的关键方面。实现者可以提供更复杂的防火墙机制，并用这些机制实现IPsec规定的功能（注意，如果IPsec实现对流量施加额外的防火墙限制，但无法通过本文件定义的流量选择器特性和IKEv2协商达成一致，则可能影响互操作性）。IPsec的防火墙功能利用了所有IPsec流量的密码学验证和完整性，提供比单纯防火墙（未掌握IPsec内部参数）加上单独密码保护更优的访问控制。

   大部分安全服务通过两种流量安全协议——认证头（AH）和封装安全载荷（ESP）——以及密码密钥管理程序和协议实现。所采用的IPsec协议集及其使用方式，将由用户/管理员在具体环境中决定。IPsec架构的目标是确保符合标准的实现包含满足广泛用户群安全需求的服务和管理接口。

   当IPsec正确实现和部署时，不应对未使用IPsec进行流量保护的用户、主机或其他互联网组件产生不利影响。IPsec的安全协议（AH和ESP，以及在较小程度上的IKE）设计为与密码算法无关。这种模块化设计允许根据需要选择不同的密码算法集，而不影响其他部分。例如，不同的用户群体可以选择不同的密码算法（形成密码学强制的“圈”），如果需要的话。

   为了促进全球互联网的互操作性，[Eas05]中规定了用于AH和ESP的默认密码算法集，[Sch05]中规定了IKEv2的强制实现算法集。这些算法将定期更新，以跟上计算和密码学的最新进展。通过将这些算法在独立于AH、ESP和IKEv2规范的文档中定义，可以在不影响IPsec其他标准化工作的情况下，更新或替换这些算法。结合IPsec的流量保护和密钥管理协议，使用这些密码算法旨在使系统和应用开发者能够部署高质量的互联网层密码学安全技术。

2.2. 注意事项与假设

   IPsec协议套件及其默认密码算法旨在为互联网流量提供高质量的安全保障。然而，所提供的安全性最终取决于其实现的质量，而这超出了本标准集的范围。此外，计算机系统或网络的安全性还受到人员、物理环境、程序流程、泄露信息以及计算机安全实践等多方面因素的影响。因此，IPsec只是整体系统安全架构中的一部分。

   最后，IPsec提供的安全性在很大程度上依赖于其运行环境的许多方面。例如，操作系统安全缺陷、随机数源的质量差、系统管理协议和实践的疏忽等，都可能削弱IPsec的安全性。正如前述，这些环境属性不在本标准或其他IPsec标准的范围内。

3. 系统概述

   本节提供了IPsec工作原理的高层次描述，介绍了系统的组成部分，以及它们如何协作以提供上述安全服务。此描述的目标是帮助读者“构想”整体流程/系统，理解其在IP环境中的位置，并为后续章节中更详细介绍各个组件提供背景。

IPsec的实现可以在主机上运行，作为安全网关（SG），或作为独立设备，为IP流量提供保护。（安全网关是实现IPsec的中间系统，例如已启用IPsec的防火墙或路由器。）关于这些实现类别的详细信息将在后续第3.3节中介绍。IPsec提供的保护基于由用户或系统管理员建立和维护的安全策略数据库（SPD），或由在上述限制条件下运行的应用程序制定的策略。通常，数据包根据IP层和下一层协议头信息（“选择器”，详见第4.4.1.1节）与SPD中的条目匹配，进而决定采用哪种处理方式。每个数据包要么使用IPsec安全服务进行保护（PROTECT），要么被丢弃（DISCARD），要么允许绕过IPsec保护（BYPASS），具体取决于匹配到的SPD策略。

3.1 IPsec的作用

IPsec在主机或网络的未保护接口与受保护接口之间创建一个边界（见下图1）。通过该边界的流量，须遵循由负责配置IPsec的用户或管理员设定的访问控制。这些控制决定数据包是否可以无阻碍地通过边界，是否获得AH或ESP的安全服务，或被丢弃。

IPsec在IP层提供安全服务，通过选择合适的安全协议、加密算法和密钥实现。IPsec可以保护一对主机之间的一个或多个“路径”，也可以保护两个安全网关之间，或一个安全网关与主机之间的通信。符合标准的主机实现必须支持（a）和（c），而符合标准的安全网关必须支持这三种连接方式，因为在某些情况下，安全网关也会作为主机运行。

（图示略）

在此图中，“未保护”指可能也被描述为“黑色”或“密文”的接口，“受保护”指可能也被描述为“红色”或“明文”的接口。上述受保护的接口可以是内部接口，例如在主机IPsec实现中，受保护接口可能连接到操作系统提供的套接字层接口。本文中，“入站”指通过未保护接口进入IPsec实现的流量，或由实现发出并朝向受保护接口的流量；“出站”指通过受保护接口进入实现的流量，或由实现在边界受保护一侧发出并朝向未保护接口的流量。一个IPsec实现可以支持边界两侧的多个接口。

此外，图中还展示了在IPsec边界两侧丢弃流量的功能、允许流量绕过（BYPASS）以不进行加密保护的功能，以及IKE作为受保护侧密钥和安全管理功能的引用。

IPsec还可选择性支持IP压缩协商[SMPT01]，部分原因是因为在IPsec中使用加密会阻碍底层协议层的有效压缩。

3.2 IPsec的工作原理

IPsec使用两种协议提供流量安全服务——认证头（AH）和封装安全载荷（ESP）。这两种协议的详细描述见各自的RFC [Ken05b, Ken05a]。IPsec实现必须支持ESP，也可以支持AH（支持AH被降级为“可选”是因为经验表明，几乎没有场景ESP不能提供所需的安全服务。注意，ESP可以仅提供完整性而不提供机密性，这在大多数场景下与AH类似）。

- 认证头（AH）[Ken05b]提供数据完整性和数据源认证，且可选地支持防重放功能（由接收方决定是否启用）。

- 封装安全载荷（ESP）[Ken05a]提供相同的服务，还支持机密性。建议不要仅用ESP提供机密性而不提供完整性。当启用机密性时，ESP还提供有限的流量隐私保护，例如隐藏数据包长度，以及高效生成和丢弃虚假包的机制。这一能力主要在虚拟专用网络（VPN）和覆盖网络中有效。

两个协议都支持访问控制，通过密钥分发和流量管理（由SPD管理，详见第4.4.1节）实现。

这些协议可以单独使用，也可以结合使用，以提供IPv4和IPv6的安全服务。大多数安全需求可以通过单独使用ESP满足。每个协议支持两种模式：传输模式和隧道模式。传输模式下，AH和ESP主要保护下一层协议；隧道模式下，它们应用于封装的IP包。两者的差异将在第4.1节中详细讨论。

IPsec允许用户（或系统管理员）控制安全服务的粒度。例如，可以创建一个加密隧道，传输两个安全网关之间的所有流量，或为每对主机之间的每个TCP连接单独建立加密隧道。通过SPD管理机制，IPsec提供配置功能，包括：

- 选择使用的安全协议（AH或ESP）、模式（传输或隧道）、安全服务选项、加密算法及其组合；
- 保护的粒度。

由于大部分安全服务依赖密钥，IPsec依赖一套机制来分发密钥。本文支持手动和自动两种密钥分发方式，采用一种基于公钥的自动管理方案（IKEv2 [Kau05]），但也允许使用其他自动密钥分发技术。

注意：本文要求支持IKEv2中的一些特性，这些特性在IKEv1中不可用，例如协商表示本地和远程端口范围的SA，或用相同选择器协商多个SA。因此，本文假设使用IKEv2或具有类似功能的密钥和安全关联管理系统。

3.3 IPsec的实现位置

IPsec可以在多种场景中实现，包括：

a. 集成到原生IP协议栈中。这需要访问IP源代码，适用于主机和安全网关，但主机实现的优势最大（详见第4.4.1节第6段和最后一段）。

b. “堆叠中实现”（BITS），即在现有IP协议栈之下实现IPsec，位于原生IP和本地网络驱动之间。这种方式不需要访问IP协议栈源代码，适合遗留系统，通常在主机上采用。

c. 使用专用的内联安全协议处理器。这是军用系统和一些商用系统的常见设计，称为“线中插入”（BITW）实现。此类设备可以为主机或网关服务，通常具有IP地址。当支持单一主机时，类似于BITS实现；支持路由器或防火墙时，则必须像安全网关一样操作。

本文在描述中常用“主机”或“安全网关”来指代IPsec的使用场景，而不区分实现是原生、BITS还是BITW。当这些实现方式的差异较大时，文中会具体说明。

主机上的IPsec实现也可能出现在不被视为“主机”的设备上。例如，路由器可能使用IPsec保护路由协议（如BGP）和管理功能（如Telnet），而不影响通过路由器的用户流量。安全网关也可能采用不同的IPsec实现，保护其管理流量和用户流量。本文描述的架构非常灵活，例如，配备完整、符合标准的原生操作系统IPsec实现的计算机，应能配置为保护本地应用程序，并为通过该计算机的流量提供安全网关保护。这类配置将利用第5.1和第5.2节中描述的转发表和SPD选择功能。

4. 安全关联（Security Associations）

本节定义所有IPv6实现以及实现AH、ESP或两者的IPv4实现的安全关联管理要求。“安全关联”（SA）概念是IPsec的核心。AH和ESP都依赖SA，IKE的主要功能之一是建立和维护SA。所有支持AH或ESP的实现必须支持SA的概念，具体如下。本节还将介绍SA管理的各个方面，定义SA策略管理和SA管理技术的必要特性。

4.1 定义与范围

SA是单向的“连接”，为其传输的流量提供安全服务。安全服务通过AH或ESP实现，但不能同时使用两者。如果对一条流应用AH和ESP保护，则必须创建两个SA，并协调它们以通过反复应用安全协议实现保护。为了保护典型的双向通信，通常需要一对SA（每个方向各一个）。IKE明确支持创建SA对，以满足这一常见需求。

对于用于携带单播流量的SA，安全参数索引（SPI）本身足以唯一标识一个SA（详见附录A及AH和ESP规范[Ken05b, Ken05a]）。但在实际实现中，也可以结合IPsec协议类型（AH或ESP）使用SPI进行识别。如果IPsec支持多播，则必须支持多播SA，采用下述算法将入站IPsec数据包映射到对应的SA。只支持单播的实现无需实现此多路复用算法。

在许多安全多播架构中，例如[RFC3740]，中央的组控制器/密钥服务器会单方面分配组安全关联（GSA）的SPI。此SPI的分配不与各端系统中的密钥管理（如IKE）协商或协调，因此GSA和单播SA可能会使用相同的SPI。支持多播的IPsec实现必须能正确区分入站流量，即使SPI发生冲突。

在SA数据库（SAD）（第4.4.2节）中的每个条目必须指明，除了SPI之外，SA查找是否使用目标IP地址，或同时使用目标和源IP地址。对于多播SA，不使用协议字段进行SA查找。对于每个入站的IPsec保护数据包，实施方案必须按照如下顺序搜索SAD，以找到与“最长”SA标识符匹配的条目。在此背景下，如果两个或多个SAD条目基于SPI值匹配，则同时基于目标地址，或目标和源地址（如SAD条目所示）匹配的条目被视为“最长”匹配。这意味着SAD的搜索应遵循以下逻辑顺序：

1. 在SAD中搜索SPI、目标地址和源地址的组合是否匹配。如果找到匹配的SAD条目，则用该条目处理入站数据包；否则，进行第2步。

2. 在SAD中搜索SPI和目标地址是否匹配。如果找到匹配的SAD条目，则用该条目处理入站数据包；否则，进行第3步。

3. 如果接收端选择为AH和ESP维护单一SPI空间，或在协议和SPI都匹配的情况下，搜索仅基于SPI的匹配，否则。若找到匹配的SAD条目，则用该条目处理入站数据包；否则，丢弃该数据包并记录可审计事件。

实际上，实施方案可以选择任何方法（或不选择任何方法）来加快搜索，尽管其对外表现的行为必须在功能上等同于按上述顺序搜索SAD。例如，软件实现可以通过SPI索引到哈希表中，每个哈希桶的链表可以保持排序，使得具有最长SA标识符的SAD条目排在链表前面。具有最短SA标识符的条目可以排在链表末尾。硬件实现可能通过常用的三元内容可寻址存储器（TCAM）特性，内在实现最长匹配搜索。

是否需要源和目标地址匹配以将入站IPsec流量映射到SAs，必须通过手动配置SA的副作用或通过SA管理协议（如IKE或GDOI [RFC3547]）协商确定。通常，源特定多播（SSM）[HC03]组使用由SPI、目标多播地址和源地址组成的三元组SA标识符。任意源多播组（ASM）SA只需SPI和目标多播地址作为标识符。

如果在同一SA上传输不同类别的流量（由差异化服务代码点（DSCP）[NiBlBaBL98]，[Gro02]定义）且接收端启用了AH和ESP中的可选反重放功能，可能会因该功能使用的窗口机制导致低优先级包被不当丢弃。因此，发送方应将不同类别但具有相同选择器值的流量放在不同的SAs上，以合理支持服务质量（QoS）。为此，IPsec实现必须允许在同一发端和接收端之间建立和维护多个具有相同选择器的SAs，且这些SAs的流量分配由本地决定，不由IKE协商。接收端必须无偏见地处理来自不同SAs的包。这些要求适用于传输模式和隧道模式的SAs。在隧道模式下，相关的DSCP值出现在内部IP头中。在传输模式下，DSCP值可能在传输途中发生变化，但这不应影响IPsec处理，因为该值不用于SA选择，也不得作为SA/包验证的一部分进行检查。然而，如果在某个SA中发生了包的显著重排序，例如由于在路由途中更改DSCP值，可能会触发接收端因应用反重放机制而丢弃包。

讨论：虽然DSCP[NiBlBaBL98, Gro02]和显式拥塞通知（ECN）[RaFlBl01]字段不是本架构中所用的“选择器”，但发送方需要一种机制，将具有特定（或一组）DSCP值的包引导到相应的SA。这一机制可以称为“分类器”。

如前所述，定义了两种类型的SA：传输模式和隧道模式。IKE会创建一对SA，为简便起见，要求一对中的两个SA必须为相同模式（传输或隧道）。

传输模式SA通常在两个主机之间使用，提供端到端的安全服务。当在路径上的两个中间系统之间（而非端到端）需要安全时，可以在安全网关之间或网关与主机之间使用传输模式。在安全网关之间或网关与主机之间使用传输模式时，可以支持在传输模式SA上的IP隧道（如IP-in-IP [Per96]、通用路由封装（GRE）[FaLiHaMeTr00]或动态路由[ToEgWa04]）。需要澄清的是，只有当传输模式应用于源地址（出站包）或目标地址（入站包）属于中间系统本身的包时，才允许中间系统（如安全网关）使用传输模式。此情况下，IPsec的重要访问控制功能受到限制，因为它们不能应用于通过此类传输模式SA传输的端到端包的头部。因此，在特定场景中使用传输模式前应谨慎评估。

在IPv4中，传输模式的安全协议头紧跟在IP头及任何选项之后，位于任何下一层协议（如TCP或UDP）之前。在IPv6中，安全协议头出现在基础IP头和选定的扩展头之后，但可以在目标选项之前或之后；必须在下一层协议（如TCP、UDP、SCTP）之前出现。对于ESP，传输模式SA仅为下一层协议提供安全服务，不保护IP头或在ESP头之前的扩展头。对于AH，保护范围还扩展到其前的部分IP头、扩展头的部分内容以及某些选项（如IPv4头、IPv6跳到跳扩展头或IPv6目的地扩展头中的内容）。关于AH的保护范围的详细信息，请参见AH规范[Ken05b]。

隧道模式SA本质上是应用于IP隧道的SA，安全控制作用于隧道内的流量头部。两个主机可以建立隧道模式SA。除以下两个例外外，只要一端是安全网关，SA必须为隧道模式。通常，两个安全网关之间的SA是隧道模式，主机与安全网关之间的SA也是如此。两个例外如下：

- 当流量目的地为安全网关（如SNMP命令）时，安全网关作为主机，允许使用传输模式。在这种情况下，SA在安全网关的管理功能内终止，因此应区别对待。

- 如前所述，安全网关可以支持传输模式SA，为路径上的两个中间系统之间的IP流量提供安全保障，例如在主机与安全网关之间或两个安全网关之间。

使用隧道模式的原因包括：如果存在多条路径（如通过不同的安全网关）到同一目标，确保IPsec包被发送到协商SA的安全网关；以及在传输途中可能发生分片时，所有分片必须送达同一IPsec实例进行重组，确保分片的内外头部信息得以保留，以维护分片状态。由于这些原因，当SA一端为安全网关时，应采用隧道模式（结合IP-in-IP隧道和传输模式也可解决分片问题，但会限制IPsec对流量的访问控制能力）。

注意：AH和ESP不能用于IPv4分片包的传输模式，只能使用隧道模式。在IPv6中，携带明文分片在传输模式SA上也是可行的，但出于简便考虑，此限制也适用于IPv6包。关于在IPsec保护侧处理明文分片的更多细节，请参见第7节。

对于隧道模式SA，有一个“外部”IP头，指明IPsec处理的源和目的地址，以及一个“内部”IP头，指明包的（表面上）最终源和目的地址。安全协议头出现在外部IP头之后，内部IP头之前。如果采用AH，外部IP头的部分内容受到保护（如上所述），以及整个隧道内的IP包（即全部内部IP头和下一层协议）都受到保护；如果采用ESP，则只保护隧道内的包，不保护外部头部。

总结如下：

a) 主机端的IPsec实现必须支持传输模式和隧道模式。这适用于主机的原生、BITS和BITW实现。

b) 安全网关必须支持隧道模式，也可以支持传输模式。若支持传输模式，应仅在安全网关作为主机（如网络管理）或在路径上的两个中间系统之间提供安全时使用。

如果选择了保密性，则两个安全网关之间的ESP（隧道模式）安全关联（SA）可以提供部分流量流的保密性。使用隧道模式允许对内部IP头进行加密，隐藏（最终）流量源和目的地的身份。此外，还可以调用ESP载荷填充以隐藏数据包的大小，进一步掩盖流量的外部特征。在拨号环境中，当移动用户被分配动态IP地址并建立到企业防火墙（作为安全网关）的（隧道模式）ESP安全关联时，也可以提供类似的流量保密服务。注意，细粒度的安全关联通常比携带多个订阅者流量的粗粒度安全关联更容易受到流量分析的攻击。

注意：符合标准的实现不得允许同时使用NULL加密和无完整性算法的ESP安全关联（SA）。尝试协商此类SA将被视为可审计事件，发起方和响应方都应记录。该事件的审计日志应包括当前日期/时间、本地IKE IP地址和远程IKE IP地址。发起方还应记录相关的安全策略数据库（SPD）条目。

4.3. 组合安全关联（SAs）

本规范不要求支持嵌套安全关联或RFC 2401 [RFC2401] 所称的“SA捆绑”。这些功能仍可通过适当配置SPD和本地转发功能（用于入站和出站流量）实现，但此能力超出了IPsec模块的范围，也不在本规范的范围内。因此，管理嵌套或捆绑的安全关联可能比RFC 2401 [RFC2401] 所暗示的模型更复杂且可靠性较低。支持嵌套SA的实现应提供管理接口，使用户或管理员能够表达嵌套需求，然后创建相应的SPD条目和转发表项以实现所需的处理（参见附录E，关于如何配置嵌套SA的示例）。

4.4 主要的IPsec数据库

在IPsec实现中，处理IP流量的许多细节主要是本地事务，不属于标准化范围。然而，为了确保互操作性并提供最低限度的管理能力，以便有效使用IPsec，某些外部方面必须标准化。本节描述了支持这些互操作性和功能目标的IP流量处理的通用模型。以下描述的模型为示意模型，实际实现不必完全匹配，但其外部行为必须符合该模型的可观察特性，才能视为合规。

该模型中有三个名义上的数据库：安全策略数据库（SPD）、安全关联数据库（SAD）和对等方授权数据库（PAD）。SPD定义了决定所有入站或出站IP流量处理方式的策略（第4.4.1节）。SAD存储与每个已建立（有密钥）SA相关的参数（第4.4.2节）。PAD提供了SA管理协议（如IKE）与SPD之间的连接（第4.4.3节）。

多个独立的IPsec上下文

如果IPsec实现作为多个订阅者的安全网关，可以实现多个独立的IPsec上下文。每个上下文可以拥有并使用完全独立的身份、策略、密钥管理SA和/或IPsec SA。这在很大程度上是本地实现的事务。然而，必须有一种机制将入站（SA）提案与本地上下文关联起来。如果所用的密钥管理协议支持，上下文标识符可以在信令消息中由发起方传递给响应方，从而创建绑定到特定上下文的IPsec SA。例如，为多个客户提供VPN服务的安全网关可以将每个客户的流量与正确的VPN关联。

转发与安全决策

本模型明确区分转发（路由）和安全决策，以适应IPsec可能应用的各种场景。转发可以很简单，比如只有两个接口，也可以很复杂，比如在实现IPsec的环境中采用了复杂的转发功能。IPsec假设，经过IPsec处理的出入站流量会按照实现IPsec的环境中的方式进行转发。支持嵌套SA是可选的；如果需要，则需要协调转发表和SPD条目，使数据包在IPsec边界上多次穿越。

“本地”与“远程”

在本文件中，关于IP地址和端口，术语“本地”和“远程”用于策略规则。“本地”指被IPsec保护的实体，即出站数据包的“源”地址/端口或入站数据包的“目的”地址/端口。“远程”指对等实体或对等实体们。数据包头字段中使用“源”和“目的”术语。

“非初始”与“初始”片段

在全文中，“非初始片段”指不包含所有访问控制所需选择器值的片段（例如，可能不包含下一层协议、源和目的端口、ICMP消息类型/代码、移动性头类型）。而“初始片段”指包含所有访问控制所需选择器值的片段。然而，对于IPv6，包含下一层协议和端口（或ICMP消息类型/代码或Mobility Header类型[MobiP]）的片段取决于存在的扩展头类型和数量。在某些情况下，“初始片段”可能不是第一个片段。

4.4.1 安全策略数据库（SPD）

SA是用来执行跨越IPsec边界的流量安全策略的管理结构。因此，SA处理的一个核心要素是基础的安全策略数据库（SPD），它定义了对IP数据报提供何种服务以及以何种方式提供。数据库的形式和接口超出本规范范围，但本节规定了必须提供的最低管理功能，以便用户或系统管理员能够控制IPsec在主机或安全网关上的应用方式。SPD（或相关缓存）必须在处理所有流量（入站和出站）时进行查询，包括未受IPsec保护的流量，以及通过IPsec边界的管理流量（如IKE）。IPsec实现必须至少拥有一个SPD，也可以支持多个SPD（视具体环境而定）。没有必要为每个接口维护SPD，但如果支持多个SPD，则必须有明确的SPD选择功能，用于选择适当的SPD进行出站流量处理。该功能的输入包括出站数据包和任何本地元数据（如到达接口），输出为SPD标识符（SPD-ID）。

SPD是一个有序数据库，类似于防火墙、路由器中的访问控制列表（ACL）或数据包过滤器。排序要求源于条目可能重叠（由于选择器值允许使用范围或通配符），因此用户或管理员必须能够对条目进行排序，以表达所需的访问控制策略。由于选择器值允许使用通配符，且不同类型的选择器没有层级关系，不能对SPD条目施加通用的规范排序。

处理选择：丢弃、绕过、保护

SPD必须区分允许IPsec保护的流量和允许绕过IPsec的流量。这适用于发件人应施加的IPsec保护以及接收方必须具备的IPsec保护。对于任何出站或入站数据报，有三种处理方式：丢弃、绕过IPsec或使用IPsec保护。第一种指不允许流量穿越IPsec边界（在指定方向）；第二种允许流量在不受IPsec保护的情况下穿越边界；第三种则要求流量受到IPsec保护，SPD必须指定所用的安全协议、模式、安全服务选项以及所用的加密算法。

SPD-S、SPD-I、SPD-O

SPD在逻辑上分为三部分：SPD-S（安全流量）包含所有受IPsec保护的流量条目；SPD-O（出站）包含所有应绕过或丢弃的出站流量条目；SPD-I（入站）应用于将被绕过或丢弃的入站流量。这三部分可以解耦（除了前述本地主机实现的特殊情况），以便于缓存。如果IPsec实现只支持一个SPD，则该SPD包含全部三部分。如果支持多个SPD，则部分SPD可能是局部的，例如某些SPD只包含SPD-I，用于控制每个接口的入站绕过流量。这样，SPD-I可以在不查询SPD-S的情况下进行查找。由于SPD-I只是SPD的一部分，如果在SPD-I中找不到匹配条目，则必须丢弃该数据包。对于出站流量，如果在SPD-S中未找到匹配，则必须检查SPD-O是否允许绕过。同样，如果先检查SPD-O未找到匹配，则应检查SPD-S。在有序且非解耦的SPD中，SPD-S、SPD-I和SPD-O的条目交错排列，只有一次查找。

SPD条目

每个SPD条目定义数据包的处理方式为绕过、丢弃或保护。条目由一个或多个选择器组成的列表作为键。SPD包含这些条目的有序列表。必需的选择器类型在第4.4.1.1节中定义。这些选择器用于定义响应出站数据包或对等方提案时创建SA的粒度。SPD条目的详细结构在第4.4.1.2节中描述。每个SPD应有一个名为“最终匹配”的通用条目，用于匹配所有未被匹配的流量并丢弃。

用户或管理员必须能够指定策略条目，包括：

- SPD-I：针对将被绕过或丢弃的入站流量，条目由适用于该流量的选择器值组成。

- SPD-O：针对将被绕过或丢弃的出站流量，条目由适用的选择器值组成。

- SPD-S：针对使用IPsec保护的流量，条目由适用于通过AH或ESP保护的流量的选择器值组成，包括基于这些选择器创建SA的控制参数，以及实现保护所需的参数（如算法、模式等）。注意，SPD-S条目还包含诸如“从数据包填充”标志（PFP）（参见下文关于“如何为SAD条目导出值”部分）以及指示是否需要从数据包中提取信息的位。

肯特与徐（Kent & Seo）                  标准轨迹                    [第21页]

RFC 4301              IP安全架构（Security Architecture for IP）        2005年12月

SA查找（SA lookup）利用本地和远程IP地址以及SPI（见AH [Ken05b]或ESP [Ken05a]规范）进行。

在SPD条目中表示方向性

对于由IPsec保护的流量，SPD条目中的本地和远程地址及端口会交换，以表示方向性，这与IKE的惯例一致。通常，IPsec处理的协议具有需要对称安全关联（SA）的特性，即本地和远程IP地址互换。然而，对于ICMP，通常没有这样的双向授权要求。尽管如此，为了统一性和简化，ICMP的SPD条目与其他协议的定义相同。还应注意，对于ICMP、移动性头（Mobility Header）以及非初始片段（non-initial fragments），这些包中没有端口字段。ICMP具有消息类型和代码，移动性头具有移动性头类型。因此，SPD条目提供了表达适用于这些协议的访问控制的条款，以取代常规端口字段控制。对于绕过或丢弃的流量，支持单向的入站和出站条目，例如，以允许单向流动（如果需要）。

OPAQUE（不透明）和ANY（任意）

对于SPD条目中的每个选择器（selector），除了定义匹配的字面值外，还有两个特殊值：ANY和OPAQUE。ANY是一个通配符，匹配包中对应字段的任何值，或匹配那些该字段不存在或被遮蔽的包。OPAQUE表示对应的选择器字段不可用进行检查，因为它可能在片段中不存在、在给定的下一层协议中不存在，或在应用IPsec之前已被加密。ANY值包含OPAQUE值。因此，只有在需要区分字段允许任何值与字段不存在或不可用（例如被加密）时，才应使用OPAQUE。

如何派生SA数据库（SAD）条目的值

对于SPD条目中的每个选择器，条目规定了如何从SPD和包中派生出新的SA数据库（SAD，详见第4.4.2节）条目的对应值。目标是允许根据包中的特定选择器值或匹配的SPD条目创建SAD条目和SPD缓存条目。对于出站流量，有SPD-S缓存条目和SPD-O缓存条目；对于未由IPsec保护的入站流量，有SPD-I缓存条目和表示入站IPsec保护流量的SAD（详见第4.4.2节）。如果为某个条目指定了IPsec处理，则可以为SPD条目中的一个或多个选择器（如本地IP地址、远程IP地址、下一层协议，以及根据下一层协议可能的本地端口和远程端口，或ICMP类型/代码，或移动性头类型）断言“从包中填充（populate from packet，PFP）”标志。如果为某个选择器X断言了该标志，表示要创建的SA应从包中提取X的值，否则，SA应从SPD条目的值中获取X的值。注意：在非PFP情况下，由SA管理协议（如IKEv2）协商的选择器值可能只是SPD条目中的子集，具体取决于对端的SPD策略。此外，是否为源端口、ICMP类型/代码和移动性头（MH）类型使用单一标志，或为每个使用单独的标志，是一个本地决定的问题。

以下示例说明在安全网关或BITS/BITW实现中使用PFP标志的情况。假设一个SPD条目中，远程地址允许的值是一个IPv4地址范围：192.0.2.1到192.0.2.10。假设一个出站包到达，目标地址为192.0.2.3，且没有现存的SA来承载此包。为传输此包而创建的SA的值可以是以下两个中的任意一个，具体取决于该选择器的SPD条目中源值的定义：

| PFP标志值 | 新的SA目的地址示例值 |
|------------|---------------------|
| a. PFP TRUE | 192.0.2.3（单一主机） |
| b. PFP FALSE | 192.0.2.1到192.0.2.10（主机范围） |

注意：如果上述SPD条目的远程地址值为ANY，则在情况（b）中，SAD选择器值必须为ANY，但在情况（a）中仍为示例所示的值。因此，PFP标志可用于禁止共享一个SA，即使这些包匹配相同的SPD条目。

管理接口

每个IPsec实现都必须具有管理接口，允许用户或系统管理员管理SPD。该接口必须允许用户（或管理员）指定应用于每个通过IPsec边界的包的安全处理方式。（在使用套接字接口的本地主机IPsec实现中，可能不需要每个包都查阅SPD，详见第4.4.1.1节末和第5节。）SPD的管理接口必须支持根据第4.4.1.1节定义的选择器创建条目，并且必须支持（完全）对这些条目的排序（顺序），通过该接口可以查看。SPD条目的选择器类似于无状态防火墙或包过滤路由器中常见的访问控制列表（ACL）或包过滤器，目前也是以这种方式管理。

在主机系统中，应用程序可以被允许创建SPD条目。（向IPsec实现发出此类请求的具体方式超出本标准范围。）但系统管理员必须能够指定用户或应用程序是否可以覆盖（默认）系统策略。管理接口的具体形式未在本文档中规定，可能因主机与安全网关不同而不同，且在主机内部，基于套接字的实现与BITS实现的接口也可能不同。然而，本文档确实规定了一套所有IPsec实现必须支持的标准SPD元素。

去相关（Decorrelation）

本文描述的处理模型假设能够对重叠的SPD条目进行去相关，以允许缓存，从而提高安全网关和BITS/BITW实现中出站流量的处理效率。去相关（[CoSa04]）仅是提高性能和简化处理描述的一种手段。本RFC不要求符合标准的实现必须使用去相关。例如，原生主机实现通常会隐式使用缓存，因为它们将SA绑定到套接字接口，因此无需在这些实现中进行SPD条目的去相关。

注意：除非另有说明，“SPD”一词指的是策略信息的全部内容，无论是有序的还是去相关（无序的）状态。附录B提供了一种可用于去相关SPD条目的算法，但任何产生等效输出的算法都可以使用。当SPD条目被去相关后，所有生成的条目必须相互连接，以便可以将由单个SPD条目（在去相关前）派生的所有成员同时放入缓存和SAD。例如，假设从有序SPD中开始，条目A在去相关后产生条目A1、A2和A3。当匹配到包（如A2）并触发SA的创建时，SA管理协议（如IKEv2）会协商A。所有三个去相关条目A1、A2和A3都将放入相应的SPD-S缓存中，并与SA关联。其目的是，使用去相关的SPD不应比使用未去相关的SPD产生更多的SA。

如果采用去相关SPD，发起方通过SA管理协议（如IKE）向对端发送的内容有三种选择：通过发送从SPD中选择的所有链接的去相关条目的完整集，为对端提供最佳信息，以便在其端选择合适的SPD条目，尤其是当对端也进行了去相关时。然而，如果链接的去相关条目数量很大，可能会导致SA协商包变大，从而引发碎片化问题。

另一种方式是保留原始的（相关的）SPD条目，并将其传递给SA管理协议。传递相关SPD条目可以使去相关SPD的使用成为本地问题，对对端不可见，也避免了潜在的碎片化问题，但会减少匹配的精确性。

一种中间方案是只传递部分链接的去相关SPD条目集。这种方法可以避免上述碎片化问题，同时提供比原始相关条目更好的信息。其主要缺点是可能导致后续创建更多的SA，因为只传递了部分链接的去相关条目。实现者可以自由选择上述任何一种方法。

响应方使用通过SA管理协议（如IKE）收到的流量选择器提案，选择其SPD中的合适条目。匹配的目标是选择一个SPD条目并创建一个最符合发起方意图的SA，以确保通过该SA的流量在双方都能被接受。如果响应方使用去相关的SPD，应优先使用去相关的SPD条目进行匹配，因为这通常会生成更符合双方意图的SA。如果响应方使用相关的SPD，则应将提案与相关条目进行匹配。对于IKEv2，使用去相关的SPD为响应方提供了生成“缩小”响应的最佳机会。

在所有情况下，当存在去相关的SPD时，应使用去相关的条目填充SPD-S缓存。如果SPD未去相关，则不允许缓存，必须进行有序搜索，以验证通过SA到达的入站流量是否符合SPD中表达的访问控制策略。

系统运行中对SPD的更改处理

如果在系统运行时对SPD进行了更改，应检查此更改对现存SA的影响。实现应检查SPD更改对现存SA的影响，并应提供机制让用户或管理员配置应采取的措施，例如删除受影响的SA、允许受影响的SA保持不变等。

4.4.1.1. 选择器（Selectors）

一个安全关联（SA）可以是细粒度的或粗粒度的，这取决于用于定义该SA的选择器。例如，两个主机之间的所有流量可以通过一个SA传输，并提供统一的安全服务。或者，根据所使用的应用（由下一层协议及相关字段，如端口号定义），两个主机之间的流量可能会分散在多个SA上，不同的SA提供不同的安全服务。同样，两个安全网关之间的所有流量可以通过一个SA传输，也可以为每对通信的主机分配一个SA。所有IPsec实现必须支持以下选择器参数，以便控制SA的粒度。注意，本地和远程地址应为IPv4或IPv6中的一种，不能混用。此外，注意本地/远程端口选择器（以及ICMP消息类型和代码、移动性头类型）可以标记为“OPAQUE”，以适应由于分片而无法访问这些字段的情况。

- 远程IP地址（IPv4或IPv6）：这是一个IP地址范围列表（单播、广播（仅IPv4））。该结构允许表达单个IP地址（通过简单范围）、地址列表（每个为简单范围）、地址范围（包括低值和高值，含端点），以及最通用的范围列表形式。地址范围用于支持多个远程系统共享同一SA，例如在安全网关后面。

- 本地IP地址（IPv4或IPv6）：这是一个IP地址范围列表（单播、广播（仅IPv4））。该结构允许表达单个IP地址、地址列表、地址范围，以及最通用的范围列表形式。地址范围用于支持多个源系统共享同一SA，例如在安全网关后面。本地指的是由此实现（或策略条目）保护的地址。  
注意：SPD（安全策略数据库）不支持多播地址条目。若要支持多播SA，应使用[RFC3740]定义的组SPD（GSPD）。GSPD条目需要不同的结构，即不能在多播环境中使用与单播SA相同的本地和远程地址的对称关系。具体而言，指向多播地址的出站流量不会在带有多播地址作为源的入站SA上被接收。

- 下一层协议：取自IPv4的“协议”字段或IPv6的“下一头字段”。这是一个单一的协议编号、ANY或（仅IPv6）OPAQUE。下一层协议是指在任何IP扩展头之后的协议。为了简化定位下一层协议，应提供配置机制，指定跳过哪些IPv6扩展头。默认应跳过以下协议：0（跳数选项）、43（路由头）、44（分片头）、60（目的地选项）。注意：默认列表不包括51（AH）或50（ESP）。从选择器查找的角度看，IPsec将AH和ESP视为下一层协议。

依赖下一层协议值的其他选择器包括：

* 如果下一层协议使用两个端口（如TCP、UDP、SCTP等），则有本地端口和远程端口的选择器。每个选择器都包含值范围列表。注意，在接收分片包或端口字段被IPsec保护（加密）时，端口可能不可用，因此也必须支持“OPAQUE”。注意：在非初始分片中，端口值不可用。如果端口选择器指定的值不是ANY或OPAQUE，则不能匹配非初始分片的包。若SA需要特定端口值（非ANY或OPAQUE），则必须丢弃没有端口的分片包（详见第7节“处理分片”）。

* 如果下一层协议是移动性头（Mobility Header），则有一个IPv6移动性头消息类型（MH类型）的选择器[Mobip]。这是一个8位值，用于标识特定的移动性消息。注意：在接收分片包时，MH类型可能不可用（详见第7节“处理分片”）。对于IKE，IPv6移动性头的消息类型（MH类型）放在16位本地“端口”选择器的最高有效8位。

* 如果下一层协议是ICMP，则有一个16位的选择器，用于ICMP消息类型和代码。消息类型是单个8位值，定义ICMP消息的类型或为ANY。ICMP代码也是8位值，定义特定子类型。对于IKE，消息类型放在16位选择器的最高8位，代码放在最低8位。此16位选择器可以包含单一类型和一系列代码、单一类型和ANY代码，或ANY类型和ANY代码。给定策略条目中的类型范围（T-start到T-end）和代码范围（C-start到C-end），以及ICMP包的类型t和代码c，必须使用以下条件进行匹配测试：

```
(T-start*256) + C-start ≤ (t*256) + c ≤ (T-end*256) + C-end
```

注意：在接收分片包时，ICMP消息类型和代码可能不可用（详见第7节“处理分片”）。

- 名称：这不是上述的选择器之一，也不是从包中获取的。名称可以作为IPsec本地或远程地址的符号标识符。命名的SPD条目有两种用途：

  1. 由响应方（非发起方）使用，用于访问控制，当远程IP地址选择器不适用时，例如“路上战士”。匹配此字段的名称在IKE协商中的ID负载中传达。在此场景中，发起方的源IP地址（隧道模式下的内层IP头）绑定到由IKE协商创建的SAD条目中的远程IP地址。当以此方式选择SPD条目时，该地址会覆盖SPD中的远程IP地址值。所有IPsec实现必须支持此类名称的使用。

  2. 由发起方使用，用于标识将创建IPsec SA的用户（或允许流量绕过的用户）。发起方的源IP地址（隧道模式下的内层IP头）在创建时，用于替换以下内容：

```
- SPD缓存条目中的本地地址
- 出站SAD条目中的本地地址
- 入站SAD条目中的远程地址
```

支持此用法的多用户本机实现是可选的，其他实现不适用。注意：此名称仅在本地使用，不通过密钥管理协议传输。除响应者用的情况1外，其他情况（发起者）也可以使用名称。

SPD条目可以同时包含名称（或名称列表）和本地或远程IP地址的值。

对于场景1（响应者），命名SPD条目中的标识符包括以下四种类型：

a. 完全限定的用户名字符串（电子邮件），如：`mozart@foo.example.com`（对应IKEv2中的ID_RFC822_ADDR）

b. 完全限定的DNS名称，如：`foo.example.com`（对应IKEv2中的ID_FQDN）

c. X.500区分名，例如：[WaKiHo97]，CN=Stephen T. Kent，O=BBN Technologies，SP=MA，C=US（对应IKEv2中的ID_DER_ASN1_DN，解码后）

d. 字节字符串（对应IKEv2中的Key_ID）

对于场景2（发起者），命名SPD条目的标识符为字节字符串，可能是Unix的UID、Windows安全ID或类似的标识，也可能是用户名或账户名。所有情况下，此标识符仅关乎本地，不会传输。

IPsec实现的上下文决定了选择器的使用方式。例如，原生主机实现通常使用套接字接口。当建立新连接时，可以查阅SPD并将SA绑定到该套接字。因此，通过该套接字发送的流量无需额外查找SPD（SPD-O和SPD-S）缓存。而BITS、BITW或安全网关实现则需要检查每个包，并根据选择器进行SPD-O/SPD-S缓存查找。

4.4.1.2. SPD条目的结构

本节提供SPD条目的文字描述。此外，附录C提供了SPD条目的ASN.1定义示例。

本文描述的SPD旨在与IKE载荷直接映射，确保SPD条目所需的策略可以通过IKE协商实现。不幸的是，与本文同时发布的IKEv2版本[Kau05]的语义并不完全与SPD定义一致。具体而言，IKEv2不支持协商绑定多个本地和远程地址及端口对到单一SA的机制。当为一个SA协商多个本地和远程地址及端口时，IKEv2将这些视为（无序的）本地和远程值集合，可以任意配对，而非一一对应。在IKE提供通过选择器集（如下所述）表达SPD语义的机制之前，用户不得在单个SPD条目中包含多个选择器集，除非访问控制意图与IKE的“混合匹配”语义一致。实现可以警告用户，提示其在创建包含多个选择器集的SPD条目时可能存在与当前IKE语义冲突的风险。

管理界面可以提供其他数据输入和显示方式，例如支持使用地址前缀和范围，以及协议、端口等的符号名称（不要将管理界面中的符号名称与SPD选择器中的“Name”混淆）。注意：远程/本地仅适用于IP地址和端口，不适用于ICMP消息类型/代码或移动性头类型。此外，如果为某个选择器类型使用保留的符号值OPAQUE或ANY，则该值只能在该选择器的列表中出现一次，且只能出现一次。注意：ANY和OPAQUE是本地语法约定——IKEv2通过下述范围协商这些值：

```
ANY：     起始=0，结束=<最大值>
OPAQUE：  起始=<最大值>，结束=0
```

SPD是一个有序的条目列表，每个条目包含以下字段：

- 名称（Name）——一组ID。这一准选择器是可选的。支持的形式在第4.4.1.1节“名称”中描述。

PFP标志——每个流量选择器对应一个标志。某个特定标志，例如用于下一层协议的标志，适用于SPD条目中所有“选择器集”中的相关选择器（见下文）。在创建安全关联（SA）时，每个标志指示对应的流量选择器应从触发创建SA的包中的相应字段实例化，还是从SPD条目中的值（见第4.4.1节，“如何为SAD条目导出值”）。是否为源端口、ICMP类型/代码和移动性头类型使用单一标志，还是为每个单独使用一个标志，是一个本地决定的问题。PFP标志包括：
- 本地地址
- 远程地址
- 下一层协议
- 本地端口，或ICMP消息类型/代码，或移动性头类型（取决于下一层协议）
- 远程端口，或ICMP消息类型/代码，或移动性头类型（取决于下一层协议）

一个到多个选择器集对应于应用特定IPsec操作的“条件”。每个选择器集包含：
- 本地地址
- 远程地址
- 下一层协议
- 本地端口，或ICMP消息类型/代码，或移动性头类型（取决于下一层协议）
- 远程端口，或ICMP消息类型/代码，或移动性头类型（取决于下一层协议）

注意：“下一协议”选择器是一个单独的值（不同于本地和远程IP地址），在选择器集条目中是单一值。这与IKEv2协商SA的流量选择器（TS）值的方式一致，也合理，因为可能需要将不同的端口字段与不同的协议关联。通过为某个SA指定多个选择器集，可以将多个协议（和端口）关联到一个SA。

处理信息——需要采取的动作，包括：保护（PROTECT）、绕过（BYPASS）或丢弃（DISCARD）。所有选择器集共用一个动作，没有为每个集单独定义动作。如果需要的处理是“保护”，则条目包含以下信息：
- IPsec模式——隧道（tunnel）或传输（transport）
- （如果是隧道模式）本地隧道地址——对于非移动主机，如果只有一个接口，则设置简单；如果有多个接口，则必须静态配置。对于移动主机，本地地址的定义由IPsec外部处理。
- （如果是隧道模式）远程隧道地址——没有标准方法确定，参见4.5.3节，“定位安全网关”。
- 扩展序列号——此SA是否使用扩展序列号？
- 有状态碎片检查——此SA是否使用有状态碎片检查？（详见第7节）
- 绕过DF位（T/F）——适用于隧道模式的SA
- 绕过DSCP（T/F）或映射到未保护的DSCP值（数组）——如需限制绕过DSCP值，适用于隧道模式的SA
- IPsec协议——AH或ESP
- 算法——用于AH、ESP或组合模式的算法，按优先级递减排序

关于在SPD更改时，哪些信息应与已存在的SA一起保存，这是一个本地决定的问题。

4.4.1.3. 关于与下一层协议相关字段的更多信息

额外的选择器通常与下一层协议头中的字段相关。某个特定的下一层协议可以有零个、一个或两个选择器。有些情况下，依赖于下一层协议的字段既没有本地也没有远程选择器。例如，IPv6移动性头只有移动性头消息类型。AH和ESP没有额外的选择器字段。有系统可能愿意发送某些ICMP消息类型和代码，但不希望接收。在下文描述中，“端口”指依赖于下一层协议的字段。

A. 如果某个下一层协议没有“端口”选择器，则相关SPD条目中的本地和远程“端口”选择器设置为OPAQUE，例如：

本地：
  下一层协议 = AH
  “端口”选择器 = OPAQUE

远程：
  下一层协议 = AH
  “端口”选择器 = OPAQUE

B. 即使某个下一层协议只有一个选择器，例如移动性头类型，也会用“端口”选择器来指示系统是否愿意发送和/或接收带有特定“端口”值的流量。例如，如果允许通过SA发送和接收特定类型的移动性头，则相关SPD条目设置如下：

本地：
  下一层协议 = 移动性头
  “端口”选择器 = 移动性头消息类型

远程：
  下一层协议 = 移动性头
  “端口”选择器 = 移动性头消息类型

如果允许通过SA发送但不接收某类型的移动性头，则设置如下：

本地：
  下一层协议 = 移动性头
  “端口”选择器 = 移动性头消息类型

远程：
  下一层协议 = 移动性头
  “端口”选择器 = OPAQUE

如果允许接收但不发送某类型的移动性头，则设置如下：

本地：
  下一层协议 = 移动性头
  “端口”选择器 = OPAQUE

远程：
  下一层协议 = 移动性头
  “端口”选择器 = 移动性头消息类型

C. 如果系统愿意发送带有特定“端口”值的流量，但不愿接收此类端口的流量，则在相关SPD条目中设置：

本地：
  下一层协议 = ICMP
  “端口”选择器 = <特定ICMP类型和代码>

远程：
  下一层协议 = ICMP
  “端口”选择器 = OPAQUE

D. 若要表示系统愿意接收带有特定“端口”值的流量，但不愿发送此类流量，则在相关SPD条目中设置：

本地：
  下一层协议 = ICMP
  “端口”选择器 = OPAQUE

远程：
  下一层协议 = ICMP
  “端口”选择器 = <特定ICMP类型和代码>

例如，如果安全网关愿意允许其后端系统发送ICMP traceroute，但不允许外部系统对其后端系统进行ICMP traceroute，则SPD条目设置如下：

本地：
  下一层协议 = 1（ICMPv4）
  “端口”选择器 = 30（traceroute）

远程：
  下一层协议 = 1（ICMPv4）
  “端口”选择器 = OPAQUE

4.4.2. 安全关联数据库（SAD）

每个IPsec实现中，都有一个名义上的安全关联数据库（SAD），其中每个条目定义一个SA的相关参数。每个SA在SAD中有对应的条目。出站处理时，SAD条目由SPD的SPD-S部分中的条目指向；入站处理时，对于单播SA，SPI可以单独用来查找SA，也可以结合IPsec协议类型使用。如果IPsec支持多播，则用SPI加目的地址，或SPI加目的和源地址来查找SA（详见第4.1节关于映射入站IPsec数据包到SA的算法）。每个SAD条目关联的参数包括（除非另有说明）：
- IPsec模式——隧道或传输
- （如果是隧道模式）本地隧道地址——对于非移动主机，如果只有一个接口，设置简单；多接口则必须静态配置。移动主机的本地地址由IPsec外部定义。
- （如果是隧道模式）远程隧道地址——没有标准方法确定，参见4.5.3节，“定位安全网关”。
- 扩展序列号——此SA是否使用扩展序列号？
- 有状态碎片检查——此SA是否使用有状态碎片检查？（详见第7节）
- 绕过DF位（T/F）——适用于隧道模式的SA
- 绕过DSCP（T/F）或映射到未保护的DSCP值（数组）——如需限制绕过DSCP值，适用于隧道模式的SA
- IPsec协议——AH或ESP
- 算法——用于AH、ESP或组合模式的算法，按优先级递减排序

关于在SPD更改时，哪些信息应与已存在的SA一起保存，这是一个本地决定的问题。

4.4.2.1. SAD中的数据项

SAD中必须包含以下数据项：

安全参数索引（SPI）：由安全关联（SA）接收端选择的一个32位值，用于唯一标识该SA。在出站SA的安全关联数据库（SAD）条目中，SPI用于构建数据包的AH或ESP头部。在入站SA的SAD条目中，SPI用于将流量映射到相应的SA（详见第4.1节关于单播/多播的说明）。

序列号计数器：一个64位的计数器，用于生成AH或ESP头部中的序列号字段。默认情况下使用64位序列号，但如果协商，也支持32位序列号。

序列计数器溢出：一个标志，指示序列号计数器溢出是否应生成可审计事件并阻止在该SA上传输额外的数据包，或允许溢出回绕。该事件的审计日志应包括SPI值、当前日期/时间、本地地址、远程地址以及相关SAD条目的选择器。

反重放窗口：一个64位的计数器和一个位图（或等效物），用于判断入站AH或ESP数据包是否为重放。

注意：如果接收端为某个SA禁用了反重放功能，例如在手动密钥管理的SA中，则该SA的反重放窗口被忽略。默认使用64位序列号，但此计数器大小也支持32位序列号。

AH认证算法、密钥等：仅在支持AH的情况下需要。

ESP加密算法、密钥、模式、IV等：如果使用组合模式算法，则这些字段不适用。

ESP完整性算法、密钥等：如果未选择完整性服务，则这些字段不适用。若使用组合模式算法，这些字段也不适用。

ESP组合模式算法、密钥等：在使用ESP的组合模式（加密和完整性）算法时使用。如果未使用组合模式算法，则这些字段不适用。

该SA的生命周期：指示在何时必须用新SA（及新SPI）替换或终止该SA的时间间隔，以及应采取的具体操作。可以用时间、字节数或两者结合表示，优先考虑先到期的方式。符合标准的实现必须支持这两种类型的生命周期，并支持同时使用两者。如果采用时间方式，并且IKE使用X.509证书建立SA，则SA的生命周期必须受到证书有效期和CRL（证书吊销列表）中的NextIssueDate的限制。发起者和响应者都负责以此方式限制SA的生命周期。注意：处理SA到期后密钥刷新细节属于本地实现问题，但一种合理的做法是：

(a) 如果使用字节数，建议实现应统计应用于IPsec加密算法的字节数。对于ESP，包括加密算法（包括空加密），对于AH，包括认证算法，包括填充字节等。注意：实现必须能处理SA端点的计数器不同步的情况，例如因数据包丢失或端点实现方式不同。

(b) 生命周期应有两种：软生命周期，用于提醒实现准备设置替换SA；硬生命周期，表示当前SA结束并被销毁。

(c) 如果在SA生命周期内未能完整传输整个数据包，则应丢弃该数据包。

IPsec协议模式：隧道（tunnel）或传输（transport），指示在该SA上应用的AH或ESP的模式。

有状态碎片检查标志：指示是否对该SA应用有状态的碎片检查。

绕过DF位（T/F）：适用于隧道模式SA，且内外头都为IPv4的情况。

DSCP值：允许通过该SA传输的数据包的DSCP值集。如果未指定任何值，则不进行特定的DSCP过滤。如果指定了一个或多个值，则用以在多个匹配流量选择器的SA中选择一个，用于出站数据包。注意：这些值不会对入站流量进行检查。

绕过DSCP（T/F）或映射到未保护的DSCP值（数组）：如果需要限制绕过DSCP值的情况，适用于隧道模式SA。此功能将内层头的DSCP值映射到外层头的值，例如，用于应对隐蔽信道信号。

路径MTU：观察到的路径MTU和老化变量。

隧道头IP源地址和目的地址：两个地址必须都是IPv4或IPv6地址。版本指示所用的IP头类型，仅在IPsec协议模式为隧道时使用。

4.4.2.2. SPD、PFP标志、数据包与SAD之间的关系

每个选择器对应的表格显示了SPD中的值、PFP标志、触发数据包中的值以及最终在SAD中的值之间的关系。注意，IPsec的管理界面可以使用多种语法选项，方便管理员输入规则。例如，虽然IKEv2传输范围列表，但用户输入单个IP地址或前缀可能更清晰、更少出错。

（以下为示意表格内容略，详细内容请参见原文。）

总结：该表格描述了不同选择器（如本地地址、远程地址、协议、端口、协议类型、ICMP类型和代码、名称等）在不同条件下如何映射到SAD中的条目，帮助理解规则匹配和索引的关系。

o 标识被授权与此IPsec实体通信的对等方或对等组  
o 指定用于验证每个对等方的协议和方法  
o 提供每个对等方的认证数据  
o 限制对等方在创建子安全关联（Child SA）时可以声明的ID类型和取值，以确保对等方不会声明其无权代表的身份用于在安全策略数据库（SPD）中查找，尤其是在创建子SA时  
o 对等网关位置（如IP地址或DNS名称）信息，可能会被包含在内，特别是对于那些已知“在”安全网关后面的对等方  

PAD（对等方访问数据库）为IKE对等方提供这些功能，无论对等方是作为发起者还是响应者。

为了实现这些功能，PAD中为每个将要通信的对等方或对等组建立一条条目。每个条目可以指定一个具体的对等方（用户、终端系统或安全网关），或使用下述定义的ID匹配规则指定一组对等方。条目中会指明所用的认证协议（如IKEv1、IKEv2、KINK）、认证方法（如证书或预共享密钥）以及认证数据（如预共享密钥或用于验证对等方证书的信任锚）。对于基于证书的认证，条目还可能提供验证对等方吊销状态的相关信息，例如CRL存储库的指针或与对等方或其信任锚相关联的在线证书状态协议（OCSP）服务器的名称。

每个条目还会指明在创建子SA时，IKE ID载荷是作为SPD查找的符号名使用，还是使用在流量选择器载荷中提供的远端IP地址进行SPD查找。

注意，PAD信息可以支持在两个对等方之间同时创建多个隧道模式的SA，例如，为保护相同地址/主机的两个隧道，但端点不同。

4.4.3.1. PAD条目ID和匹配规则

PAD是一个有序的数据库，其顺序由管理员（或在单用户终端系统中由用户）定义。通常，PAD和SPD由同一管理员负责，因为两个数据库必须协调一致。PAD的排序要求与SPD类似，原因在于使用“星号名称”条目可能导致IKE ID集合的重叠。

PAD支持六种ID类型，与用于识别SPD条目的符号名类型和IP地址类型一致。每个条目的ID作为PAD的索引，用于选择条目。这些ID类型都可以用来匹配IKE ID载荷类型。六种ID类型包括：

- DNS名称（完整或部分）
- 完整或子树受限的可区分名称（Distinguished Name）
- RFC 822电子邮件地址（完整或部分限定）
- IPv4地址（范围）
- IPv6地址（范围）
- 密钥ID（仅支持精确匹配）

前三种名称类型支持子树匹配和精确匹配。DNS名称可以是完全限定的，匹配唯一的名称，例如foo.example.com；也可以是部分限定的，例如“.example.com”，用以匹配所有以这些域名结尾的DNS名称。

可区分名称（DN）可以指定完整的DN以精确匹配一个条目，例如：CN=Stephen, O=BBN Technologies, SP=MA, C=US；也可以通过子树匹配，匹配包含特定属性的多个DN，例如：C=US, SP=MA，可能匹配所有包含这两个属性作为前两个相对可区分名称（RDN）的DN。

RFC 822电子邮件地址支持类似的匹配方式。完整地址（如foo@example.com）匹配单一实体，而子树匹配（如@domain.com）可以匹配所有以该域名结尾的地址。

实现中用于支持子树匹配的具体语法是本地定义的，但至少必须支持上述子树匹配功能（支持在DN、DNS名或RFC 822地址中进行子串匹配是可选的，但非强制要求）。

IPv4和IPv6地址范围的语法必须支持与SPD条目相同，允许指定单一地址（通过简单范围）、地址前缀（使用CIDR样式前缀）或任意范围。

密钥ID字段在IKE中定义为八位字节字符串。对于此ID类型，只必须支持精确匹配（因为没有明确的结构），但可以支持其他匹配功能。

4.4.3.2. IKE对等方认证数据

在根据ID字段匹配PAD条目后，必须验证声明的身份，即对声明的ID进行认证。每个PAD条目会指明所需的认证类型。支持的两种必需的认证数据类型为：

- X.509证书
- 预共享密钥

基于X.509证书的认证中，PAD条目包含信任锚（trust anchor），用以验证对等方的终端实体（EE）证书（直接或通过证书路径）。关于信任锚的定义详见RFC 3280。使用证书进行认证的条目还可以包含额外信息，以协助验证证书的吊销状态，例如OCSP响应者或CRL存储库的列表及相关认证数据。基于预共享密钥的认证中，PAD包含IKE使用的预共享密钥。

本文件不要求IKE对等方声明的IKE ID在语法上必须与用于验证其身份的终端实体证书中的特定字段相关联，但在某些情况下（如一个条目代表一组对等方，每个对等方可能有不同的SPD条目）可能需要此类要求。实现必须提供机制，允许管理员要求声明的IKE ID与证书中的主题名或主题备用名匹配。前者适用于以可区分名称表达的IKE ID，后者适用于DNS名、RFC 822电子邮件地址和IP地址。由于KEY ID旨在标识通过预共享密钥认证的对等方，因此无需将此ID类型与证书字段匹配。

关于IKEv1 [HarCar98] 和IKEv2 [Kau05]，详述了IKE如何利用证书或预共享密钥进行对等方认证。

本文件不强制支持其他认证方法，但允许使用。

4.4.3.3. 子SA授权数据

对IKE对等方进行认证后，可以创建子安全关联（Child SA）。每个PAD条目包含限制对等方声明ID的范围，以便与SPD匹配。每个条目指明是否将IKE ID用作SPD匹配的符号名，或是否使用在流量选择器载荷中声明的远端IP地址。

如果条目指示使用IKE ID，则ID字段定义被授权的ID集合；如果指示使用子SA的流量选择器，则需要额外的数据元素，即IPv4和/或IPv6地址范围（对一个对等方可能同时授权两种地址类型，因此必须支持两者）。

4.4.3.4. PAD的使用方式

在初始IKE交换期间，发起者和响应者各自通过IKE ID载荷声明身份，并发送认证（AUTH）载荷以验证声明的身份。可能会传输一个或多个证书（CERT）载荷，以协助验证每个声明的身份。

当IKE实体收到IKE ID载荷时，会根据上述匹配规则用声明的ID在PAD中查找对应条目。该条目指明将采用的认证方法，确保对每个对等方使用正确的认证方式，并支持不同对等方使用不同的认证方法。条目还会指明用于验证声明身份的认证数据，这些数据与所用方法结合，在创建任何子SA之前完成对对等方的身份验证。

子SA的创建基于流量选择器载荷的交换，可能发生在初始IKE交换结束时或在随后的CREATE_CHILD_SA交换中。已认证的IKE对等方的PAD条目用以限制子SA的创建，具体表现为：通过流量选择器提案，使用的SPD查找方式可以是：一是用对等方声明的IKE ID通过符号名查找SPD条目；二是用在流量选择器载荷中声明的对等方IP地址，通过远端IP地址字段进行SPD查找。必须施加这些限制，以防止已认证的对等方伪造ID，冒充其他合法对等方。

注意，由于在搜索SPD条目前会先检查PAD，这一机制可以防止发起方受到伪造攻击。例如，假设IKE A收到一个发往IP地址X（由安全网关服务的主机）的出站包。RFC 2401 [RFC2401] 和本文件未规定A如何确定X的IKE对等方地址，但任何被A视为代表X的对等方都必须在PAD中注册，以便进行IKE交换的认证。此外，当已认证的对等方在流量选择器交换中声明代表X时，PAD会被用来验证该对等方是否被授权代表X。由此，PAD为对等方绑定地址范围（或名称子空间），以防止此类伪造攻击。

4.5. 连接安全关联（SA）和密钥管理

所有IPsec实现必须支持手动和自动的SA及加密密钥管理。IPsec协议（AH和ESP）在很大程度上独立于相关的SA管理技术，但所采用的技术会影响协议提供的安全服务。例如，AH和ESP的可选反重放（anti-replay）服务需要自动化的SA管理。此外，IPsec中密钥分发的粒度决定了提供的认证粒度。一般而言，AH和ESP中的数据源认证程度受限于：用于完整性算法（或密钥管理协议）中的密钥是否在多个潜在源之间共享。

以下内容描述两种SA管理方式的最低要求。

4.5.1. 手动技术

管理的最简单形式是手动管理，即由人员手动配置每个系统的密钥材料和安全关联（SA）管理数据，以实现与其他系统的安全通信。手动技术在小型、静态环境中是切实可行的，但不易扩展。例如，一家公司可以在多个地点的安全网关上使用IPsec创建虚拟专用网络（VPN）。如果地点数量较少，并且所有地点都属于同一管理域，这种情况下手动管理技术可能是可行的。在这种情况下，安全网关可以通过手动配置的密钥，有选择性地保护组织内其他地点的流量，而不保护其他目的地的流量。当只需要保护特定的通信时，这种方法也可能适用。类似的情况还包括在组织内部对少量主机和/或网关完全使用IPsec的场景。手动管理技术通常采用静态配置的对称密钥，但也存在其他选择。

4.5.2 自动SA和密钥管理

为了广泛部署和使用IPsec，必须有一种符合互联网标准、可扩展的自动SA管理协议。这种支持对于利用AH和ESP的防重放功能，以及按需创建SA（例如，为用户和会话导向的密钥）是必要的。（注意，“重新建立SA”实际上意味着创建一个具有新SPI的新SA，这一过程通常需要自动化的SA/密钥管理协议。）

IPsec默认采用的自动密钥管理协议是IKEv2 [Kau05]。本文假设该协议支持某些IKEv1不具备的功能，也可以采用其他自动SA管理协议。

当使用自动SA/密钥管理协议时，该协议的输出会用来生成多个密钥，用于单一的SA。这还因为IKE创建的两个SA会使用不同的密钥。如果同时启用完整性和机密性保护，则至少需要四个密钥。此外，一些密码算法（如3DES）可能需要多个密钥。

密钥管理系统可以为每个密钥提供一串比特，也可以生成一串比特，从中提取所有密钥。如果只提供一串比特，则必须确保系统两端将这串比特映射到所需密钥的方式一致。为了确保两端的IPsec实现使用相同的比特生成相应的密钥，无论系统的哪个部分将比特串划分为单个密钥，密钥都必须从串的最左端（高位）开始取，完整性密钥则从剩余比特中取。每个密钥所需的比特数由相关密码算法的RFC规范定义。在多重加密密钥或多重完整性密钥的情况下，密码算法的规范必须指明从单一比特串中选择密钥的顺序。

4.5.3 寻找安全网关

本节讨论主机如何获知相关安全网关的存在，以及在联系到这些网关后，如何确认它们是正确的。存放相关信息的具体位置是本地事务，但第4.4节描述的对等授权数据库（PAD）是最可能的候选（注：S*表示运行IPsec的系统，例如下文中的SH1和SG2）。

假设有一种场景：远程主机（SH1）通过互联网访问服务器或其他机器（H2），而H1的流量必须经过一个安全网关（SG2），比如防火墙。比如一个移动主机穿越互联网到其所在组织的防火墙（SG2）。这种情况涉及几个问题：

1. SH1如何知道/获知SG2的存在？

2. 它如何验证SG2的身份？验证后，如何确认SG2已被授权代表H2？

3. SG2如何验证SH1的身份？以及如何确认SH1有权限联系H2？

4. SH1如何知道/获知提供到H2的其他备用路径的网关？

为解决这些问题，支持IPsec的主机或安全网关必须有一个管理接口，允许用户/管理员配置一个或多个安全网关的地址，用于特定目的地址范围。这包括配置定位和验证一个或多个安全网关，以及验证这些网关是否有权限代表目标主机（授权功能在PAD中体现）。本文未涉及自动发现或验证安全网关的方法。

4.6 多播中的SA

SA的接收方导向意味着，对于单播流量，目标系统会选择SPI值。由目标端选择SPI值，避免了手动配置的SA与自动配置的SA（如通过密钥管理协议）之间的冲突，也避免了多个来源的SA相互冲突。对于多播流量，一个SA对应多个目标系统。因此，某个系统或人员需要协调所有多播组，代表每个多播组选择SPI或多个SPI，然后通过未在此定义的机制，将该多播组的IPsec信息传达给所有合法成员。

当采用对称密钥加密或完整性算法时，发往某个多播组的所有流量应使用单一的安全关联（及SPI）。在这种情况下，接收方只知道消息来自拥有该多播组密钥的系统，通常无法验证具体是哪个系统发出的多播流量。其他更通用的多播方案的规范，留给IETF多播安全工作组研究。

5 IP流量处理

如第4.4.1节“安全策略数据库（SPD）”所述，SPD（或相关缓存）必须在所有穿越IPsec保护边界的流量处理过程中被查阅，包括IPsec管理流量。如果在SPD中找不到匹配的策略（无论是入站还是出站流量），则该包必须被丢弃。为了简化处理并实现高速SA查找（如SG/BITS/BITW），本文引入了所有出站流量的SPD缓存（SPD-O和SPD-S）以及非IPsec保护的入站流量缓存（SPD-I）。如前所述，SAD作为入站IPsec保护流量的选择器缓存。每个SPD通常对应一个缓存。假设每个缓存条目对应唯一一个SA。需要注意的是，当使用多个SA传输不同优先级（如不同的DSCP值）但具有相同选择器的流量时，可能会出现例外。此外，SAD中可能存在一些条目对应的SA在SPD中没有对应条目。由于本文未要求在SPD变更时自动清除SAD中的条目，SAD中的条目可能在SPD条目被修改或删除后仍然存在。此外，如果手动建立了SA，SAD中也可能存在不对应任何SPD条目的条目。

由于SPD条目可能重叠，通常不能安全地缓存这些条目。简单缓存可能导致匹配到错误的缓存条目，而对SPD的有序搜索可以避免此问题。但如果对SPD条目进行去相关化处理，得到的条目可以安全缓存。每个缓存条目会指示匹配的流量应被绕过或丢弃（适当处理）。(注：原SPD条目可能会导致多个SA，例如因PFP等原因)。除非另有说明，以下提到的“SPD”、“SPD缓存”或“缓存”均指去相关化的SPD（SPD-I、SPD-O、SPD-S）或包含其条目的SPD缓存。

注意：在基于套接字的主机IPsec实现中，每次创建新套接字时会查阅SPD，以确定是否对该流量应用IPsec处理。这提供了隐式的缓存机制，因此可以忽略前述关于缓存的部分内容。

注意：假设从相关的SPD开始管理，因为这符合用户和管理员管理访问控制列表或防火墙规则的习惯。然后应用去相关化算法，生成可缓存的SPD条目列表。去相关化过程对管理界面是不可见的。

对于入站IPsec流量，所选的SAD条目（由SPI指示）作为匹配到到达IPsec包的选择器的缓存（在AH或ESP处理后）。

如果在缓存中未找到匹配项，则根据SPD-ID搜索指定的SPD（SPD-S和SPD-O部分）。如果SPD条目要求绕过（BYPASS）或丢弃（DISCARD），则创建一个或多个新的出站SPD缓存条目，如果是绕过，则还会创建一个或多个入站SPD缓存条目。（可能会创建多个缓存条目，因为一个去相关化的SPD条目可能会链接到其他由去相关化过程的副作用创建的条目。）如果SPD条目要求保护（PROTECT），即创建安全关联（SA），则会调用密钥管理机制（如IKEv2）来创建SA。如果SA创建成功，则会创建一个新的出站（SPD-S）缓存条目，以及出站和入站的SAD条目，否则数据包将被丢弃。（触发SPD查找的数据包可能会被实现直接丢弃，或者如果已创建缓存条目，则会用新条目进行处理。）由于SA是成对创建的，因此也会为对应的入站SA创建一个SAD条目，该条目包含从SPD条目（以及如果有任何PFP标志为“true”的数据包）派生的选择器值，用于检查通过SA传送的入站流量。

数据包随后会被传递到出站转发功能（在IPsec实现之外运行），以选择数据包将要传送的接口。该功能可能会导致数据包在IPsec边界内返回，以进行额外的IPsec处理，例如支持嵌套SA。如果发生这种情况，必须在SPD-I数据库中有一条允许入站绕过数据包的条目，否则数据包将被丢弃。如有必要（即如果存在多个SPD-I），被回环的流量可以被标记为来自此内部接口。这将允许为“真实”外部流量与回环流量使用不同的SPD-I（如果需要的话）。

注意：除了IPv4和IPv6的传输模式外，SG、BITS或BITW实现可能会在应用IPsec之前对数据包进行分片。（这仅适用于IPv4。对于IPv6数据包，只有发起者被允许进行分片。）设备应具有配置设置以禁用此功能。生成的分片会按照正常方式与SPD进行评估。因此，不包含端口号（或ICMP消息类型和代码，或移动性头类型）的分片只会匹配具有OPAQUE或ANY端口（或ICMP消息类型和代码，或MH类型）选择器的规则。（详见第7节。）

关于确定和强制执行SA的PMTU，IPsec系统必须遵循第8.2节中描述的步骤。

5.1.1. 需要丢弃的出站数据包的处理

如果IPsec系统收到必须丢弃的出站数据包，应能够生成并发送ICMP消息，通知发送者该数据包已被丢弃。ICMP消息的类型和代码将根据丢弃原因而定，具体如下。该原因应记录在审计日志中。该事件的审计日志条目应包括原因、当前日期/时间以及数据包中的选择器值。

a. 数据包的选择器匹配一个要求丢弃该数据包的SPD条目。

- IPv4：类型=3（目的地不可达），代码=13（通信被管理禁止）
- IPv6：类型=1（目的地不可达），代码=1（与目的地的通信被管理禁止）

b1. IPsec系统成功连接到远端对等体，但由于某些原因（如远端对等体被管理禁止通信、发起方无法验证远端、远端无法验证发起方，或远端SPD没有合适的条目）未能协商匹配的SPD条目所需的SA。

- IPv4：类型=3（目的地不可达），代码=13（通信被管理禁止）
- IPv6：类型=1（目的地不可达），代码=1（与目的地的通信被管理禁止）

b2. IPsec系统无法建立匹配的SPD条目所需的SA，因为无法联系到对端的IPsec对等体。

- IPv4：类型=3（目的地不可达），代码=1（主机不可达）
- IPv6：类型=1（目的地不可达），代码=3（地址不可达）

注意：在安全网关后面的攻击者可能会伪造源地址（如W.X.Y.Z）向IPsec实体发送数据包，导致其向W.X.Y.Z发送ICMP消息。这可能引发在安全网关后端主机之间的拒绝服务（DoS）攻击。为此，安全网关应包括管理控制，允许管理员配置IPsec实现是否在这些情况下发送ICMP消息，以及在启用此功能时限制ICMP响应的速率。

5.1.2. 隧道模式的头部构造

本节描述出站流量处理中内外IP头、扩展头和AH、ESP隧道的选项的处理方式，包括如何构建封装（外部）IP头、如何处理内层IP头中的字段，以及对出站隧道模式流量应采取的其他措施。这里描述的通用处理方式借鉴了RFC 2003“IP内嵌IP封装”[Per96]：

- 外部IP头的源地址和目的地址标识隧道的“端点”（封装器和解封装器）。内层IP头的源地址和目的地址分别标识原始数据报的发件人和收件人（从该隧道的角度看）。

（详见5.1.2.1节表后脚注3，关于封装源IP地址的更多细节。）

- 内层IP头除TTL（或跳数限制）和DS/ECN字段外，不做更改。在数据通过隧道传递到出口点的过程中，内层IP头保持不变。

- 在封装数据通过隧道传递时，内层IP头中的IP选项或扩展头不会发生变化。

注意：IPsec隧道模式不同于IP-in-IP隧道（RFC 2003 [Per96]）的几个方面：

- IPsec为安全管理员提供了某些控制，以管理隐蔽信道（通常隧道中不会考虑）以及确保接收端检查接收包的正确部分以应用访问控制。IPsec实现可以配置其处理外部DS字段的方式。对于出站流量，配置之一是按照以下关于IPv4和IPv6头处理的描述操作。另一种配置允许将外部DS字段映射到固定值，可以按每个SA进行配置（可能对所有出站流量固定，也可以按每个SA配置）。此配置允许本地管理员决定复制这些位带来的隐蔽信道的风险是否超过复制的好处。

- IPsec描述了如何处理ECN或DS字段，并提供控制这些字段在未保护和受保护域之间传播的能力。一般而言，从受保护域到未受保护域的传播是隐蔽信道，因此提供了管理此信道带宽的控制措施。ECN值在相反方向的传播也受到控制，只允许传递合法的ECN变化（表示隧道端点之间发生了拥塞）。默认情况下，不允许从未受保护域到受保护域传播DS值。然而，如果发件人和收件人不共享相同的DS码空间，且接收方无法学习两者之间的映射关系，则可能需要偏离默认设置。具体而言，IPsec实现可以配置其处理接收包的外部DS字段的方式，可以选择丢弃外部DS值（默认）或用外部DS字段覆盖内部DS字段。此行为可以按每个SA进行配置。此配置允许本地管理员决定复制这些位带来的潜在风险是否超过复制的益处。详见[RFC2983]，了解在何种情况下这些行为可能有用，以及在IPsec处理前后可能需要的DiffServ流量调节。

- IPsec允许封装头的IP版本与内层头不同。

以下子节的表格展示了不同头部/选项字段的处理方式（“构造”意味着外部字段的值是独立于内层值构造的）。

5.1.2.1. IPv4：隧道模式的头部构造

                         <-- 外部头部与内层头部的关系 -->
                         封装器的外部头部             解封装器的内层头部
    IPv4               --------------------         ------------
      头部字段：       版本=4（1）                   无变化
        头部长度      构造的                         无变化
        DS字段        从内层头部复制（5）             无变化
        ECN字段       从内层头部复制                 构造（6）
        总长度        构造的                         无变化
        ID             构造的                         无变化
        标志（DF、MF）  构造的，DF（4）               无变化
        分片偏移      构造的                         无变化
        TTL            构造（2）                     减少（2）
        协议           AH、ESP                       无变化
        校验和        构造的                         构造（2）（6）
        源地址        构造的（3）                     无变化
        目的地址      构造的（3）                     无变化
      选项            从不复制                       无变化

注意事项：

(1) 封装头的IP版本可以不同于内层头的值。

(2) 内层头的TTL在转发前由封装器递减，若由解封装器转发，则再次递减。（TTL变化会影响IPv4校验和。）

（3）本地和远端地址依赖于SA，用于确定远端地址，进而决定用于转发数据包的本地地址（网络接口）。

注意：多播流量中，目的地址或源和目的地址可能需要用于多路复用。在这种情况下，必须确保在SA的整个生命周期内保持一致，即封装隧道头中出现的源地址应与SA建立过程中协商的地址一致。对此有例外，即移动IPsec实现会在移动过程中更新其源地址。

(4) 配置决定是否从内层头复制（仅IPv4）、清除或设置DF标志。

(5) 如果数据包将立即进入一个域，该域的外部头DSCP值不适用，则必须将该值映射到该域的合适值[NiBlBaBL98]。详见RFC 2475 [BBCDWW98]。

（6）如果内层头部中的ECN字段被设置为ECT(0)或ECT(1)，其中ECT代表ECN支持传输（ECN-Capable Transport），并且外层头部中的ECN字段被设置为拥塞体验（Congestion Experienced，CE），那么就将内层头部中的ECN字段设置为CE；否则，不对内层头部中的ECN字段进行任何更改。（当ECN发生变化时，IPv4的校验和也会发生变化。）

注意：IPsec不会将内层头部中的选项复制到外层头部，也不会在外层头部中构造选项。然而，后IPsec代码可以插入或构造外层头部的选项。

Kent & Seo  规范追踪  [第58页]

RFC 4301  IP安全架构  2005年12月

5.1.2.2.  IPv6：隧道模式下的头部构造

<-- 外层头部与内层头部的关系 --->
外层头部在封装端            内层头部在解封端
IPv6 头部字段：               头部字段：
版本          6（1）          无变化
DS字段        从内层头部复制（5） 无变化（9）
ECN字段       从内层头部复制     构造（6）
流标签        复制或配置（8）    无变化
有效载荷长度  构造             无变化
下一个头部    AH、ESP、路由头   无变化
跳数限制    构造（2）          减一（2）
源地址      构造（3）          无变化
目的地址    构造（3）          无变化
扩展头部    从不复制（7）       无变化

注释：
（1）-（6）参见第5.1.2.1节。
（7）IPsec不会将内层包中的扩展头部复制到外层头部，也不会在外层头部中构造扩展头部。然而，后IPsec代码可以插入或构造外层头部的扩展头部。
（8）参见[RaCoCaDe04]。复制仅适用于终端系统，不适用于安全网关（SG）。如果SG将流标签从内层头部复制到外层头部，可能会导致冲突。
（9）实现可以选择提供一种机制，在接收隧道模式数据包时，将外层头部的DS值传递到内层头部（按每个安全关联（SA）进行）。这样做的动机是为了适应接收端的DS代码空间与发送端不同的情况，且接收端无法知道如何将其转换。将此值从外层头部复制到内层头部存在风险，因为攻击者可能修改外层的DSCP值，从而对接收端的其他流量产生不利影响。因此，默认情况下，IPsec实现不允许进行此类复制。

5.2. 进入IP流量的处理（未保护到受保护）

入站处理与出站处理略有不同，因为IPsec使用SPI（安全参数索引）将受保护的IP流量映射到SA。入站SPD缓存（SPD-I）仅应用于绕过或丢弃的流量。如果到达的包似乎是来自未受保护接口的IPsec碎片，则在IPsec处理之前进行重组。任何未匹配到任何条目的包都应被转发到相应的SPD。每个SPD应有一个名义上的最终条目，用于捕获所有未匹配的流量并将其丢弃。这确保未受保护的非IPsec流量到达后，如果没有匹配任何SPD-I条目，将被丢弃。

（图示略）

图3. 入站流量的处理模型

（注释：）
（*）缓存在此显示。如果发生未命中，则检查SPD。实现没有要求在未命中时缓冲包。
（**）此处理包括使用包的SPI等信息在SAD中查找SA，形成入站包的SPD缓存（除第4.4.2节和第5节所述情况外）。参见下面的步骤3a。
（***）此SAD检查指的是下面的第4步。

在执行AH或ESP处理之前，任何通过未保护接口到达的IP碎片都应由IP进行重组。每个将应用IPsec处理的入站IP数据报都由其IP下一层协议字段中的AH或ESP值（或在IPv6中作为下一层协议的AH或ESP）标识。

IPsec必须执行以下步骤：

1. 当包到达时，如果需要支持多个SPD和相关的SPD-I缓存，可以用接口（物理或虚拟）ID对包进行标记（接口ID映射到相应的SPD-ID）。
2. 检查包并将其解复用（demux）到以下两类之一：
   - 如果包似乎受到IPsec保护且目标地址为本设备，则尝试通过SAD将其映射到一个活动的SA。注意，设备可能有多个IP地址，用于SAD查找，例如在SCTP协议中。
   - 不针对本设备的流量，或目标为本设备但不是AH或ESP的流量，将进行SPD-I查找。（这意味着IKE流量必须在SPD中有明确的绕过（BYPASS）条目。）如果使用多个SPD，则用第1步中分配的标签选择相应的SPD-I（和缓存）进行搜索。SPD-I查找决定是丢弃还是绕过。

3a. 如果包目标为IPsec设备，且协议为AH或ESP，则在SAD中查找该包。对于单播流量，只用SPI（或SPI加协议）进行查找。对于多播流量，使用SPI加目的地址，或SPI加目的和源地址（参见第4.1节）。无匹配时，丢弃流量。这是可审计事件。审计日志应包括当前日期/时间、SPI、包的源和目的地址、IPsec协议及其他可用的选择器值。如果在SAD中找到该包，则按步骤4处理。

3b. 如果包未针对本设备，或目标为本设备但不是AH或ESP，则在相应的SPD-I缓存中查找包头。如果匹配且包应被丢弃或绕过，则执行相应操作。如果未命中缓存，则在相应的SPD-I中查找包，并根据需要创建缓存条目（注意：仅能创建绕过或丢弃的缓存条目，不能为需要IPsec保护的包创建SA）。未匹配时，丢弃流量。这是可审计事件。审计日志应包括当前日期/时间、SPI（如有）、IPsec协议（如有）、包的源和目的地址，以及其他可用的选择器值。

3c. ICMP消息的处理假定在IPsec边界的未保护侧进行。未保护的ICMP消息会被检查，并根据本地策略决定是否接受或拒绝，以及接受后采取何种措施。例如，收到不可达消息时，必须决定是否处理、拒绝或在限制条件下处理（参见第6节）。

4. 按照第3a步中选择的SAD条目，应用AH或ESP处理。然后，将包与由SAD条目识别的入站选择器进行匹配，以验证接收的包是否适用于接收它的SA。

5. 如果IPsec系统在某个SA上接收到的入站包的头部字段与该SA的选择器不一致，则必须丢弃该包。这是可审计事件。审计日志应包括当前日期/时间、SPI、IPsec协议、包的源和目的地址，以及其他可用的选择器值和相关SAD条目的选择器值。系统还应能够生成并发送IKE通知，指示“无效选择器（INVALID_SELECTORS）”，通知发送方（IPsec对端）包被丢弃，原因是未通过选择器检查。

为了减少DoS攻击或配置错误对系统的影响，IPsec系统应包括管理控制，允许管理员配置是否发送IKE通知，以及限制此类通知的发送速率。

在流量绕过或通过IPsec处理后，包会交由入站转发功能进行处理。该功能可能会导致包被再次发送（出站）到IPsec边界，以进行额外的入站IPsec处理，例如支持嵌套SA。如果是这样，则与所有绕过的出站流量一样，包必须与SPD-O条目匹配。最终，包应被转发到目的主机或进程进行处理。

6.  ICMP处理

本节描述IPsec对ICMP流量的处理。ICMP流量分为两类：错误消息（如类型=目的地不可达）和非错误消息（如类型=回显）。本节仅适用于错误消息。非错误ICMP消息（非针对IPsec实现本身）必须通过SPD条目明确进行处理。

本节内容适用于ICMPv6和ICMPv4。此外，应提供机制，允许管理员配置是否记录ICMP错误消息（全部、部分或不记录），以帮助故障诊断。

6.1. 发送到IPsec实现的ICMP错误消息的处理

6.1.1. 在边界未保护侧接收的ICMP错误消息

第5.2节中的图3显示了在IPsec边界未保护侧的一个专用ICMP处理模块，用于处理发往IPsec设备的ICMP消息（错误或其他），且未通过AH或ESP保护。这类ICMP消息未经过认证，其处理可能导致服务拒绝或性能下降。这表明，通常应忽略此类消息。然而，许多ICMP消息会从未认证的源（如公共互联网中的路由器）被主机或安全网关接收。忽略这些ICMP消息可能会降低服务质量，例如未能处理PMTU消息和重定向消息。因此，也有理由接受并对未认证的ICMP消息采取行动。

为了兼顾这一范围的两端，符合规范的IPsec实现必须允许本地管理员配置IPsec实现，以接受或拒绝未经过认证的ICMP流量。此控制必须以ICMP类型为粒度，也可以在ICMP类型和代码的粒度上进行。此外，实施应当包含处理此类流量的机制和参数。例如，可以设定一个最低的PMTU（路径最大传输单元）值（基于每个目的地），以防止接收未认证的ICMP消息将PMTU设置为微不足道的大小。

如果一个ICMP PMTU消息通过上述检查，并且系统配置为接受它，那么就有两种可能性。如果实现是在密文边界的加密侧应用分片，那么接受的PMTU信息会传递给转发模块（在IPsec实现之外），由其用以管理出站数据包的分片。如果实现配置为在明文侧进行分片，那么PMTU信息会传递到明文侧，并按照第8.2节所述进行处理。

6.1.2 在保护边界侧接收的ICMP错误消息

这些ICMP消息未经过认证，但它们确实来自IPsec边界保护侧的源头。因此，通常认为这些消息比来自未受保护边界侧源的对应消息更“可信”。主要的安全担忧在于，受损的主机或路由器可能会发出错误的ICMP错误消息，从而降低“背后”设备的服务质量，甚至可能导致机密性泄露。例如，如果安全网关误用伪造的ICMP重定向消息，可能会导致边界保护侧的转发表被篡改，从而将流量导向不适当的目的地“背后”。因此，实施者必须提供控制措施，允许本地管理员限制在边界保护侧接收并处理发向IPsec实现的ICMP错误消息。这些控制措施与第6.1.1节中描述的在未受保护边界侧使用的控制措施相同。

6.2 处理通过安全关联（SA）传输的保护侧ICMP错误消息

当通过SA向“背后”的设备传输ICMP错误消息时，必须从访问控制的角度对ICMP消息的负载和头部进行检查。如果这些消息被转发到受安全网关保护的主机，接收主机的IP实现将根据负载（即引发错误响应的包的头部）做出决策。因此，IPsec实现必须可配置，以检查该负载头部信息是否与到达的SA一致（即，源和目的地址、端口字段反转后，是否与SA的流量选择器匹配）。如果未进行此类检查，例如，任何与接收IPsec系统（A）有活动SA的实体都可以发送指向任何主机/网络的ICMP目的地不可达消息，从而对A的其他通信伙伴发起高效的拒绝服务攻击。普通的IPsec接收处理不足以防范此类攻击，但并非所有场景都需要此类检查，因此也必须允许本地管理员配置实现不执行此类检查。

为兼容两种策略，采用以下约定：如果管理员希望允许ICMP错误消息通过SA传输而不检查负载，则应配置显式允许此类流量的SPD条目；如果希望IPsec检查ICMP错误消息的负载以确保一致性，则不应创建任何允许此类流量通过的SPD条目。此约定引导了以下处理流程。

支持通过SA发送和接收ICMP错误消息的IPsec发送端和接收端必须支持以下处理方式：

- 如果存在匹配的SA，传出ICMP错误消息会映射到该SA，接收时只检查IP和ICMP头部，就像处理其他流量一样。
- 如果没有匹配的SA，系统会检查SPD，判断是否可以创建相应的SA。如果可以，则创建SA并通过该SA传输ICMP错误消息。接收端对该消息进行常规的流量选择器检查。这与普通流量的处理一致，不属于特殊的ICMP错误消息处理。
- 如果没有匹配的SA，也没有SPD条目允许传输该ICMP错误消息，IPsec实现必须将该消息映射到能传输与触发该ICMP错误的包相关的返回流量的SA。这要求检测出没有对应SA或SPD条目的出站ICMP错误消息，并对其进行特殊处理。具体做法是提取引发错误的包的头部（从ICMP消息负载中），反转源和目的IP地址，提取协议字段，并反转端口（如果可访问），然后利用这些信息查找合适的、活动的出站SA，并通过该SA传输错误消息。如果没有找到合适的SA，则不创建新SA，此事件可被记录为审计事件。

如果IPsec实现接收到的入站ICMP错误消息的IP和ICMP头部与该SA的流量选择器不匹配，必须以特殊方式处理该消息。具体而言，必须从ICMP负载中提取引发错误的包的头部，反转字段，判断该包是否与通过的SA的流量选择器一致。如果不一致，IPsec实现不得将该ICMP消息转发到目的地，此事件应记录为审计事件。

7. 处理分片（在IPsec边界的保护侧）

前述章节描述了（a）在IPsec处理后对出站包进行分片并在接收端重组，以及（b）处理从未受保护边界侧接收的入站分片的机制。本节描述实现应如何处理在IPsec保护侧的明文出站分片（详见附录D“分片处理原理”）。特别包括：

- 将出站非初始分片映射到正确的SA（或找到正确的SPD条目）
- 验证收到的非初始分片是否被授权通过其接收的SA
- 将出站和入站非初始分片映射到正确的SPD-O/SPD-I条目或相关缓存条目，以处理绕过/丢弃的流量

注意：在第4.1节中，传输模式的SA被定义为不携带分片（IPv4或IPv6）。此外，第4.4.1节定义了两个特殊值ANY和OPAQUE，ANY包含OPAQUE。术语“非平凡”指选择器具有除OPAQUE或ANY之外的其他值。

注意：这里使用“非初始分片”指不包含所有访问控制所需选择器值的分片。如第4.4.1节所述，依据下一层协议，除了端口外，ICMP消息类型/代码或移动性头类型可能在非初始分片中缺失。此外，对于IPv6，即使是第一个分片，也可能不包含下一层协议或端口（或ICMP类型/代码、移动性头类型），具体取决于存在的扩展头类型和数量。如果非初始分片包含端口（或ICMP类型和代码或移动性头类型），但不包含下一层协议，除非存在匹配的SPD条目（本地/远程地址，ANY协议和端口），否则该分片将不包含所有访问控制所需的选择器信息。

为解决上述问题，定义了三种方法：

- 支持携带初始和非初始分片的隧道模式SA（见7.1节）
- 支持仅携带非初始分片的单独隧道模式SA（见7.2节）
- 状态化的分片检查（见7.3节）

7.1 携带初始和非初始分片的隧道模式SA

所有实现必须支持配置为传递流量而不考虑端口（或ICMP类型/代码或移动性头类型）值的隧道模式SA。如果SA将携带特定协议的流量，则其选择器集必须将端口字段（或ICMP类型/代码或移动性头类型）设置为ANY。此类SA将携带所有流量，包括指示的本地/远程地址的初始和非初始分片，以及指定的下一层协议。如果SA在不考虑特定协议值的情况下传输流量（即，ANY作为下一层协议选择器值），那么端口字段的值未定义，也必须设置为ANY（第4.4.1节指出，ANY包括OPAQUE和所有具体值）。

7.2 支持仅携带非初始分片的单独隧道模式SA

实现可以支持只携带非初始分片的隧道模式SA，与非分片包和初始分片分开。OPAQUE值将用于指定端口（或ICMP类型/代码或移动性头类型）选择器，以携带此类分片。接收端必须对IPv4非初始分片执行最小偏移量检查，以防止重叠分片攻击。当使用此类SA时，IPv6不支持此类检查，用户和管理员应意识到携带此类分片可能存在风险，且实现者可以选择不支持IPv6的此类SA。此外，此类SA将携带所有匹配特定本地/远程地址对和协议值的非初始分片，即这些分片属于未分段的包，可能会在不同的安全级别的SA上进行传输。因此，建议用户和管理员使用ESP（带完整性保护）以及双方使用的“最强”完整性和加密算法来保护此类流量（“最强”算法的确定需由发起者根据算法的排序自行决定）。

具体端口（或ICMP类型/代码或移动性头类型）选择器值将用于定义携带初始分片和非分片包的SA。如果用户或管理员希望在相同的本地/远程地址之间创建多个区分端口（或ICMP类型/代码或移动性头类型）字段的隧道模式SA，则必须使用非平凡的协议选择器值，否则应采用方案#1。

【译者注：此部分内容较长，已尽量完整、准确地翻译，确保专业性和连贯性。如需更详细的分节标题或补充说明，请告知。】

注意：一般而言，本文所述的方法只需在两个实现之间建立一个安全关联（SA），即可携带所有非初始片段。然而，如果为了区分服务质量（QoS）而在两个实现之间选择建立多个SA，那么也可以为每个支持的QoS类别使用多个携带无端口片段的SA。由于通过不同SA支持QoS是一个本地决定的问题，并不由本文档强制规定，因此选择使用多个SA携带非初始片段的做法也应由本地决定。

7.3 有状态的片段检查

实现可以支持某种形式的有状态片段检查，特别是针对带有非平凡端口（或ICMP类型/代码或MH类型）字段值（非ANY或OPAQUE）的隧道模式SA。使用非平凡端口（或ICMP类型/代码或MH类型）选择器的隧道模式SA在传输非初始片段时，必须通过IKE通知（NOTIFY）消息中的NON_FIRST_FRAGMENTS_ALSO载荷通知对端。

如果对端不接受在此上下文中传输非初始片段的请求，则必须拒绝该请求。如果实现未能成功协商传输此类非初始片段的能力，则不得通过该SA发送此类片段。标准未规定对端如何处理此类片段（如重组或其他方式），但接收端必须丢弃在带有非平凡端口（或ICMP类型/代码或MH类型）选择器值的SA上到达的非初始片段，除非已协商支持此功能。此外，接收端还必须丢弃不符合整体包安全策略的非初始片段。丢弃此类包是可审计的事件。在某些网络配置中，包的片段可能通过不同的安全网关或BITW实现进行发送或接收，此时有状态的片段追踪策略可能会失效。

7.4 绕过/丢弃流量

所有实现必须支持使用正常的安全策略数据库（SPD）包分类机制来丢弃片段。所有实现还必须支持有状态的片段检查，以支持对指定了非平凡端口范围的绕过（BYPASS）流量。担心的是，明文非初始片段的绕过可能会削弱IPsec保护的流量的安全性。例如，假设某IPsec实现配置了SPD条目，要求对特定源/目标地址对、特定协议和目标端口（如端口23的Telnet）进行IPsec保护。又假设该实现允许绕过来自相同源/目标地址对和协议但目标端口不同（如端口119的NNTP）的流量。攻击者可以发送伪造源地址的非初始片段，如果绕过，可能会与IPsec保护的流量重叠，从而破坏IPsec保护流量的完整性。对具有非平凡端口范围的绕过条目进行有状态的片段检查，可以防止此类攻击。如前所述，在某些网络配置中，包的片段可能通过不同的安全网关或BITW实现进行发送或接收，此时有状态的片段追踪策略可能会失效。

8. 路径MTU/DF处理

应用AH或ESP到出站包会增加包的大小，可能导致包超出其所经过的SA的路径最大传输单元（PMTU）。IPsec实现还可能接收未加保护的ICMP PMTU消息，如果选择对其进行处理，则会影响出站流量的处理。本节描述IPsec实现处理这两类PMTU问题所需的操作。

8.1 DF位

所有IPsec实现必须支持在通过隧道模式SA传输流量时，将出站包的DF（不要分片）位复制到隧道头中的选项。这意味着必须可以为每个SA配置对DF位的处理方式（设置、清除或从内层头复制）。此要求适用于内外头均为IPv4的SA。

8.2 路径MTU（PMTU）发现

本节讨论IPsec对未加保护的路径MTU发现消息的处理。此处的ICMP PMTU指的是以下类型的ICMP消息：

IPv4（RFC 792）：
- 类型=3（目的地不可达）
- 代码=4（需要分片且设置了DF）
- 下一跳MTU在ICMP头的第二个字的低16位（在RFC 792中标记为“unused”），高16位为零

IPv6（RFC 2463）：
- 类型=2（数据包过大）
- 代码=0（需要分片）
- 下一跳MTU在ICMP6消息的32位MTU字段中

8.2.1 PMTU的传播

当IPsec实现接收到未加保护的PMTU消息且配置为处理（而非忽略）此类消息时，会将消息映射到对应的SA。映射通过提取PMTU消息载荷中的头部信息，并应用第5.2节描述的过程实现。由此确定的PMTU用于更新SA数据库中的PMTU字段，考虑到将应用的AH或ESP头部大小、任何加密同步数据，以及隧道模式SA中额外IP头的开销。

在本机实现中，可以在与未加保护通信相同的粒度上维护PMTU数据，因此不会丧失功能。PMTU信息的信令在主机内部进行。对于其他IPsec实现，PMTU数据必须通过合成的ICMP PMTU消息传播。在这些情况下，IPsec实现应等待出站流量映射到SAD条目。当此类流量到达时，如果超出更新后的PMTU值，则必须按以下方式处理：

- 情况1：原始（明文）包为IPv4且DF位已设置。实现应丢弃该包并发送PMTU ICMP消息。
- 情况2：原始（明文）包为IPv4且DF位未设置。实现应进行分片（在加密前或后，按配置）后转发分片，不应发送PMTU ICMP消息。
- 情况3：原始（明文）包为IPv6。实现应丢弃该包并发送PMTU ICMP消息。

8.2.2 PMTU老化

所有IPsec实现中，关联的PMTU必须“老化”，并且需要某种机制及时更新PMTU，尤其是在检测当前网络条件下PMTU是否偏小时。一个PMTU必须保持足够长的时间，以便包从SA的源头到对端，并在PMTU过大时传播ICMP错误消息。

实现应采用路径MTU发现文档（RFC 1191，第6.3节）中建议的方法，即周期性地将PMTU重置为第一跳数据链路MTU，然后让正常的PMTU发现过程更新PMTU。此周期应可配置。

9. 审计

IPsec实现不要求支持审计功能。大多数情况下，审计的粒度是本地决定的。然而，本文档中列出了一些可审计事件，并定义了每个事件应在审计日志中包含的最低信息集。对于每个事件，还可以在审计日志中加入额外信息，未在本规范中明确列出的其他事件也可能导致审计记录。检测到可审计事件后，接收端无需向声称的发起端发送任何消息，以避免可能引发的拒绝服务攻击。

10. 合规性要求

所有IPv4 IPsec实现必须符合本文件的所有要求。所有IPv6实现也必须符合本文件的所有要求。

11. 安全注意事项

本文件的重点是安全，因此安全考虑贯穿整个规范。

IPsec对IP头数据的绕过施加了严格限制，尤其是在使用隧道模式SA时。这些限制有些是绝对的，有些则依赖于本地管理控制，通常是针对每个SA的。对于出站流量，这些限制旨在限制隐蔽信道带宽；对于入站流量，旨在防止攻击者篡改未受保护的数据流，从而影响受保护的数据流。第5节关于隧道模式SA的DSCP值处理的讨论即体现了这一点。

如果IPsec实现配置为根据ICMP头部值传递ICMP错误消息，而不检查ICMP消息载荷中的头部信息，可能会引发严重漏洞。例如，假设多个站点（A、B、C）通过ESP保护的隧道相连：A-B、A-C和B-C。假设每个隧道的流量选择器都设置为ANY协议和端口，以及涵盖每个站点后端系统的IP源/目标地址范围。这允许站点B的主机向站点A的任何主机发送ICMP目的地不可达消息，声明站点C上的所有主机不可达。这是一个高效的拒绝服务攻击，如果ICMP错误消息经过IPsec的检查（如第6.2节所述）就能防止。

12. IANA考虑事项

IANA已为ASN.1模块注册值（3），并为SPD模块分配了对象标识符1.3.6.1.5.8.3.1。详见附录C，“用于SPD条目的ASN.1”。

13. 与RFC 2401的差异

本架构文档在细节和组织上与RFC 2401[RFC2401]有较大差异，但基本概念保持不变。

- 处理模型已修订，以应对新的IPsec场景、提升性能并简化实现。这包括转发（路由）与SPD选择的分离、若干SPD变更，以及新增的出站和入站绕过或丢弃流量的SPD缓存。此外，还引入了新的数据库——对端授权数据库（PAD），用于连接SA管理协议（如IKE）与SPD。

- 不再要求支持嵌套SA或“SA捆绑”。此功能可通过SPD和转发表配置实现，配置示例已加入附录E。

- SPD条目被重新定义以提供更大灵活性。每个SPD条目现在由1到N组选择器组成，每组包含一个协议，并可为本地IP、远程IP及与下一层协议相关的字段（如本地端口、远程端口、ICMP类型/代码、移动性头类型）指定范围。单个值用简单范围表示，ANY表示范围覆盖所有值。ASN.1描述示例已在附录C中。

- IPv4的TOS和IPv6的流量类别已被DSCP和ECN取代。隧道部分已更新，说明如何处理DSCP和ECN位。

以下是英文内容的中文流畅翻译：

---
   o 对于隧道模式的安全关联（SAs），现在允许由SG、BITS或BITW实现的系统在应用IPsec之前对数据包进行分片。这仅适用于IPv4。对于IPv6数据包，只有发起者被允许进行分片。

   o 当在路径上的两个中间系统之间或中间系统与终端系统之间需要安全时，可以在安全网关之间或安全网关与主机之间使用传输模式。

   o 本文澄清了所有跨越IPsec边界的流量（包括IPsec管理流量）都必须查阅安全策略数据库（SPD）或相关缓存。

   o 本文定义了在存在多个订阅者、每个订阅者需要不同IPsec上下文的情况下，如何处理安全网关。

   o 增加了一项关于保留SPI（安全参数索引）的定义。

---

Kent & Seo                  标准轨迹                    [第73页]

RFC 4301              IP安全架构                     2005年12月

   o 增加了说明为何必须检查所有IP数据包的文本——IPsec包含最小的防火墙功能，以支持在IP层的访问控制。

   o 更新了隧道部分，澄清在构建外部头时如何处理IP选项字段和IPv6扩展头。

   o 更新了入站流量的SA映射，以与AH和ESP支持单播和多播SA的变更保持一致。

   o 增加了关于如何处理在隧道模式中通过复制DSCP值到外部头而创建的隐蔽信道的指导。

   o 不再要求支持IPv4和IPv6中的AH。

   o 更新了PMTU（路径最大传输单元）处理方法。删除了关于PMTU/DF/分片的附录。

   o 增加了三种处理IPsec边界保护侧明文分片的方法，附录D详细说明了这些方法背后的理由。

   o 增加了关于如何从SPD条目或数据包中派生SA选择器值的修订文本。

   o 增加了一张新表，描述SPD条目中的选择器值、PFP标志与相应SAD条目中生成的选择器值之间的关系。

   o 增加了附录B，描述去相关化（decorrelation）。

   o 增加了关于如何处理必须被丢弃的出站数据包的文本。

   o 增加了关于如何处理未匹配到SA的被丢弃的入站数据包的文本。

   o IPv6的移动性头已被添加为可能的下一层协议，IPv6移动性头消息类型也作为选择器加入。

   o ICMP消息类型和代码已作为选择器加入。

   o 为简化起见，已移除“数据敏感级”选择器。

---

Kent & Seo                  标准轨迹                    [第74页]

RFC 4301              IP安全架构                     2005年12月

   o 更新了关于处理ICMP错误消息的文本。删除了关于“ICMP消息分类”的附录。

   o 更新了描述选择器名称的文本，使其更清晰。

   o 进一步解释了“下一层协议”，并添加了在查找下一层协议时应跳过的协议的默认列表。

   o 修改了文本，说明本文件假设使用IKEv2或具有类似功能的SA管理协议。

   o 增加了关于在存在多播SA时，如何映射入站IPsec数据报到SA的算法说明。

   o 删除了“序列空间窗口代码示例”附录。

   o 关于IP地址和端口，使用“本地”和“远程”这两个术语来替代源和目的，以描述策略规则。“本地”指受保护的实体，即出站数据包的“源”地址/端口或入站数据包的“目的”地址/端口。“远程”指对等实体或对等实体组。数据包头字段中的“源”和“目的”仍然使用。

14. 致谢

   作者感谢Ran Atkinson的贡献，他在IPsec的早期工作中发挥了关键作用，并撰写了第一系列IPsec标准：RFC 1825-1827；以及Charlie Lynn，他对第二系列IPsec标准（RFC 2401、2402和2406）以及当前版本，特别是IPv6相关问题，做出了重要贡献。作者还感谢IPsec和MSEC工作组的成员们，他们为本协议规范的发展做出了贡献。

---

Kent & Seo                  标准轨迹                    [第75页]

RFC 4301              IP安全架构                     2005年12月

附录A：术语表

   本节提供了本文中使用的几个关键术语的定义。其他文档还提供了与该技术相关的补充定义和背景信息，例如[Shi00]、[VK83]和[HA94]。本术语表包括通用的安全服务和安全机制术语，以及特定于IPsec的术语。

   访问控制
      一种安全服务，用于防止未授权使用资源，包括防止以未授权方式使用资源。在IPsec的上下文中，受控资源通常是：
               o 对于主机，计算周期或数据
               o 对于安全网关，网关后面的网络或带宽

   反重放
      见下文“完整性”。

   认证
      非正式地指数据源认证和无连接完整性这两种名义上不同的安全服务的结合。请参阅下文对这两项服务的定义。

   可用性
      作为安全服务时，涉及对抗网络攻击导致的服务拒绝或降级的安全问题。例如，在IPsec中，AH和ESP中的反重放机制支持可用性。

   保密性
      保护数据不被未授权披露的安全服务。大多数情况下，主要关注应用层数据的未授权披露，但在某些情况下，通信的外部特征（如源/目的地址、消息长度或通信频率）也可能成为关注点。流量流的保密性通过隐藏源和目的地址、消息长度或通信频率等信息来实现。在IPsec中，使用隧道模式的ESP，尤其是在安全网关上，可以提供一定程度的流量流保密性（另见“流量分析”）。

   数据源认证
      一种验证数据源身份的安全服务。通常与无连接完整性服务结合使用。

   加密
      一种将数据从可理解的形式（明文）转换为不可理解的形式（密文）以提供保密性的机制。逆过程称为“解密”。“加密”一词常用来泛指这两种过程。

   完整性
      一种确保数据修改可以被检测到的安全服务。完整性有多种形式以满足不同应用需求。IPsec支持两种完整性：无连接完整性和部分序列完整性。无连接完整性检测单个IP数据报的修改，不考虑其在流中的顺序。IPsec提供的部分序列完整性称为反重放完整性，检测重复到达的IP数据报（在有限窗口内）。这与面向连接的完整性不同，后者对流中的消息排序有更严格的要求，例如检测丢失或重排序的消息。虽然认证和完整性服务常被单独提及，但实际上它们密不可分，几乎总是同时提供。

   受保护与未受保护
      “受保护”指在IPsec保护边界内的系统或接口，“未受保护”指在边界外的系统或接口。IPsec提供一个边界，流量通过该边界。这个边界具有不对称性，反映在处理模型中。出站数据（除非被丢弃或绕过）通过应用AH或ESP及添加相应头部得到保护。入站数据（除非被丢弃或绕过）则通过移除AH或ESP头部进行处理。在本文中，入站流量从“未受保护”接口进入IPsec实现，出站流量通过“受保护”接口进入，或由实现内部在“受保护”边界一侧生成并指向“未受保护”接口。一个IPsec实现可能支持多于一个接口，无论是在边界的任一侧。受保护接口可以是内部接口，例如在主机IPsec实现中。受保护接口也可以连接到操作系统提供的套接字层接口。

   安全关联（SA）
      一种单向（单向性）逻辑连接，用于安全目的。通过SA传输的所有流量都经过相同的安全处理。在IPsec中，SA是通过AH或ESP实现的互联网层抽象。与SA相关的状态数据存储在SA数据库（SAD）中。

   安全网关
      作为两个网络之间通信接口的中间系统。外部网络（通常保护较少）上的主机（和网络）被称为“未受保护”，而内部网络和主机被视为“受保护”。由安全网关服务的内部子网和主机，通常被认为是可信的，因为它们共享共同的本地安全管理。在IPsec中，安全网关是实现AH和/或ESP的节点，为内部主机提供安全服务，确保它们与使用IPsec的外部主机（直接或通过其他安全网关）通信时的安全。

   安全参数索引（SPI）
      一个任意的32位值，接收方用它来识别应绑定到的SA。对于单播SA，SPI可以单独用来指定一个SA，也可以与IPsec协议类型结合使用。多播SA则使用额外的IP地址信息进行识别。SPI在AH和ESP协议中携带，使接收系统能够选择处理收到数据包的SA。SPI只有本地意义，由创建SA的实体（通常是携带SPI的数据包的接收者）定义，因此通常视为不透明的比特串。但SA的创建者也可以选择解释SPI中的比特，以便本地处理。

   流量分析
      对网络流量进行分析，以推断对手可能利用的信息。例如，传输频率、通信双方的身份、数据包大小和流标识符等。

---

附录B：去相关化（Decorrelation）

   本附录基于IP安全策略工作组成员Luis Sanchez、Matt Condell和John Zao的工作，关于策略缓存的研究。

   如果两个SPD条目在对应选择器的值上存在非空交集，则这两个条目被认为是相关的。缓存相关的SPD条目可能导致策略执行错误。为解决此问题（同时允许缓存），可以通过去相关化（decorrelation）来消除歧义。具体做法是重写SPD条目，使得每对条目之间都存在至少一个选择器，其值在两个条目中没有交集。一旦去相关化完成，条目之间就不再有顺序要求，因为任何查找只会匹配到一个条目。下一节将更详细介绍去相关化的过程，并提供一种实现算法。

B.1. 去相关化算法
---

基本的去相关算法对相关的安全策略数据库（SPD）中的每个条目进行处理，将其划分为一组条目，采用树状结构。树的节点是策略选择器（selector），不同策略之间可能存在重叠。在每个节点，算法会为每个选择器的值创建一个分支，还会为所有选择器值的并集的补集创建一个分支。然后，从根节点开始遍历树到每个叶子节点，形成对应的策略。在叶子节点的策略会与已去相关的策略规则集进行比较。每个叶子节点的策略要么被已去相关策略集中的某个策略完全覆盖而被丢弃，要么与已去相关策略集中的所有策略去相关后加入到该集。

基本算法不能保证得到最优的去相关条目集。也就是说，生成的条目可能被拆分得比必要的更细，但仍能提供所有必要的策略信息。后续会介绍一些扩展方法，以改善这一点并提升算法的性能。

一个策略（SPD条目）P可以表示为一系列选择器值和一个动作（BYPASS、DISCARD或PROTECT）：

  Ci = Si1 × Si2 × ... × Sik → Ai

具体步骤如下：

1) 将第一个策略C1加入集合U，记为U1。

2) 对于C中的每个策略Cj（j > 1）：

  - 如果Cj与U中的每个条目都去相关，则将其加入U。

  - 如果Cj与U中的一个或多个条目相关，则以Cj为根，建立一棵树，将Cj划分为一组去相关的条目。树从根节点开始，尚未选择任何选择器。

  A) 选择一个在从根到当前节点的路径中尚未选择的选择器Sjn。如果所有选择器都已用完，则继续未完成的分支，直到所有分支完成。树完成后，转到步骤D。

   - T为U中与当前节点对应条目相关的条目集。

   - 当前节点的条目由从根到该节点的所有分支的选择器值组成。未在分支中表示的选择器值，假设为Cj中对应的最大值（因为Cj中的值代表最大值）。

  B) 对T中每个条目中出现的选择器Sjn的每个值，添加一条分支（如果该值是Cj中Sjn值的超集，则用Cj中的值，因为它代表全集）。还要添加Sjn所有值的并集的补集的分支。补集的计算要记住，Cj中Sjn的值代表全集。空集不必创建分支。

  C) 重复A和B，直到树构建完成。

  D) 每个叶子节点的条目代表Cj的一个子集。叶子上的条目将Cj完全划分为若干子集，每个子集要么被U中的某个条目完全覆盖，要么与U中的条目去相关。将树叶上的所有去相关条目加入U。

3) 取下一个Cj，返回步骤2。

4) 当所有C中的条目都处理完毕后，U即为C的去相关版本。

该算法可以进行多种优化。这里介绍一些：

- 通过合理选择用于下一分支的选择器顺序，可以优化或至少减少分支数。例如，如果可以选择一个Sjn，使得T中该选择器的所有值都等于或超集于Cj中的Sjn值，则只需创建一条分支（因为补集为空）。

- 树的分支不必继续进行完整的去相关算法。例如，如果某个节点代表的条目与U中的所有条目都去相关，则无需继续对该分支进行去相关。同理，如果某个分支被U中的某个条目完全覆盖，也无需继续。

- 还可以增加一个优化步骤：检查某个分支是否被已去相关的C中某个相关条目覆盖（即，是否被某个编号小于j的已去相关条目覆盖），如果是，则可以跳过。

- 在步骤2中，除了检查条目是否已去相关外，还应检查Cj是否被U中的某个条目覆盖。如果被覆盖，则可以跳过该条目，因为它不再需要处理。一个条目x被另一个条目y覆盖的条件是：x中的每个选择器值都等于或是y中对应选择器值的子集。

通过这些优化，可以提升算法的效率，减少不必要的分支和计算。

附录C：SPD条目的ASN.1定义

本附录提供一种描述SPD条目的补充方式，基于第4.4.1节定义的内容，采用已成功编译的ASN.1语法。此语法仅为示意，实际实现中不必强制使用，SPD的描述在第4.4.1节为规范性内容。

（此处为ASN.1定义的详细内容省略，内容包括SPD模块、策略条目、IPsec条目、绕过或丢弃条目、选择器、协议、端口、地址等多种结构定义。）

IPv4范围 ::= 序列 { -- 接近，但还不完全正确 ...
    ipv4Start   OCTET STRING (SIZE (4)),
    ipv4End     OCTET STRING (SIZE (4))
}

-- IPv6地址表示
IPv6List ::= SEQUENCE OF IPv6Range

IPv6Range ::= 序列 { -- 接近，但还不完全正确 ...
    ipv6Start   OCTET STRING (SIZE (16)),
    ipv6End     OCTET STRING (SIZE (16))
}

结束










Kent & Seo                  标准轨迹                    [第87页]


RFC 4301              IP安全架构                     2005年12月


附录D：分片处理的基本原理

   关于在IPsec中处理（明文）分片，有三个问题需要解决：

        - 将非初始的出站分片映射到正确的安全关联（SA）
          （或找到正确的安全策略数据库（SPD）条目）
        - 验证收到的非初始分片是否被授权通过其接收的SA
        - 将出站和入站的非初始分片映射到正确的SPD/缓存条目，用于绕过/丢弃的流量

   第一个和第三个问题的出现，是因为我们需要一个确定性算法，将流量映射到SA（以及SPD/缓存条目）。这三个问题都很重要，因为我们希望确保跨越IPsec边界的非初始分片不会导致接收端（或发送端）现有的访问控制策略被违反。

D.1. 传输模式与分片

   首先，我们注意到，传输模式的SA被定义为不携带分片。这是从RFC 2401继承而来的，在该规范中，传输模式的SA总是在端点终止。这是一个基本要求，因为在最坏的情况下，应用IPsec的IPv4分片可能会再次被分片（作为密文包），在到达目的地的途中。IPsec接收端的IP分片重组程序将无法区分IPsec前的分片和IPsec处理后产生的分片。

   对于IPv6，只有发送端被允许进行分片。与IPv4类似，IPsec实现可以在IPsec处理后对隧道模式的包进行分片，因为它相对于（外层）隧道头是发送端。然而，不同于IPv4，IPv6中在传输模式SA上携带明文分片是可行的，因为IPv6中的分片头会出现在AH或ESP头之后，因此不会在接收端引起重组的混淆。具体来说，接收端不会在IPsec处理之前尝试重组分片，直到IPsec处理完成。为了简化起见，本规范禁止在IPv6流量的传输模式SA上携带分片。

   当只有端系统使用传输模式SA时，不允许携带分片的问题并不成问题，因为我们假设端系统可以配置为不向IPsec提供分片。对于本地主机实现，这似乎合理，正如有人已指出，RFC 2401警告说，BITS实现可能需要在进行SA查找之前重组分片（即先重组再应用AH或ESP，然后再进行分片）。因为BITS实现假设可以访问其主机发出的所有流量，即使主机有多个接口，这被认为是合理的要求。

   在本规范中，在IPsec实现不是最终目的地（例如两个安全网关之间）时，使用传输模式是可以接受的。原则上，这为出站明文分片映射到传输模式SA进行IPsec处理提供了新的可能性。然而，在这些新场景中，似乎仍然可以禁止IPsec看到的分片传输，即带有非零分片偏移字段的“外层”包。例如，在IP覆盖网络中，通过传输模式SA发送的包是IP-in-IP隧道，因此具有必要的内层头部以支持在IPsec处理前的分片。当通过传输模式SA传输时，IPsec不会检查内层IP头部，因此不会将此类包视为分片。

D.2. 隧道模式与分片

   对于隧道模式SA，出站分片可能会到达IPsec实现进行处理。这就带来了问题，因为非初始分片通常不会包含与下一层协议（如TCP、UDP或SCTP）相关的端口字段。因此，根据SPD的配置，明文分片可能会带来不同的问题。

   例如，如果SPD要求两个地址范围之间的所有流量都必须经过IPsec保护（没有绕过或丢弃的SPD条目适用于此地址范围），那么携带非初始分片到为该地址范围定义的SA就很容易，因为SPD条目意味着所有该地址范围之间的流量都要被保护。但如果有多个SPD条目可以匹配某个分片，且这些条目引用不同的端口子集（与ANY不同），那么就无法明确地将出站非初始分片映射到正确的条目。这种情况下，允许在IPv6的传输模式SA上携带分片的问题也会出现。

   这个问题在很大程度上（但不完全）促使RFC 2401定义了OPAQUE作为端口字段的选择器值。另一个动机是观察到端口字段可能因IPsec的应用而不可访问。例如，如果一台主机对其流量应用了IPsec，且该流量到达安全网关（SG），这些端口字段将被加密。RFC 2401中定位“下一层协议”的算法也促使使用OPAQUE，以适应在此类情况下加密的下一层协议字段。尽管如此，OPAQUE的主要用途是匹配没有端口字段（非初始分片）或端口字段已被加密（嵌套应用IPsec）的包的流量选择器字段。RFC 2401在讨论OPAQUE与ANY的使用时存在歧义，某些地方暗示ANY可能是OPAQUE的替代。

   通过定义ANY和OPAQUE值，我们获得了额外的访问控制能力。OPAQUE可以定义为只匹配不可访问的字段。我们可以将ANY定义为OPAQUE的补集，即匹配所有值，但仅限于可访问的端口字段。因此，本文件简化了定位下一层协议的过程，将ESP和AH视为下一层协议。这样，关于加密的下一层协议字段的概念就不存在了，也不必担心端口字段的加密问题。因此，OPAQUE将仅适用于非初始分片。

   既然我们采用了上述ANY和OPAQUE的定义，就需要澄清在协议没有端口字段或协议选择器使用ANY时，这些值的工作方式。因此，如果使用特定的协议值作为选择器，而该协议没有端口字段，则端口字段选择器应被忽略，端口字段的值必须设为ANY（必须如此）。在这种情况下，ICMP的TYPE和CODE值（用于IKEv2协商）以及IPv6移动性头的TYPE值，都作为单一的端口字段处理。如果协议选择器为ANY，则应视为没有定义端口字段的协议，端口选择器应被忽略，必须设为ANY。

D.3. 非初始分片的问题

   对于安全网关（SG）实现，显然分片可能来自SG后端的端系统。BITS实现也可能遇到来自其后端主机或网关的分片（如前所述，本地主机和BITS实现可能避免此问题）。在最坏情况下，来自一个包的分片可能到达不同的BITS或SG实例，从而无法进行重组作为解决方案。因此，在RFC 2401中，我们采用了一个普遍的要求：所有实现都必须在隧道模式下处理分片。然而，RFC 2401没有提供完美的解决方案。使用OPAQUE作为端口字段的选择器值（在RFC 2401中是推荐的）允许SA携带非初始分片。

   根据RFC 2401定义的功能，如果在两个IPsec（SG或BITW）实现之间定义了一个SA，且两个端口字段都使用OPAQUE值，那么所有匹配源/目标地址和协议值的非初始分片都将映射到该SA。初始分片不会映射到此SA（如果严格定义OPAQUE）。但RFC 2401没有详细说明这一点，因此可能没有意识到此功能实际上会创建一个“仅限非初始分片”的SA。

   在讨论“仅分片”SA的过程中，注意到一些细微的问题（RFC 2401未考虑到的问题）需要避免。例如，此类SA必须配置为提供最高质量的安全服务，以确保通过该SA捕获的任何流量都不会比未分片的流量安全性降低。这是为了确保由“仅分片”SA捕获的流量不会受到较低安全级别的影响。一个潜在的问题是，可能无法定义两个IPsec实现之间的“最高质量”安全服务，因为安全协议、选项和算法的选择是一个偏序集，而非完全有序集（比如，BYPASS < AH < ESP（完整性）是可以的，但如果有多个ESP加密或完整性算法选项，就变得复杂）。因此，需要在这些安全参数上施加全序关系以实现此方案，但这可以在本地完成。

   不过，这种保守策略可能带来性能上的负面影响。如果大部分流量（针对特定S/D地址对和协议）被绕过，那么为该地址对配置的“仅分片”SA可能会导致加密处理的流量大幅增加。如果加密实现不能支持高流量速率，这可能引发问题（高性能的IPsec实现可以应对这种配置，性能影响较小）。但性能影响仍是一个潜在的考虑因素，取决于实现能力。

   另一个担忧是，通过专用SA发送的非初始分片可能被用来进行重组重叠攻击（结合看似可接受的初始分片）。这种攻击假设伪造分片的创建，不是正常分片的副作用。这个问题在IPv4中可以通过检查分片偏移值来解决，确保没有非初始分片的偏移量过小以重叠端口字段（端口应在初始分片中出现，IPv4的MTU最小值为576字节，最大IP头长度为60字节）。如果要求所有非初始分片的偏移量至少为128或更大，以确保安全，这应能防止此类攻击。只为防止此类重组攻击，接收端应执行此检查。

IPv6 也具有片段偏移量（fragment offset），该信息在片段扩展头中携带。然而，IPv6的扩展头长度是可变的，没有类似于IPv4中最大头部长度的值可以用来检查非初始片段，从而拒绝可能用于攻击的片段。接收方需要维护类似于重组状态的状态信息，以提供等效的保护。因此，只有在IPv4中，才可行对片段偏移量进行检查，以拒绝试图绕过IPsec（或防火墙）端口字段检查的攻击（即在传输非初始片段时）。

另一个潜在的问题是，在某些拓扑结构和安全策略数据库（SPD）配置中，这种方法可能导致访问控制上的意外。具体来说，如果我们为所有（非初始）片段创建一个安全关联（SA），那么该SA可能会携带一些本应通过另一条路径（例如由代理防火墙监控的路径）以明文形式到达的流量。但这个担忧只在另一条路径允许非初始片段无需重组即可通过的情况下才成立——这显然对代理防火墙来说是不好的做法。不过，确实在某些拓扑和特定的SPD及防火墙规则集假设下，这可能成为一个潜在问题，管理员应对此保持警惕。

一个较不严重的担忧是，通过只允许非初始片段的SA（只传输非初始片段的安全关联）可能成为一种拒绝服务（DoS）攻击的机会，即在没有有效初始片段到达的情况下，发送非初始片段。这可能被用来攻击位于安全网关（SG）或边界防火墙（BITW）后面的主机。然而，这类攻击的增量风险似乎较小，因为它只能由位于这些设备后面的主机发起。

如果我们将“ANY”选择器值理解为包含“OPAQUE”，那么一个端到端的SA，端口字段都设置为ANY，就可以匹配所有符合源/目的地址和协议选择器的流量，作为使用OPAQUE值的替代方案。但使用ANY会排除在相同地址对和协议的不同端口范围内建立多个不同的SA的可能性，因此并不完全等价。

根本上，片段处理的问题只在于定义了多个具有相同源/目的地址和协议选择器，但端口字段不同的SA时才会出现。

D.4. 旁路/丢弃（BYPASS/DISCARD）流量

我们还必须处理针对旁路/丢弃条目的非初始片段处理问题，这与SA处理无关。这主要是一个本地问题，原因有两个：

1）由于没有调用IKE，IPsec实现之间无法协调SPD中的此类流量条目。
2）许多此类条目涉及的流量并非针对或来自使用IPsec的端点，因此没有对应的对等IPsec实现可以进行协调。

不过，本规范应提供指导，确保在IPsec边界上对所有流量提供明确的访问控制功能。为此，本文规定：当端口字段被指定时，实现必须支持对旁路/丢弃流量的片段重组。实现还必须允许用户或管理员根据第4.4.1节描述的SPD规则，接受或拒绝此类流量。担心在IPsec实现中，未加密的非初始片段被旁路可能削弱IPsec保护的安全性。例如，假设某IPsec实现配置了SPD条目，要求对特定源/目的地址对、特定协议（如TCP端口23，即Telnet）进行IPsec保护。又假设该实现允许对来自相同源/目的地址对和协议，但目的端口不同（如端口119，NNTP）进行旁路。攻击者可以发送伪造源地址的非初始片段，如果被旁路，可能与IPsec保护的流量重叠，从而破坏IPsec的完整性。要求对具有复杂端口范围的旁路条目进行状态性片段检查，可以防止此类攻击。

D.5. 只说不ports（端口）？

有人建议，为避免上述问题，可以在隧道模式下不允许使用端口字段选择器。但前述讨论表明，这样做过于严格——实际上，在本地操作系统和BITS实现中并不存在此类问题。此外，一些工作组成员提出，在某些场景下，使用带有（非平凡）端口字段选择器的隧道模式SA是合理的。因此，关键在于制定一种策略，能在BITW和SG环境中应对这一问题。还应注意，SPD中使用端口的旁路/丢弃条目，无论是隧道模式还是传输模式，都存在相同的问题。

有人建议，位于SG或BITW后面的防火墙应负责端口级访问控制和分片的影响。然而，这种建议似乎不合理，因为在IPsec的其他部分（如IKE载荷）中，我们关注的是总是丢弃片段的防火墙。如果许多防火墙都不传递片段，为什么我们要期望它们在此场景中处理片段？因此，本分析拒绝了在隧道模式SA中禁止使用端口字段选择器的建议。

D.6. 其他建议方案

一种方案是在发送端IPsec实现中对片段进行重组，从而完全避免此问题。这种方法对接收端是不可见的，可以作为一种纯本地的实现选项。

更复杂的方案是：对每个遇到的初始片段建立和维护最小状态，以便将非初始片段匹配到正确的SA或SPD/缓存条目。这意味着扩展当前（甚至旧的）处理模型。IPsec实现会拦截所有片段，从初始片段中捕获源/目的IP地址、协议、包ID和端口字段，然后用这些数据将非初始片段映射到需要端口字段的SA。如果采用此方案，接收端也必须采用类似机制，验证收到的片段是否与SA选择器值一致。若非初始片段在初始片段到达前到达，可以缓存或丢弃，等待对应的初始片段。

上述两种方案的缺点是：它们并非总能奏效。当拓扑结构配置为可能导致某个包的片段在不同的SG或BITW设备上被处理时，不能保证所有片段都能到达同一IPsec设备。这也可能引发处理问题：如果发送端缓存非初始片段，可能会出现缓冲问题，尤其在高速环境中；如果直接丢弃非初始片段，则无法保证流量能成功传递（如重传可能导致不同的包ID，无法匹配之前的传输）。因此，必须有管理程序决定何时删除片段状态信息，这会增加系统复杂性。尽管如此，在某些拓扑中，这些方案仍然是可行的，且这些拓扑可能较为常见。

工作组曾否决了早期提出的只为非初始片段建立SA的方案（在RFC 2401模型中通过OPAQUE端口字段隐式支持，但未在RFC 2401中明确表达）。该方案建议每个非初始片段都由发送端和接收端视为协议44（IPv6片段头协议ID）。虽然此方案可能使IPv4和IPv6的片段处理更统一，但它并未根本解决问题，也未解决旁路/丢弃流量的片段处理问题。鉴于IPv6带来的片段重叠攻击问题，采用此策略似乎不值得。

D.7. 一致性

之前，工作组已同意允许IPsec的BITS、BITW或SG在IPsec处理前进行片段化。如果在发送端在SA查找后进行片段化，就不存在“映射到正确的SA”的问题。但，接收端仍需验证收到的非初始片段是否与其接收的SA一致。由于初始片段可能在途中丢失，接收端会遇到上述所有潜在问题。因此，为保持一致性，必须说明接收端将如何处理到达的非初始片段。

D.8. 结论

在所有场景中，没有一种简单且统一的方式可以处理片段。不同的方法在不同环境中效果更佳。因此，本文提供了三种选择——一种为必须（MUST），两种为可选（MAY）。未来，随着社区对这两种“可选”方案的经验积累，它们可能变为“应当”（SHOULD）或“必须”（MUST），或者提出其他方案。

附录E：通过SPD和转发表支持嵌套SA的示例

本附录提供了一个配置SPD和转发表以支持嵌套SA对的示例，符合新的处理模型。为简便起见，假设只有一个SPD-I。

示例目标是支持从A到C的传输模式SA，该SA通过从A到B的隧道模式SA传输。例如，A可能是连接到公共互联网的笔记本电脑，B是保护企业网络的防火墙，C是企业网络中的一台服务器，要求对A的流量进行端到端的认证。

示意图：
```
     +---+     +---+  +---+
     | A |=====| B |  | C |
     |   |------------|   |
     |   |=====|   |  |   |
     +---+     +---+  +---+
```

A的SPD包含如下条目：
```
                        下一层
规则  本地地址  远程地址  协议   动作
----  --------  --------  ----  -----------------------
1     C        A         ESP   BYPASS
2     A        C         ICMP,ESP  PROTECT(ESP,隧道,完整性+保密)
3     A        C         ANY   PROTECT(ESP,传输,仅完整性)
4     A        B         ICMP,IKE  BYPASS
```

A的未保护端（未加密端）转发表设置为：发往C的出站包被环回到受保护端。A的受保护端转发表设置为：入站ESP包被环回到未保护端。A的转发表示例如下：

未保护端转发表：
```
规则  本地地址  远程地址  协议  动作
----  --------  --------  ----  ---------------------------
1     A        C         ANY   环回到受保护端
2     A        B         ANY   转发到B
```

受保护端转发表：
```
规则  本地地址  远程地址  协议  动作
----  --------  --------  ----  ---------------------------
1     A        C         ESP   环回到未保护端
```

一个从A到C的TCP出站包会匹配SPD规则3，应用传输模式的ESP。未保护端转发表会将包环回。包与SPD-I（见图2）匹配，符合规则1，因此被旁路（BYPASS）。作为出站包，再次与SPD匹配，匹配规则2，应用隧道模式的ESP。此时，转发表不再环回包，因为外层目的地址是B，包会发出到网络上。

一份从C到A的入站TCP数据包被封装在两个ESP头中；外层头（隧道模式的ESP）显示B为源，而内层头（传输模式的ESP）显示C为源。到达A时，该数据包会根据SPI映射到一个安全关联（SA），然后去除外层头，并进行解密和完整性验证。之后，它会与该SA的安全关联数据库（SAD）中的选择器进行匹配，选择器会根据安全策略数据库（SPD）规则2，指明C为源，A为目的。保护端的转发功能会根据地址和下一层协议（ESP）将其返回到未保护端，表现出嵌套的特征。接着，它会与SPD-O（参见图3）进行比对，发现符合SPD规则1，因此被绕过（BYPASS）。该数据包会根据SPI映射到一个SA，经过完整性验证后，再与由SPD规则3导出的SAD选择器进行比对。最后，转发功能会将其传递到下一层，因为它不是一个ESP数据包。