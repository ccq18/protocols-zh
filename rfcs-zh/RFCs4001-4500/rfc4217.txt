# RFC 4217 中文翻译 (stub)
# 原文文件: ../../rfcs/RFCs4001-4500/rfc4217.txt

网络工作组                                 P. Ford-Hutchinson
意见请求编号：4217                                    IBM英国有限公司
标准轨道类别：标准追踪                                2005年10月


                         使用TLS保护FTP

本备忘录的状态

   本文件为互联网社区制定的互联网标准轨道协议，旨在征求讨论和改进建议。请参阅当前版本的《互联网官方协议标准》（STD 1），了解该协议的标准化状态和最新进展。本备忘录的分发不受限制。

版权声明

   版权所有（C）互联网协会（2005年）。

摘要

   本文描述了一种机制，FTP客户端和服务器可以利用该机制，通过RFC 2246定义的TLS协议（“TLS协议第1.0版”）及RFC 2228定义的FTP安全扩展，实现安全性和认证。它介绍了扩展中必需的子集及所用参数，讨论了客户端和服务器在实现中需要考虑的一些策略问题，分析了这些策略的潜在影响，并探讨了实现的预期行为，以确保互操作性。本文旨在为FTP提供类似于RFC 2487（“通过传输层安全协议实现安全SMTP服务扩展”）和RFC 2817（“在HTTP/1.1中升级到TLS”）中对SMTP和HTTP的TLS支持。

本规范符合RFC 959（“文件传输协议”）的规定，依赖RFC 2246（“TLS协议第1.0版”）和RFC 2228（“FTP安全扩展”）。













Ford-Hutchinson             标准轨道                     [第1页]


RFC 4217                 使用TLS保护FTP             2005年10月


目录

   1. 引言 ....................................................3
   2. 目标读者 ................................................5
   3. 概述 ....................................................5
   4. 控制端口上的会话协商 ....................................5
      4.1. 客户端希望建立安全会话 .............................5
      4.2. 服务器希望建立安全会话 .............................6
   5. 清除控制端口 ............................................6
   6. 对FEAT命令的响应 ........................................7
   7. 数据连接行为 ............................................8
   8. AUTH命令的机制 ..........................................9
   9. 数据连接的安全性 ........................................9
   10. 协商行为的讨论 .........................................11
      10.1. 服务器对控制连接的看法 ............................11
      10.2. 服务器对数据连接的看法 ............................12
      10.3. 客户端对控制连接的看法 ............................14
      10.4. 客户端对数据连接的看法 ............................15
   11. 协商内容、地点和方式 ...................................15
      11.1. 是否需要保护 .......................................15
      11.2. 控制连接的保护级别 .................................15
      11.3. 是否对数据连接进行保护 .............................16
      11.4. 特定数据传输是否需要保护 ...........................16
      11.5. 特定数据传输所需的保护级别 ..........................16
   12. 时序图 ..................................................16
      12.1. 建立受保护会话 .....................................17
      12.2. 无密码请求的受保护会话建立 .........................18
      12.3. 建立受保护会话后，使用CCC清除 .......................19
      12.4. 无保护的标准数据传输 .................................20
      12.5. 无保护的防火墙友好型数据传输 .........................20
      12.6. 受保护的标准数据传输 .................................21
      12.7. 受保护的防火墙友好型数据传输 .........................21
   13. REIN命令的讨论 ..........................................22
   14. STAT和ABOR命令的讨论 ....................................22
   15. 安全考虑 ................................................23
      15.1. 认证令牌的验证 ......................................23
           15.1.1. 服务器证书 ....................................23
           15.1.2. 客户端证书 ....................................23
      15.2. 关于FTP安全性的考虑 [RFC-2577] ......................24
           15.2.1. 反弹攻击 ......................................24
           15.2.2. 访问限制 ......................................24
           15.2.3. 密码保护 ......................................24
           15.2.4. 隐私 ..........................................24
           15.2.5. 用户名保护 ....................................24
           15.2.6. 端口劫持 ......................................25
           15.2.7. 软件安全问题 ..................................25
      15.3. 关于CCC命令的问题 ....................................25
   16. IANA考虑 .................................................25
   17. 其他参数 .................................................25
   18. 可扩展性与限制 ..........................................26
   19. 适用性 ..................................................26
   20. 致谢 ....................................................26
   21. 参考文献 ................................................26
      21.1. 核心参考文献 ......................................26
      21.2. 补充参考文献 ......................................27

1. 引言

   本文描述了如何将另外三份文档结合起来，为文件传输协议提供实用、互操作且安全的保障。这三份文档分别是：

      RFC 959 [RFC-959]

         互联网文件传输协议的描述。

      RFC 2246 [RFC-2246]

         传输层安全协议（TLS）的描述（基于Netscape的SSL协议第3.0版开发而成）。

      RFC 2228 [RFC-2228]

         为FTP协议扩展安全机制协商的扩展，支持认证、机密性和消息完整性。

   本文旨在以类似RFC 3207 [RFC-3207]（SMTP的TLS支持）和RFC 2817 [RFC-2817]（HTTP中的升级到TLS）的方法，为FTP提供TLS支持。

   [RFC-2228]中的FTP安全扩展提供了一套完整的命令和响应，用于在FTP中增加认证、完整性和机密性。TLS协议是一种广泛采用（尤其是在HTTP环境中）的机制，用于一般性地保护套接字连接。

   虽然TLS不是唯一的文件传输安全机制，但它具有以下一些优点：





Ford-Hutchinson             标准轨道                     [第3页]


RFC 4217                 使用TLS保护FTP             2005年10月


      - 灵活的安全级别。TLS可以支持机密性、完整性、认证或这些的某些组合。在会话中，客户端和服务器可以动态决定某次数据传输所需的安全级别。

      - 能够对FTP服务器进行强认证。

      - 可以利用TLS身份验证机制对客户端用户和客户端主机进行认证。

      - 正式化的公钥管理。通过在认证阶段使用成熟的客户端身份机制（由TLS支持），可以将证书管理集成到中心化的管理功能中。虽然这可能并不适用于所有安全文件传输的场景，但在某些结构化环境中具有优势。

      - 与已存在的HTTPS认证机制兼容和互操作。这使得网页浏览器可以利用相同的基础设施实现安全文件传输，从而支持安全网页浏览。

   TLS协议是Netscape Communications公司SSL协议的演进版本，本文可以用来让FTP协议支持SSL或TLS。实际使用的协议由TLS/SSL层协商确定。本文只涉及TLS协议，但理解上客户端和服务器也可能配置为使用SSL。

   这三种协议的结合方式多种多样。本文选择了一种方法，使FTP在保证安全的同时，兼具灵活性和互操作性。这需要对实际的协商机制进行简要描述，详细说明所需的策略和实践，并讨论客户端和服务器的预期行为，以便双方都能根据安全需求调整会话。

   本文中出现的“必须”（MUST）、“不得”（MUST NOT）、“需要”（REQUIRED）、“应当”（SHALL）、“不应当”（SHALL NOT）、“建议”（SHOULD）、“不建议”（SHOULD NOT）、“推荐”（RECOMMENDED）、“可以”（MAY）和“可选”（OPTIONAL）等关键词，均按[RFC-2119]的定义解释。









Ford-Hutchinson             标准轨道                     [第4页]


RFC 4217                 使用TLS保护FTP             2005年10月


2. 目标读者

   本文面向希望实现TLS作为安全机制，以保护FTP客户端和/或服务器的开发者。

   系统管理员和架构师应充分了解[RFC-2228]中讨论的安全影响，在选择实现方案和配置时应考虑这些安全因素。

3. 概述

   关于FTP安全协议增强的完整描述见[RFC-2228]。本文介绍了如何实现其中定义的AUTH、PROT、PBSZ和CCC命令，结合TLS协议使用。

   简而言之，FTP会话在正常控制端口上建立。客户端通过AUTH命令请求TLS，然后决定是否使用PBSZ和PROT命令保护数据连接。如果客户端希望在认证完成后将控制连接恢复为明文，可以使用CCC命令。

   实现此协议扩展并不能保证每个会话和数据传输都绝对安全，它仅提供工具，使客户端和/或服务器可以协商出符合需求的安全级别。实际上，服务器可以实现拒绝不安全操作的功能。

4. 控制端口上的会话协商

   服务器监听在标准FTP控制端口（{FTP-PORT}），会话初始化时未进行任何安全保护。一旦客户端希望建立安全会话，就会发送AUTH命令，服务器可能随后允许TLS协商。

4.1. 客户端希望建立安全会话

   如果客户端希望尝试建立安全会话，应根据[RFC-2228]，发送带有参数请求TLS的AUTH命令（“TLS”）。

   客户端随后应根据收到的服务器响应和TLS协商的结果，采取相应的行为。收到AUTH拒绝的客户端可以选择继续未加密的会话（如果需要）。

4.2. 服务器希望建立安全会话

   由于FTP协议不允许服务器直接控制客户端行为，但可以通过拒绝接受某些FTP命令，直到会话达到服务器接受的安全级别，从而实现类似效果。

   在任何情况下，服务器对“AUTH TLS”命令的响应“234”表示会接受该请求。

   “334”响应（[RFC-2228]定义）意味着将进行ADAT交换，但本文未使用ADAT命令，因此“334”响应不正确。

   FTP协议要求使用USER命令识别试图连接的实体。虽然TLS协商可能提供了认证信息，但客户端仍必须发出USER命令。服务器需要决定接受哪些凭据，以及如何验证客户端证书与USER命令参数的一致性。

   [RFC-2228]规定，AUTH命令后，用户必须重新授权（即重新发出部分或全部的USER、PASS和ACCT命令）。此外，本文还规定，除AUTH参数外，所有其他传输参数（如用户身份、默认数据端口、TYPE、STRU、MODE和当前工作目录）都应重置，就像发出了REIN命令一样。

      在AUTH命令后，重置传输参数，包括（但不限于）：用户身份、默认数据端口、TYPE、STRU、MODE和当前目录。

5. 清除控制端口

   在某些情况下，可能只希望在会话的某一部分保护控制连接，然后再恢复为明文连接。这常因NAT、防火墙等边界设备的限制，这些设备需要检查控制连接内容以调整行为。

   通常，AUTH、USER、PASS、PBSZ和PROT命令会在TLS协议中保护，之后发出CCC命令以返回明文状态。这涉及重要的安全问题（在安全考虑部分讨论），但本文描述了在考虑相关问题后，客户端和服务器仍希望使用该命令的使用方式。

   服务器收到CCC命令后，应按以下方式操作：

      如果服务器不接受CCC命令（或不理解），应返回500响应。

      如果控制连接未受TLS保护，应返回533响应。

      如果服务器不希望此时清除控制连接，应返回534响应。

      如果接受CCC命令，服务器应返回200响应，并执行以下操作：

         o  发送200响应。

以下是该英文内容的中文翻译：

```
         o  关闭套接字上的TLS会话，但保持连接打开。

         o  以明文方式继续控制连接，预期客户端的下一条命令也是明文。

         o  不再接受任何PBSZ或PROT命令。所有后续的数据传输必须使用当前的PROT设置进行保护。

6. 对FEAT命令的响应

   FEAT命令（在[RFC-2389]中引入）允许支持额外功能的服务器通过响应FEAT命令向客户端宣传这些功能。如果服务器支持FEAT命令，则必须在回复中宣传支持的AUTH、PBSZ和PROT命令，如[RFC-2389]第3.2节所述。此外，AUTH命令的回复应包含标识“TLS”作为AUTH可能参数之一的内容。不需要单独标识“TLS-C”同义词。

   示例回复（风格与[RFC-2389]相同）

      C> FEAT
      S> 211-支持的扩展
      S>  AUTH TLS
      S>  PBSZ
      S>  PROT
      S> 211 END

7. 数据连接行为

   在FTP模型中，数据连接可以有三种使用方式。（注意：这些描述不一定严格按照时间顺序排列，但都描述了必要的步骤。详见后续图示以便理解。）

            i) 经典FTP客户端/服务器数据交换

                 - 客户端获取一个端口；将端口号发送给服务器；服务器连接到客户端。客户端在控制连接上发出发送或接收请求，数据传输在数据连接上开始。

          ii) 防火墙友好型客户端/服务器数据交换（如[RFC-1579]中讨论），使用PASV命令反转数据连接的方向

                 - 客户端请求服务器打开一个端口；服务器获取端口并返回地址和端口号给客户端；客户端连接到该端口。客户端在控制连接上发出发送或接收请求，数据传输在数据连接上开始。

         iii) 客户端发起的服务器/服务器数据交换（代理或PASV连接）

                 - 客户端请求服务器A打开端口；服务器A获取端口并返回给客户端；客户端将端口号发给服务器B。服务器B连接到服务器A。客户端向服务器A发出发送或接收请求，向服务器B发出相应请求，数据传输开始。在此模型中，服务器A是代理或PASV主机，是与服务器B进行数据连接的客户端。

   对于i)和ii)，FTP客户端必须是TLS客户端，FTP服务器必须是TLS服务器。

   换句话说，无论是哪个端发起连接（通过connect()调用）还是哪个端响应连接（通过accept()调用），在[RFC-959]定义的FTP中，客户端始终是TLS客户端（定义在[RFC-2246]中）。

   在场景iii)中存在一个问题：由于FTP服务器必须作为TLS服务器以支持防火墙友好型FTP（[RFC-1579]），因此既不是服务器A也不是服务器B是TLS客户端。这在安全扩展文档[RFC-2228]和本文档中被明确排除。

8. AUTH命令的机制

   AUTH命令接受一个参数，用于定义要协商的安全机制。由于SSL/TLS协议会自动协商其级别，应用层无需区分SSL和TLS。用于协商TLS的机制名称是在{TLS-PARM}中标识的字符字符串。这允许客户端和服务器在控制连接上协商TLS，而不改变数据通道的保护状态。为了同时保护数据通道，还必须使用PBSZ命令，随后跟随PROT命令序列。

   注意：客户端发出带有新期望级别的PROT命令，并得到肯定回复，可能会修改数据连接的保护状态。这种数据通道保护协商可以在会话中的任何时间（甚至在PORT或PASV命令之后）进行，并且可以多次进行。

   另见第16节，“IANA考虑事项”。

9. 数据连接安全性

   数据连接的安全级别由PROT命令决定。

      根据[RFC-2228]的定义，PROT命令允许客户端/服务器协商数据连接的安全级别。一旦客户端发出PROT命令并获得“200”回复，后续的数据连接的安全性必须保持在该级别，直到发出另一个PROT命令并被接受，或者会话结束并发出REIN命令，或通过AUTH命令重新协商会话的安全性。

   数据连接安全协商（PROT命令）

      注意：根据[RFC-2228]，没有办法用不安全的控制连接来保护数据连接。具体来说，PROT命令必须在PBSZ命令之后发出，且PBSZ命令必须在成功的安全数据交换（即TLS协商）之后发出。

      [RFC-2228]中定义的用于协商数据连接安全的命令是PROT命令。该命令有四个可能的参数值：

            'C' - 明文——不提供完整性或隐私保护

            'S' - 安全——提供完整性但无隐私

            'E' - 机密——提供隐私但无完整性

            'P' - 私密——提供完整性和隐私

      由于TLS协商涵盖（并超出）“安全/机密/私密”的区分，实际只使用“私密（TLS）”和“明文（不使用TLS）”。

      对于TLS，数据连接可以有两种安全级别：

            1) 明文（请求“PROT C”）

            2) 私密（请求“PROT P”）

      使用“明文”保护级别时，数据连接不使用TLS。因此，连接未经过身份验证，也没有机密性或完整性。这可能适用于服务器传送文件列表、预加密数据或非敏感数据（例如匿名FTP服务器）。

      如果数据连接的安全级别是“私密”，则在传输任何数据之前，必须在数据连接上进行TLS协商，确保客户端和服务器都满意。客户端和服务器的TLS层将负责协商具体使用的TLS密码套件（从而决定连接的最终安全性）。

      此外，按照[RFC-2228]的规定，必须在发出任何PROT命令之前，先发出PBSZ（保护缓冲区大小）命令。该文档还定义了用于保护数据缓冲区的数据通道封装机制。对于FTP-TLS，作为一种流式保护机制，似乎不需要此机制。因此，仍必须发出PBSZ命令，但参数必须为“0”，表示不进行缓冲，也不对数据连接进行封装。

      注意：PBSZ 0不在[RFC-2228]第8.1节的语法中，但该节指出：

         PBSZ <sp> <decimal-integer> <CRLF> <decimal-integer> ::= 任何从1到(2^32)-1的十进制整数

      但应注意，使用“0”表示流式协议是合理的，并且不会引起歧义。

初始数据连接安全状态

      初始状态下，数据连接必须为“明文”（即遵循[RFC-2228]的行为）。

10. 协商行为的讨论

   由于[RFC-2228]允许动态协商、启用和禁用安全特性，这可能使实现变得相当复杂。然而，在具体实现中，行为应相当直观。要么服务器会强制执行服务器主机的策略，要么会提供客户端请求的安全能力。要么客户端会遵守服务器策略，要么会努力提供用户所需的能力。

10.1. 服务器对控制连接的看法

   服务器可能在某处有一份策略声明，内容可能包括：

      - 在TLS协商完成之前拒绝任何命令（如果在登录前需要执行SITE等命令，可能会出现问题）。

      - 在TLS协商之前拒绝某些命令（如USER、PASS或ACCT）。

      - 拒绝某些用户的不安全USER命令（例如非ftp/匿名用户）。

      - 拒绝某些用户的安全USER命令（例如ftp/匿名用户）。

      - 定义允许的TLS级别。

      - 定义允许使用的密码套件（可能按主机/域名等划分）。

      - 允许TLS认证作为本地认证的替代。

   可能TLS协商未能令人满意，导致以下几种状态：

         TLS协商完全失败

            在这种情况下，控制连接仍应处于未保护状态，服务器应发出未保护的“421”回复以结束会话。

         TLS协商成功完成，但服务器认为会话参数不可接受（例如，客户端证书中的名称不被允许使用服务器）

            在这种情况下，控制连接应保持在保护状态，服务器可以继续拒绝服务命令，或发出受保护的“421”回复并关闭连接。

         TLS握手期间TLS协商失败

            在这种情况下，控制连接处于未知状态，服务器应直接断开控制连接。

   服务器端负责实现必要的策略，确保客户端不能通过拒绝服务违反所选的安全策略。

10.2. 服务器对数据连接的看法

   服务器可以采取以下四种基本策略：

      1 - 完全不允许加密（此时PROT命令应只允许‘C’，如果允许的话）

      2 - 允许客户端选择是否保护

      3 - 强制数据保护（此时必须在首次数据传输前发出PROT命令）

      4 - 对每个数据连接决定采用上述三种策略之一

   服务器应仅在实际发起数据传输的命令（而非PORT或PASV）上检查数据保护级别的状态。以下命令（定义在[RFC-959]中）会打开数据连接，因此可能在任何1xx消息之前因PROT设置不正确而被拒绝：

         STOR
         RETR
         NLST
         LIST
         STOU
         APPE

   表示PROT设置不正确的回复是：“521 数据连接无法使用此PROT设置打开”。

   如果保护级别要求TLS，则在建立数据连接后应进行协商。因此，“150”回复仅表示在当前PROT级别下可以使用该命令。如果服务器不接受TLS协商，它会立即关闭数据端口，并在“150”命令后发出“522”回复，表示TLS协商失败或不可接受。（注意：这意味着应用可以将一组标准密码套件传递给TLS层进行协商，并在每次实例中检查协商结果的适用性。）

   安全注意事项部分讨论了验证用于数据连接的证书与用于控制连接的证书是否一致的问题。这是一个重要的安全步骤。
```

以下是该英文内容的中文翻译：

合理地，服务器应坚持使用TLS缓存会话的数据连接。这可能是之前数据连接的缓存，或是已清除控制连接的缓存。如果拒绝进行数据传输的原因是此问题，那么“522”回复应指明这一点。

注意：这对客户端设计具有重要影响，但也允许服务器在TLS协商过程中最小化使用的周期，通过拒绝与先前已认证客户端的完整协商。

还应注意，TLS对服务器的认证将是对服务器主机本身的认证，而不是对服务器主机上的某个用户的认证。

---

RFC 4217：使用TLS保护FTP（2005年10月）

10.3. 客户端对控制连接的看法

在大多数情况下，客户端很可能会使用TLS，因为服务器会拒绝不安全的交互。为此，客户端应具有足够的灵活性，在适当的时机管理会话的安全性，同时允许用户/服务器策略决定在会话的哪个阶段进行安全协商。

如果是客户端坚持对会话进行安全保护，则客户端需要确保所有协商都已顺利完成，并且在服务器不支持或不愿使用所需安全级别时，能够合理地通知用户。

客户端应设计成能够灵活控制AUTH、PBSZ和PROT命令的时机，且由服务器决定。服务器在这些命令之前拒绝某些命令是合理的。同样，服务器在进行AUTH之前可能需要执行SITE或引号命令。客户端必须允许用户覆盖这些命令的时机，以适应特定的服务器。

例如，客户端不应坚持在会话开始时立即发送AUTH，也不应坚持在AUTH后立即发出PBSZ/PROT对。这可能是默认行为，但必须允许用户覆盖。

TLS协商可能未能令人满意地完成，在这种情况下，客户端可能处于以下状态之一：

- TLS协商完全失败

  在这种情况下，控制连接应仍处于未保护状态，客户端应发出未保护的QUIT命令以结束会话。

- TLS协商成功完成，但客户端认为会话参数不可接受（例如，证书中的颁发者名称不符合预期）

  在这种情况下，控制连接应仍处于保护状态，因此客户端应发出受保护的QUIT命令以结束会话。

- TLS握手期间TLS协商失败

  在这种情况下，控制连接处于未知状态，客户端应直接断开控制连接。

---

10.4. 客户端对数据连接的看法

客户端安全策略

客户端通常没有“策略”这一概念，而是依赖用户定义操作，并在一定程度上对服务器策略做出反应。因此，客户端需要有命令，允许用户动态切换数据连接的保护级别；不过，可能存在一种“策略”，即先对所有LIST和NLST命令尝试在明文连接上执行（如果失败，则自动切换到私有连接）。在这种情况下，应提供用户命令，确保某些数据传输不会在不安全的数据连接上尝试。

客户端还应理解，PROT设置的级别仅在请求特定数据传输后才会被检查。因此，服务器拒绝接受某个数据传输，不应被客户端理解为完全拒绝该数据保护级别，因为在该保护级别下，其他数据传输可能仍然被接受，且在会话的后续阶段，同一传输也可能在相同保护级别下被接受。

还应注意，客户端的TLS认证应是对客户端主机上的用户的认证，而非对客户端主机本身的认证。

---

11. 谁负责协商什么内容、在哪个环节以及如何进行

11.1. 我们是否需要保护？

客户端发出“AUTH TLS”命令，服务器接受或拒绝。如果服务器需要进行AUTH，则在获得成功保护的会话之前，它会拒绝接受某些命令。

11.2. 控制连接使用何种保护级别？

完全由TLS密码套件协商决定。

11.3. 一般是否对数据连接进行保护？

由客户端发出PROT命令，服务器接受或拒绝。

11.4. 某个特定数据传输是否需要保护？

如果客户端需要保护连接，通常会在发出数据传输命令（如STOR、RETR、NLST等）之前发出PROT命令。如果服务器需要保护连接，则会对这些命令回复“522”，表示当前数据连接的保护级别不足以支持该次传输。

11.5. 某个特定数据传输需要什么级别的保护？

完全由TLS密码套件协商决定。

因此，为了灵活性，理想情况下，FTP应用应能与其所在的TLS层交互，以定义和发现已协商或将要协商的TLS密码套件，并据此做出决策。

---

12. 时间流程图

这些时间流程图旨在帮助详细说明TLS握手和会话保护如何融入现有的FTP协议逻辑。当然，FTP协议本身在命令和响应的时序方面在[RFC-959]中描述得不够详细，因此部分内容基于对现有广泛使用的客户端和服务器实现的经验观察。

12.1. 建立受保护的会话

（流程图略，内容为客户端和服务器的交互步骤）

注意1：PBSZ/PROT对和USER/PASS对的顺序（相互之间）并不重要（即，USER/PASS可以在PBSZ/PROT之前，也可以在之后，或者服务器可以拒绝在USER/PASS完成之前接受PBSZ/PROT对）。

注意2：PASS命令可能根本不需要（如果USER参数和提供的客户端身份已足够认证）。服务器会用“232”回复USER命令，而不是“331”请求PASS（详见下文）。

注意3：AUTH命令可能不是在收到220欢迎信息后的第一个命令。

（流程图略）

12.2. 在没有密码请求的情况下建立受保护的会话（TLS认证已足够）

（流程图略）

12.3. 建立受保护的会话后，使用CCC命令清除保护状态

（流程图略）

- 其余控制会话继续以明文进行，但数据传输受保护（由于PROT P）。

注意：此方案存在严重的安全问题（详见安全注意事项部分），但在防火墙/NAT场景中可能有用。

（流程图略）

12.4. 无保护的标准数据传输

（流程图略）

12.5. 无保护的防火墙友好型数据传输

（流程图略）

注意：实现者应注意，connect()/accept()函数在收到STOR命令的回复之前就已执行。这与在非防火墙友好型PORT命令之前使用的情况不同，后者是在处理完STOR的回复后才执行accept()/connect()。

（流程图略）

12.6. 受保护的标准数据传输

（流程图略）

12.7. 受保护的防火墙友好型数据传输

（流程图略）

---

13. 关于REIN命令的讨论

REIN命令（定义于[RFC-959]）允许用户重置FTP会话的状态。根据[RFC-959]：

“REINITIALIZE（REIN）”

该命令终止一个USER会话，清除所有I/O和账户信息，但允许进行中的传输完成。所有参数重置为默认设置，控制连接保持打开状态。这与用户在控制连接刚建立后所处的状态完全相同。之后可能会接着发出USER命令。

当服务器处理此命令时，TLS会话必须被清除，控制和数据连接恢复到未保护的明文状态。可以使用缓存的TLS会话进行后续连接，但服务器不得强制要求。

如果REIN用于清除TLS会话，则在会话被清除之前，必须在受保护的会话中回复REIN。

---

14. 关于STAT和ABOR命令的讨论

ABOR和STAT命令以及TCP紧急指针的使用

[RFC-959]描述了Telnet命令（IP和DM）和TCP紧急指针的使用，用于指示在数据传输过程中控制通道上的命令传输。FTP结合Telnet中断处理和数据标记命令，以及紧急数据，预先发出ABOR（中止传输）和STAT（状态请求）两个命令。

使用紧急指针的原因在于，在Unix实现中，收到标记为紧急的TCP包会触发SIGURG中断处理程序。这种依赖中断处理程序的做法在不支持select()或多线程的系统上是必要的。TLS不支持紧急数据的概念。

当TLS作为FTP的安全机制实现时，服务器不应依赖SIGURG来处理控制通道上的输入。客户端必须在TLS会话中传输所有数据，包括Telnet命令。

（全文完）

RFC 4217                 使用TLS保护FTP安全性              2005年10月

15. 安全考虑事项

本文档讨论了如何结合使用TLS与[RFC-2228]，以提供保护FTP会话的机制。关于安全性原理和安全属性的讨论已包含在[RFC-2228]中，此处不再重复。

15.1. 认证令牌的验证

在本节中，假设将使用X.509证书进行TLS认证。如果使用其他身份标识令牌（例如，Kerberos票据——参见[RFC-2712]），则需要考虑机制特定的相关事项。

15.1.1. 服务器证书

- 虽然这是一个实现决策，但建议用于服务器认证的TLS证书应包含类似于HTTP服务器（参见[RFC-2818]）所用的服务器识别信息。

- 强烈建议用于数据连接的服务器认证证书应与控制连接所用的证书相同。如果使用不同的证书，应有其他机制供客户端交叉验证数据和控制连接的服务器身份。

- 如果不使用服务器证书，则许多安全优势将无法实现。例如，在匿名Diffie-Hellman环境中，没有服务器身份验证，因此对中间人攻击的防护几乎不存在。

15.1.2. 客户端证书

- 允许哪些客户端证书以及定义哪些字段代表何种认证信息，完全由服务器实现决定。

- 但强烈建议用于数据连接的客户端认证证书应与控制连接所用的证书相同。如果使用不同的证书，应有其他机制供服务器交叉验证数据和控制连接的客户端身份。

- 如果不使用客户端证书，则许多安全优势将无法实现。例如，恶意客户端仍可能劫持数据连接。

15.2. 关于FTP安全性考虑事项 [RFC-2577]

15.2.1. 反弹攻击

在安全的FTP环境中，反弹攻击应更难实现，因为：

- 用于发起虚假连接的FTP服务器在TLS上下文中始终是“服务器”。因此，只有在TLS上下文中充当“客户端”的服务可能受到影响。这是一种反直觉的TLS实现方式。

- FTP服务器会检测到数据连接的认证凭据与控制连接不同，因此可以根据策略中断数据连接。

- 当认证机制强大时，真正的用户不太可能发起此类攻击；如果认证不易被破坏（如密码猜测、网络追踪等），恶意用户获得FTP服务器访问的可能性也会降低。

15.2.2. 限制访问

本文档提出了一种强有力的机制来解决本节提出的问题。

15.2.3. 密码保护

强认证和数据机密性两方面的解决方案确保在使用TLS保护控制会话时，此问题不再存在。

15.2.4. 隐私

TLS协议通过加密确保数据的机密性。隐私（例如，下载日志、用户资料信息等）不在本文档（以及[RFC-2577]）的范围内。

15.2.5. 用户名保护

当TLS作为主要认证机制时，此问题不存在。

15.2.6. 端口劫持

本规范对本节中的拒绝服务（DoS）元素帮助有限；然而，在数据连接上实施强认证可以防止未授权的连接进行文件检索或提交。当然，这仅在使用强客户端认证的情况下成立。如果不使用客户端证书（如匿名Diffie-Hellman），端口劫持问题仍然存在。

15.2.7. 软件安全问题

本规范中的内容不会影响本节中的讨论。

15.3. 关于CCC命令的问题

使用CCC命令可能引发安全问题。详见[RFC-2228]中“清除命令通道（CCC）”部分。客户端不应假设服务器会允许处理CCC命令。

服务器实现可能会拒绝在未经过某种形式的客户端认证（如TLS客户端认证或FTP USER/PASS）的会话中处理CCC命令。这可以防止匿名客户端反复请求AUTH TLS后再发出CCC，从而占用服务器资源。

16. IANA考虑事项

{FTP-PORT}——分配给FTP控制连接的端口为21。

17. 其他参数

{TLS-PARM}——用于AUTH命令，指示需要TLS。为了请求符合本文档的TLS协议，客户端必须使用“TLS”。

为了保持与旧版本的兼容性，服务器应接受“TLS-C”作为“TLS”的同义词。

注意：[RFC-2228]指出，这些参数不区分大小写。

18. 可扩展性与限制

除了服务器在每个数据连接上拒绝完整TLS协商的能力外，没有其他问题。这将允许服务器在保持吞吐量的同时，仅在必要时使用资源。

19. 适用性

此机制通常适用于保护FTP协议。匿名FTP客户端或服务器可能不需要此类安全性（尽管有些可能希望仅使用认证功能而不考虑机密性）。

20. 致谢

- Netscape Communications Corporation，原始SSL协议的贡献者。

- Eric Young，SSLeay库的开发者。

- 加州大学伯克利分校，最初实现FTP和ftpd，作为这些扩展的基础。

- IETF CAT工作组。

- IETF TLS工作组。

- IETF FTPEXT工作组。

- Jeff Altman，关于ABOR和STAT的讨论。

- 在起草阶段多次协助撰写本文档的各位，包括Martin Carpenter、Eric Murray、Tim Hudson和Volker Wiegand。

21. 参考文献

21.1. 标准性参考文献

[RFC-959] Postel, J. 和 J. Reynolds，“文件传输协议”，STD 9，RFC 959，1985年10月。

[RFC-2119] Bradner, S.，“在RFC中用以指示需求级别的关键词”，BCP 14，RFC 2119，1997年3月。

[RFC-2228] Horowitz, M. 和 S. Lunt，“FTP安全扩展”，RFC 2228，1997年10月。

[RFC-2246] Dierks, T. 和 C. Allen，“TLS协议版本1.0”，RFC 2246，1999年1月。

[RFC-2389] Hethmon, P. 和 R. Elz，“文件传输协议的特性协商机制”，RFC 2389，1998年8月。

21.2. 说明性参考文献

[RFC-1579] Bellovin, S.，“防火墙友好的FTP”，RFC 1579，1994年2月。

[RFC-2222] Myers, J.，“简单认证与安全层（SASL）”，RFC 2222，1997年10月。

[RFC-2577] Allman, M. 和 S. Ostermann，“FTP安全性考虑事项”，RFC 2577，1999年5月。

[RFC-2712] Medvinsky, A. 和 M. Hur，“在传输层安全（TLS）中添加Kerberos密码套件”，RFC 2712，1999年10月。

[RFC-2817] Khare, R. 和 S. Lawrence，“在HTTP/1.1中升级到TLS”，RFC 2817，2000年5月。

[RFC-2818] Rescorla, E.，“通过TLS的HTTP”，RFC 2818，2000年5月。

[RFC-3207] Hoffman, P.，“用于安全SMTP的SMTP服务扩展（SMTP over TLS）”，RFC 3207，2002年2月。

贡献者

- Tim Hudson，RSA Data Security，澳大利亚有限公司

  电话：+61 7 3227 4444

  电子邮箱：tjh@rsasecurity.com.au

- Volker Wiegand，SUSE Linux

  电子邮箱：wiegand@suse.de

- Martin Carpenter，Verisign Ltd

  电子邮箱：mcarpenter@verisign.com

- Eric Murray，Wave Systems Inc.

  电子邮箱：ericm@lne.com

作者地址

Paul Ford-Hutchinson

IBM UK Ltd

邮政信箱31

伯明翰路

沃里克

英国

电话：+44 1926 462005

电子邮箱：rfc4217@ford-hutchinson.com

版权声明

本文件的版权归互联网协会（2005年）所有。

除非在BCP 78中另有规定，否则作者保留所有权利。

本文件及其中包含的信息按“原样”提供，且贡献者、其代表的组织（如有）、互联网协会及互联网工程任务组（IETF）均不对其任何明示或暗示的保证负责，包括但不限于对信息使用不侵权的保证或适销性、特定用途适用性的保证。

知识产权

IETF不对本文件中描述的技术的任何知识产权或其他权利的有效性或范围作出任何立场，也不对任何相关许可的可用性作出声明；也未作出任何努力以识别此类权利。关于RFC文档中权利的程序信息，请参见BCP 78和BCP 79。

任何向IETF秘书处披露的知识产权声明的副本，以及任何关于提供许可或获得使用此类专有权利的保证或许可的尝试结果，可以在IETF的在线知识产权存储库中查阅，网址为http://www.ietf.org/ipr。

IETF欢迎任何相关方就可能涉及实现本标准的技术的版权、专利或专利申请或其他专有权利提出关注。请将相关信息发送至ietf-ipr@ietf.org。

致谢

- 互联网协会目前提供RFC编辑功能的资金支持。