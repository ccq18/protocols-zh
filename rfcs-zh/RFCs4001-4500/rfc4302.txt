# RFC 4302 中文翻译 (stub)
# 原文文件: ../../rfcs/RFCs4001-4500/rfc4302.txt

网络工作组                                            S. Kent
评论请求：4302                              BBN技术公司
废止：2402                                            2005年12月
类别：标准轨道


                        IP认证头部

本备忘录的状态

   本文件为互联网社区制定的互联网标准轨道协议，旨在征求讨论和改进建议。请参阅当前版本的《互联网官方协议标准》（STD 1），了解该协议的标准化状态和最新情况。本备忘录的分发不受限制。

版权声明

   版权所有©互联网协会（2005年）。

摘要

   本文描述了IP认证头（AH）的更新版本，旨在为IPv4和IPv6提供认证服务。本文件废止RFC 2402（1998年11月）。

目录

   1. 引言 ....................................................3
   2. 认证头格式 ............................................4
      2.1. 下一头部 ...........................................5
      2.2. 负载长度 ...........................................5
      2.3. 保留 ...............................................6
      2.4. 安全参数索引（SPI） ................................6
      2.5. 序列号 .............................................8
           2.5.1. 扩展（64位）序列号 ...........................8
      2.6. 完整性检验值（ICV） ................................9
   3. 认证头处理 ............................................9
      3.1. 认证头位置 ........................................9
           3.1.1. 传输模式 ....................................9
           3.1.2. 隧道模式 ..................................11
      3.2. 完整性算法 ........................................11
      3.3. 出站数据包处理 ....................................11
           3.3.1. 安全关联查找 ................................12
           3.3.2. 序列号生成 ..................................12
           3.3.3. 完整性检验值计算 ............................13
                  3.3.3.1. 处理可变字段 ........................13
                  3.3.3.2. 填充和扩展序列号 ....................16
      3.3.4. 分片 ..........................................17
      3.4. 入站数据包处理 ....................................18
           3.4.1. 重组 ........................................18
           3.4.2. 安全关联查找 ................................18
           3.4.3. 序列号验证 ..................................19
           3.4.4. 完整性检验值验证 ............................20
   4. 审计 ..................................................21
   5. 一致性要求 ............................................21
   6. 安全注意事项 ..........................................22
   7. 与RFC 2402的差异 ......................................22
   8. 致谢 ..................................................22
   9. 参考文献 ..............................................22
      9.1. 标准性参考 .......................................22
      9.2. 资料性参考 .......................................23
   附录A：IP选项/扩展头的可变性 ............................25
      A1. IPv4选项 ..........................................25
      A2. IPv6扩展头 ........................................26
   附录B：扩展（64位）序列号 ................................28
      B1. 概述 ..............................................28
      B2. 反重放窗口 ........................................28
          B2.1. 管理和使用反重放窗口 ..........................29
          B2.2. 确定序列号的高位（Seqh） ......................30
          B2.3. 伪代码示例 ....................................31
      B3. 由于大量丢包导致的同步丢失处理 ....................32
          B3.1. 触发重新同步 ..................................33
          B3.2. 重新同步过程 ..................................33























S. Kent                        标准轨道                     [第1页]


RFC 4302                IP认证头部           2005年12月


1. 引言

   本文假设读者已熟悉“互联网协议安全架构”[Ken-Arch]中描述的术语和概念，以下简称“安全架构”文档。特别是，读者应熟悉封装安全载荷（ESP）[Ken-ESP]和IP认证头（AH）提供的安全服务定义，安全关联（SA）的概念，ESP与AH结合使用的方法，以及ESP和AH的不同密钥管理选项。

   本文中出现的关键词：MUST、MUST NOT、REQUIRED、SHALL、SHALL NOT、SHOULD、SHOULD NOT、RECOMMENDED、MAY和OPTIONAL，均应按照RFC 2119 [Bra97]中的定义进行解释。

   IP认证头（AH）用于为IP数据报（以下简称“完整性”）提供无连接的完整性和数据源认证，以及防止重放攻击。当建立安全关联（SA）时，接收方可以选择启用此可选服务。（协议默认要求发送方递增用于反重放的序列号，但该服务只有在接收方检查序列号时才有效。）然而，为了实现扩展序列号（ESN）功能的互操作性，AH确实对SA管理协议提出了要求，必须能够协商此新功能（见下文第2.5.1节）。

   AH尽可能对IP头部的内容进行认证，以及对下一层协议数据的认证。然而，某些IP头字段在传输过程中可能会发生变化，且这些字段的值在数据包到达接收方时可能无法由发送方预测。这些字段的值无法由AH保护。因此，AH对IP头的保护是零散的。（见附录A。）

   AH可以单独使用，也可以与IP封装安全载荷（ESP）[Ken-ESP]结合使用，或以嵌套方式（参见安全架构文档[Ken-Arch]）。安全服务可以在两个通信主机之间、两个安全网关之间，或在安全网关与主机之间提供。ESP也可以提供相同的反重放和完整性服务，还提供机密性（加密）服务。ESP与AH提供的完整性保护的主要区别在于覆盖范围。具体而言，除非IP头字段被ESP封装（例如通过隧道模式），否则ESP不会保护任何IP头字段（如在隧道模式中）。关于在各种网络环境中使用AH和ESP的详细信息，请参阅安全架构文档[Ken-Arch]。

   第7节简要回顾了本文档与RFC 2402 [RFC2402]的差异。

2. 认证头格式

   紧接在AH头部之前的协议头（IPv4、IPv6或IPv6扩展头）必须在其协议（IPv4）或下一头部（IPv6、扩展头）字段中包含值51 [DH98]。图1展示了AH的格式。

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | 下一头部      |  负载长度     |          保留                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 安全参数索引（SPI）                          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    序列号字段                                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   +                完整性检验值-ICV（可变）                        |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                          图1.  AH格式

   下表列出了组成AH（如图1所示）以及在完整性计算中包含的其他字段，说明哪些字段被ICV覆盖，以及传输的内容。

                                                      字段    内容
                                     字节数   必须[1]  完整性覆盖  是否传输
                                     ------   ------  --------  ------
          IP头部                   变长       M     [2]     明文
          下一头部                   1        M      Y     明文
          负载长度                   1        M      Y     明文
          保留                       2        M      Y     明文
          SPI                        4        M      Y     明文
          序列号（低32位）            4        M      Y     明文
          ICV                     变长       M      Y[3]  明文
          IP数据报[4]               变长       M      Y     明文
          序列号（高32位）             4      若使用ESN  Y     不传输
          填充（ICV Padding）        变长    若需要    Y     不传输

   [1] - M = 必须
   [2] - 详见第3.3.3节“完整性检验值计算”，说明哪些IP头字段被覆盖。
   [3] - 在计算ICV前置零（计算后将结果ICV放在此处）
   [4] - 若为隧道模式 -> IP数据报
         若为传输模式 -> 下一头部和数据

   以下子节定义了组成AH格式的字段。所有这些字段都是必需的，即它们在AH格式中始终存在，并且包含在完整性检验值（ICV）计算中（参见第2.6节和第3.3.3节）。

   注意：IPsec中使用的所有加密算法都期望其输入为规范的网络字节序（参见RFC 791[RFC791]的附录），并以规范的网络字节序生成输出。IP数据包也以网络字节序传输。

   AH不包含版本号，因此如果存在向后兼容性的问题，必须通过在两个IPsec对等体之间使用信令机制（如IKE [IKEv2]或带外配置机制）来确保AH的版本兼容。

2.1.  下一头部

   下一头部是一个8位字段，用于标识认证头后面的下一负载类型。该值从互联网分配数字管理局（IANA）定义的IP协议编号集中选择。例如，值4表示IPv4，值41表示IPv6，值6表示TCP。

2.2.  负载长度

   这个8位字段指定AH的长度，以32位字（4字节）为单位，减去“2”。例如，如果完整性算法产生96位的认证值，则此长度字段为“4”（3个32位字的固定字段加上3个32位字的ICV，减去2）。对于IPv6，整个头部的总长度必须是8字节的倍数。（注意，虽然IPv6[DH98]将AH描述为扩展头，但其长度以32位字为单位，而非其他IPv6扩展头使用的64位字。）关于此字段的填充问题，请参见第2.6节“完整性检验值（ICV）”和第3.3.3.2.1节“ICV填充”。

2.3.  保留

   这个16位字段为将来使用预留。必须由发送方设置为“零”，接收方应忽略它。（注意，该值在ICV计算中包含，但在其他情况下由接收方忽略。）

2.4.  安全参数索引（SPI）

   SPI是一个任意的32位值，接收方用它来识别入站数据包绑定的SA。对于单播SA，SPI可以单独用来指定一个SA，也可以与IPsec协议类型结合使用（在本例中为AH）。由于单播SA的SPI值由接收方生成，是否仅凭SPI值即可识别SA，或必须结合IPsec协议类型使用，是由本地决定的。SPI字段是必需的，所有AH实现必须支持上述将入站流量映射到单播SA的机制。

   如果IPsec实现支持多播，则必须支持多播SA，使用以下算法将入站IPsec数据报映射到SA。只支持单播的实现不必实现此多路复用算法。

   在许多安全多播架构中，例如[RFC3740]，中央的组控制器/密钥服务器单方面分配组安全关联的SPI。此SPI分配未与所在组的各个终端系统中的密钥管理（如IKE）子系统协商或协调。因此，组安全关联和单播安全关联可能会同时使用相同的SPI。支持多播的IPsec实现必须在SPI冲突的情况下正确进行入站流量的多路复用。

   每个安全关联数据库（SAD）[Ken-Arch]中的条目必须指明，除了SPI外，是否还使用目标或目标和源IP地址进行SA查找。对于多播SA，不使用协议字段进行查找。对于每个入站的IPsec保护数据包，实现必须按照“最长匹配”原则在SAD中查找匹配的条目。在此背景下，如果两个或多个SAD条目基于SPI值匹配，则同时基于目标或目标和源地址匹配的条目为“最长”匹配。这意味着SAD搜索的逻辑顺序如下：

           1. 在SAD中搜索匹配{SPI，目标地址，源地址}的条目。如果找到匹配，则用该匹配的SAD条目处理入站AH包，否则进入步骤2。

           2. 在SAD中搜索匹配{SPI，目标地址}的条目。如果找到匹配，则用该匹配的SAD条目处理，否则进入步骤3。

           3. 在SAD中搜索仅匹配{SPI}的条目（如果接收方选择为AH和ESP维护单一SPI空间），或匹配{SPI，协议}（否则）。如果找到匹配，则用该匹配的SAD条目处理，否则丢弃该包并记录可审计事件。

在实际应用中，实现可以选择任何方法来加快搜索速度，尽管其对外表现的行为必须在功能上等同于按照上述顺序搜索 SAD。例如，软件实现可以通过 SPI 在哈希表中进行索引。每个哈希桶中的 SAD 条目链表会保持排序，将具有最长 SA 标识符的 SAD 条目放在链表的前面。那些具有最短 SA 标识符的 SAD 条目则排在链表的最后。硬件实现可能能够利用常见的三元内容可寻址存储器（TCAM）特性，内在地实现最长匹配搜索。

是否需要源地址和目标地址匹配以将入站 IPsec 流量映射到 SA，必须通过手动配置 SA 时的副作用或通过协商（如使用 SA 管理协议，例如 IKE 或 GDOI [RFC3547]）来设置。通常，源特定多播（SSM）[HC03] 组使用由 SPI、目标多播地址和源地址组成的三元组 SA 标识符。任意源多播（ASM）组的 SA 只需要 SPI 和目标多播地址作为标识符。

范围为 1 到 255 的 SPI 值由互联网号码分配局（IANA）保留以备将来使用；除非在 RFC 中明确规定，否则 IANA 通常不会分配保留的 SPI 值。值为零（0）被保留用于本地、特定实现的用途，不能在网络上传输（例如，密钥管理实现可能使用零 SPI 表示“没有安全关联存在”，即在 IPsec 请求建立新 SA 但尚未建立时的状态）。

2.5. 序列号

该无符号 32 位字段包含一个计数器值，每发出一包，计数器值增加一，即每个 SA 的包序列号。对于单播 SA 或单发多播 SA，发送方必须为每个传输的包递增此字段。允许多个发送者共享一个 SA，但通常不推荐。AH 不提供在多个发送者之间同步包计数器或在多发者环境中管理接收端包计数器和窗口的机制。因此，对于多发者 SA，AH 的反重放功能不可用（参见第 3.3.2 和第 3.4.3 节）。

该字段是强制性的，即使接收方未选择为特定 SA启用反重放服务，也必须始终存在。对序列号字段的处理由接收方决定，但所有 AH 实现必须能够执行第 3.3.2 节“序列号生成”和第 3.4.3 节“序列号验证”中描述的处理。因此，发送方必须始终传输此字段，但接收方无需对其采取任何行动。

在建立 SA 时，发送方和接收方的计数器都初始化为 0（使用特定 SA 发送的第一包的序列号为 1；关于序列号的生成方式，详见第 3.3.2 节）。如果启用反重放（默认设置），传输的序列号绝不能循环。因此，在第 2^32 个包传输之前，必须通过建立新 SA（即新密钥）来重置发送方和接收方的计数器。

2.5.1. 扩展（64 位）序列号

为了支持高速 IPsec 实现，应提供一种新的序列号选项，作为当前 32 位序列号字段的扩展。扩展序列号（ESN）必须通过 SA 管理协议协商。注意，在 IKEv2 中，这一协商是隐式的；默认情况下，除非明确协商了 32 位序列号，否则使用 ESN（该功能也适用于多播和单播 SA）。

ESN 允许在 SA 上使用 64 位序列号（详见附录 B“扩展（64 位）序列号”）。在每个包的 AH 头中，只传输序列号的低 32 位，以最小化包头开销。高 32 位由发射端和接收端作为序列号计数器的一部分维护，并用于计算完整性验证值（ICV），但不在包中传输。

2.6. 完整性检查值（ICV）

这是一个可变长度字段，包含本包的完整性检查值（ICV）。该字段长度必须是 32 位（IPv4）或 64 位（IPv6）的整数倍。ICV 处理的详细信息在第 3.3.3 节“完整性检查值计算”和第 3.4.4 节“完整性检查值验证”中描述。该字段可以包含显式填充，以确保 AH 头的长度是 32 位（IPv4）或 64 位（IPv6）的整数倍。所有实现必须支持此类填充，并且只插入足够满足 IPv4/IPv6 对齐要求的填充。如何计算所需填充长度的详细信息在第 3.3.3.2 节“填充”中提供。完整性算法规范必须指明 ICV 的长度、比较规则以及验证的处理步骤。

3. 认证头处理

3.1. 认证头位置

AH 可以以两种方式使用：传输模式或隧道模式（详见安全架构文档，了解何时使用各模式）。

3.1.1. 传输模式

在传输模式中，AH 插入在 IP 头之后、下一层协议（如 TCP、UDP、ICMP 等）之前，或在已插入的其他 IPsec 头之前。在 IPv4 环境中，AH 放置在 IP 头（及其任何选项）之后，但在下一层协议之前（注意，“传输”模式不应被误解为仅限于 TCP 和 UDP）。以下示意图展示了典型 IPv4 包中 AH 传输模式的定位（“前后”示意）：

【示意图略】

在 IPv6 环境中，AH 被视为端到端的有效载荷，应出现在跳跳、路由和分片扩展头之后。目的地选项扩展头可以在 AH 头之前、之后或两者皆有，具体取决于所需的语义。示意图如下：

【示意图略】

ESP 和 AH 头可以以多种模式组合。IPsec 架构文档描述了必须支持的安全关联组合。

注意，在传输模式下，对于“堆叠在堆栈中”或“堆叠在线上”实现（定义在安全架构文档中），入站和出站的 IP 片段可能需要额外的 IP 重组/分片操作，以符合规范并实现透明的 IPsec 支持。在使用多个接口的情况下，执行此类操作时需格外小心。

3.1.2. 隧道模式

在隧道模式中，“内层” IP 头携带最终的（IP）源和目的地址，而“外层” IP 头包含 IPsec“对端”的地址，例如安全网关的地址。允许混合使用 IPv4 和 IPv6 的内外 IP 版本。在隧道模式下，AH 保护整个内层 IP 包，包括整个内层 IP 头。AH 在隧道模式中的位置（相对于外层 IP 头）与传输模式相同。以下示意图展示了典型 IPv4 和 IPv6 包中 AH 隧道模式的定位。

【示意图略】

【示意图略】

在隧道模式中，AH 保护整个内层 IP 包，包括内层 IP 头。AH 在隧道模式中的位置与传输模式类似，位于外层 IP 头之后。

【示意图略】

注意，外层 IP 头/扩展头的构建和内层 IP 头/扩展头的修改详见安全架构文档。

3.2. 完整性算法

用于 ICV 计算的完整性算法由 SA 指定。对于点对点通信，常用的完整性算法包括基于对称加密算法（如 AES [AES]）的密钥消息认证码（MAC）或基于单向哈希函数（如 MD5、SHA-1、SHA-256 等）。对于多播通信，已开发出多种加密策略以提供完整性，相关研究仍在进行中。

3.3. 出站包处理

在传输模式中，发送方在 IP 头之后、下一层协议头之前插入 AH 头。在隧道模式中，外层和内层 IP 头/扩展头可以以多种方式相关联。封装过程中外层 IP 头/扩展头的构建详见安全架构文档。

3.3.1. 安全关联查找

AH 仅在 IPsec 实现确定包关联到需要 AH 处理的 SA 后才应用。确定出站流量是否需要 IPsec 处理的过程详见安全架构文档。

3.3.2. 序列号生成

在建立 SA 时，发送方的计数器初始化为 0。之后，发送方为该 SA 增加序列号（或 ESN）计数器的值，并将其低 32 位插入序列号字段。因此，使用给定 SA 发送的第一包的序列号为 1。

如果启用反重放（默认），在插入新值之前，发送方会检查计数器是否已循环。换句话说，除非序列号不会导致循环，否则不能在 SA 上发送包。试图传输会导致序列号溢出的包是可审计事件。此事件的审计日志应包括 SPI 值、当前日期/时间、源地址、目的地址，以及（IPv6 时）明文流 ID。

除非接收方另行通知（见第 3.4.3 节）或通过手动密钥管理配置 SA，否则发送方默认启用反重放功能。因此，典型的 AH 实现行为是在序列号（或 ESN）循环时，或预期其循环时，重新建立新 SA。

如果如上所述禁用防重放机制，发送方无需监控或重置计数器，例如在手动密钥管理的情况下（参见第5节）。然而，发送方仍然会递增计数器，当计数器达到最大值时，会回绕到零。（除非在发送方和接收方之间协商了标准范围之外的反重放机制，否则建议在多发方、多播安全关联中采用此行为。）

如果选择使用ESN（见附录B），则在序列号字段中只传输低32位的序列号，尽管发送方和接收方都维护完整的64位ESN计数器。然而，高32位会包含在ICV（完整性检查值）计算中。

注意：如果接收方选择不启用某个安全关联的反重放机制，则应避免在安全关联管理协议中协商ESN。使用ESN会使接收方需要管理反重放窗口（以确定ESN高位的正确值，这些高位用于ICV计算），这通常与禁用某个安全关联的反重放机制的理念相悖。

3.3.3. 完整性检查值（ICV）计算

AH的ICV是在以下内容上计算的：

- 在AH头之前的IP或扩展头字段，这些字段在传输过程中不可变或到达端点时值可预测（用于AH安全关联）
- AH头（包括“下一头部”、“载荷长度”、“保留”、“SPI”、“序列号（低32位）”以及ICV（在此计算中设为零）和显式填充字节（如果有））
- AH之后的所有内容在传输中被假定为不可变
- 如果使用ESN，还包括ESN的高位部分，以及完整性算法所需的任何隐式填充

3.3.3.1. 可变字段的处理

如果某个字段在传输过程中可能被修改，为了ICV计算，将该字段的值设为零。如果某个字段是可变的，但在（IPsec）接收端是可预测的，则在ICV计算中使用该预测值。ICV字段在准备计算时也设为零。注意，通过用零替换每个字段的值，而不是省略字段，可以保持ICV计算的对齐。零填充方式还确保这些字段的长度在传输过程中不会变化，尽管它们的内容未被ICV明确覆盖。

当创建新的扩展头或IPv4选项时，应在其专用的RFC中定义，并在“安全考虑”部分说明在计算AH的ICV时应如何处理。如果IP（IPv4或IPv6）实现遇到未识别的扩展头，将丢弃该包并发送ICMP消息，IPsec不会看到该包。如果IPsec实现遇到未识别的IPv4选项，应将整个选项置零，使用该选项的第二个字节作为长度。IPv6的选项（在目的地扩展头或跳跳头中）包含一个标志，指示该选项是否可变，从而决定对这些选项的处理方式。

3.3.3.1.1. IPv4的ICV计算

3.3.3.1.1.1. 基本头字段

IPv4基本头字段分类如下：

不可变
- 版本
- 头长度
- 总长度
- 标识
- 协议（应为AH的值）
- 源地址
- 目的地址（不包括松散或严格源路由）

可变但可预测
- 目的地址（含松散或严格源路由）

可变（在ICV计算前置零）
- 差异服务码点（DSCP）（6位，参见RFC 2474 [NBBB98]）
- 显式拥塞通知（ECN）（2位，参见RFC 3168 [RFB01]）
- 标志
- 分片偏移
- 生存时间（TTL）
- 头部校验和

说明：
- DSCP：路由器可能会根据需要重写DS字段以提供所需的本地或端到端服务，因此接收时的值无法由发送方预测。
- ECN：在路由器遇到拥塞时会变化，接收时的值无法由发送方预测。
- 标志：此字段被排除，因为中间路由器可能会设置DF位，即使源未设置。
- 分片偏移：由于AH仅应用于未分片的IP包，偏移字段必须始终为零，因此被排除（尽管它是可预测的）。
- TTL：在路由器的正常处理过程中会变化，接收端的值无法由发送方预测。
- 头部校验和：如果其他字段发生变化，此值也会变化，接收时无法由发送方预测。

3.3.3.1.1.2. 选项

IPv4没有机制标记选项为在传输中可变。因此，IPv4的所有选项在附录A中被明确列出，并分类为不可变、可变但可预测或可变。IPv4的整个选项作为一个整体处理；即使大多数选项中的类型和长度字段在传输中是不可变的，如果某个选项被分类为可变，则在ICV计算时整个选项都要置零。

3.3.3.1.2. IPv6的ICV计算

3.3.3.1.2.1. 基本头字段

IPv6基本头字段分类如下：

不可变
- 版本
- 载荷长度
- 下一头部
- 源地址
- 目的地址（不包括路由扩展头）

可变但可预测
- 目的地址（含路由扩展头）

可变（在ICV计算前置零）
- DSCP（6位，参见RFC 2474 [NBBB98]）
- ECN（2位，参见RFC 3168 [RFB01]）
- 流标签（*）
- 跳数限制

（*）在AHv1中描述的流标签是可变的，在RFC 2460 [DH98]中可能也是可变的。为了与现有的AH实现保持兼容，AHv2中不包括流标签在ICV中。

3.3.3.1.2.2. 含选项的扩展头

IPv6中跳跳头和目的地扩展头中的选项包含一个标志，指示该选项在传输过程中是否可能发生（不可预测）变化。对于内容可能在途中变化的任何选项，计算或验证ICV时，整个“选项数据”字段必须视为零值字节。选项类型和选项数据长度（Opt Data Len）包含在ICV计算中。所有标志指示不可变的选项也包含在ICV中。详细信息请参阅IPv6规范 [DH98]。

3.3.3.1.2.3. 不含选项的扩展头

不含选项的IPv6扩展头在附录A中明确列出，并分类为不可变、可变但可预测或可变。

3.3.3.2. 填充和扩展序列号

3.3.3.2.1. ICV填充

如第2.6节所述，为确保AH头长度为32位（IPv4）或64位（IPv6）的整数倍，ICV字段可能包含显式填充。如果需要填充，其长度由两个因素决定：

- ICV的长度
- IP协议版本（v4或v6）

例如，若所用算法输出为96位，则IPv4和IPv6都不需要填充。但如果生成的ICV长度不同（使用不同算法），则可能需要填充，具体取决于长度和协议版本。填充内容由发送方任意选择（可以是随机的，也可以不随机，只要满足安全性要求）。这些填充字节包含在ICV计算中，计入载荷长度，并在ICV字段末尾传输，以便接收方进行ICV计算。不得超出满足IPv4/IPv6对齐要求的最小填充量。

3.3.3.2.2. 隐式包填充与ESN

如果为安全关联选择了ESN选项，则必须在ICV计算中包含ESN的高32位。为ICV计算，相关位在载荷结束后（隐式）附加，在任何隐式包填充之前。

某些完整性算法要求ICV计算的字节串必须是算法指定的块大小的倍数。如果IP包长度（包括AH和启用的ESN高位）不符合算法的块大小要求，则必须在ICV计算前在包尾隐式添加填充，填充字节值必须为零。块大小由算法规范定义。此填充不随包一同传输。应查阅定义完整性算法的文档，确认是否需要上述隐式填充。如果未明确说明，默认假设需要隐式填充以匹配算法的块大小。若算法未定义填充内容，则填充字节必须为零。

3.3.4. 分片

如果需要，IP分片在IPsec实现中在AH处理之后进行。因此，传输模式下的AH仅应用于完整的IP数据报（不应用于IP分片）。已应用AH的IPv4包在途中可能会被路由器分片，接收端在AH处理前必须重新组装这些分片（IPv6不适用此限制，因为IPv6没有路由器发起的分片）。在隧道模式下，AH应用于一个IP包，其载荷可能是已分片的IP包。例如，安全网关或“堆栈内”或“线缆内”IPsec实现（详见安全架构文档）可能会对这些分片应用隧道模式的AH。

注意：对于传输模式——如第3.1.1节末所述，堆栈内和线缆内实现可能需要先重新组装由本地IP层分片的包，然后应用IPsec，最后再进行分片。

注意：对于IPv6——堆栈内和线缆内实现需要检查所有扩展头，确认是否存在分片头，从而决定是否在IPsec处理前重新组装包。

无论由IPsec实现还是由路径中的路由器进行的分片，都会显著降低性能。此外，要求AH接收端接受分片进行重组会带来拒绝服务的安全风险。因此，AH实现可以选择不支持分片，并在传输的包中设置“不要分片”标志（DF位），以便进行路径MTU（PMTU）发现。无论如何，AH实现必须支持生成ICMP PMTU消息（或等效的内部信令，用于本机实现），以减少分片的可能性。关于MTU管理支持的详细内容，请参阅安全架构文档。

3.4. 入站包处理

如果存在多个IPsec头或扩展头，处理每个头时应忽略（不置零、不使用）在其之后应用的任何IPsec头。

3.4.1. 重新组装

如有需要，重组在AH处理之前进行。如果接收的包表现出为IP分片（即偏移字段非零或设置了“更多分片”标志），接收端必须丢弃该包；此事件应记录在审计日志中。审计日志应包括SPI值、日期/时间、源地址、目的地址，以及（在IPv6中）流ID。

注意：关于数据包的重组，目前的IPv4规范并不要求将偏移字段（OFFSET）清零或将“更多片段”标志（MORE FRAGMENTS）清除。为了使重组后的数据包能够被IPsec正确处理（而不是被误判为碎片而丢弃），IP协议的实现必须在重组数据包后执行这两个操作。

3.4.2. 安全关联查找

当接收到包含IP认证头（IP Authentication Header）的数据包时，接收方通过在安全关联数据库（SAD）中查找，确定适用的（单向）安全关联（SA）。对于单播安全关联，此查找依据SPI或SPI加协议字段（如第2.4节所述）进行。如果实现支持多播流量，还会在查找中使用目标地址（除了SPI之外），并且也可能使用发件人地址（如第2.4节所述）。（此过程在安全架构文档中有更详细的描述。）安全关联的SAD条目还指示是否检查序列号字段，以及是否使用32位或64位的序列号。SAD条目还规定了用于计算完整性验证值（ICV）的算法，并指明验证ICV所需的密钥。

如果没有找到有效的安全关联，接收方必须丢弃该数据包；这是一项可审计的事件。对此事件的审计日志应包括SPI值、日期/时间、源地址、目标地址，以及（在IPv6中）流ID。

（注意：如IKE等安全关联管理流量，不需要根据SPI进行处理，即可以通过Next Protocol和端口字段单独进行多路复用。）

3.4.3. 序列号验证

所有AH实现必须支持防重放服务，尽管接收方可以根据每个SA单独启用或禁用此功能。防重放适用于单播和多播安全关联。然而，本标准未规定多发者SA（无论单播还是多播）的防重放机制。在未协商（或手动配置）此类SA的防重放机制的情况下，建议禁用发件人和收件人对该SA的序列号检查（通过协商或手动配置），如下所述。

如果接收方未启用某个SA的防重放功能，则不会对序列号进行任何入站检查。但从发件人的角度出发，默认假设接收方已启用防重放。为了避免发件人在建立SA时进行不必要的序列号监控和SA设置（参见第3.3.2节“序列号生成”），如果采用IKE等SA建立协议，接收方应在建立过程中通知发件方其是否提供防重放保护。

如果接收方启用了该SA的防重放服务，则在SA建立时，接收包的计数器必须初始化为零。每次接收数据包时，接收方必须验证该包的序列号是否未在此SA的生命周期内重复。通常，这应是匹配到SA后对包的第一个AH检查，以加快对重复包的拒绝。

重复包通过滑动接收窗口机制进行拒绝。窗口的实现方式由本地决定，但以下描述了实现必须具备的功能。

“窗口的右边界”代表该SA已验证的最高序列号值。低于“左边界”的序列号的包将被拒绝。落在窗口范围内的包会与窗口内已接收包的列表进行比对。

如果为SA选择了扩展序列号（ESN）选项，则只会显式传输序列号的低32位，但接收方在检查收到的序列号是否在接收窗口内时，会使用完整的序列号（由本地计数器的高32位和低32位组成）。在构造完整序列号时，如果包中携带的低32位比接收方序列号计数器的低32位还要小，接收方会假设高32位已递增，进入新的序列号子空间。（此算法允许单个SA的接收出现最大为2^32-1个包的间隙。如果出现更大的间隙，可以采用附录B中描述的启发式方法进行重新同步。）

如果收到的包在窗口内且不是重复包，或者包在窗口右侧，则接收方继续进行ICV验证。如果ICV验证失败，必须丢弃该IP数据报，视为无效。这也是一项可审计事件。审计日志应包括SPI值、日期/时间、源地址、目标地址、序列号，以及（在IPv6中）流ID。只有在ICV验证成功后，接收窗口才会更新。

最小支持的窗口大小为32个包，但建议采用64个包作为默认值。接收方也可以选择更大的窗口（大于最小值）。（接收方不会通知发件人窗口大小。）在高速环境中，应增加接收窗口大小，无论安全保证如何。本标准未规定超高速设备（如多吉比特/秒级）所需的最小或推荐窗口大小。

3.4.4. 完整性验证值（ICV）验证

接收方使用指定的完整性算法，对数据包的相关字段计算ICV，并验证其是否与数据包中的ICV字段一致。具体计算步骤如下。

如果计算得到的ICV与接收的ICV匹配，则数据报有效，予以接受；否则，必须丢弃该IP数据报，视为无效。这也是一项可审计事件。审计日志应包括SPI值、接收的日期/时间、源地址、目标地址、序列号，以及（在IPv6中）流ID。

实现说明：

实现可以采用任何步骤，只要结果与以下描述的步骤相同。首先保存原始ICV值，并用零替换（但不包括ICV字段的填充部分）。将传输过程中可能被修改的其他字段也全部清零。（关于在进行ICV计算前应清零哪些字段，详见第3.3.3.1节“处理可变字段”。）

如果为该SA选择了ESN选项，则在包尾添加高32位的ESN。检查包的整体长度（如前所述），如果根据完整性算法的要求需要隐式填充，则在包尾（在ESN之后）补充零字节。然后进行ICV计算，并用算法定义的比较规则，将结果与之前保存的值进行比对。（例如，若使用数字签名和单向哈希作为ICV，匹配过程会更复杂。）

4. 审计

并非所有实现AH的系统都支持审计功能。然而，如果将AH集成到支持审计的系统中，则AH的实现必须支持审计，并允许系统管理员启用或禁用AH的审计功能。大部分情况下，审计的粒度由本地决定。本规范中定义了若干可审计事件，以及每个事件应包含的最小信息集。每个事件还可以在审计日志中加入额外信息，且未在本规范中明确列出的其他事件也可能引发审计记录。由于可能通过此类事件引发拒绝服务攻击，接收方无需在检测到可审计事件后向发件人发送任何消息。

5. 合规性要求

声称符合本规范的实现，必须完整实现用于单播流量的AH语法和处理流程，并遵守[Ken-Arch]中的安全架构要求。此外，如果实现声称支持多播流量，则必须符合支持多播的额外要求。如果用于计算ICV的密钥是手动分发的，正确提供防重放服务还要求发件方正确维护计数器状态，直到密钥更换为止；如果计数器溢出临近，可能没有自动恢复机制。因此，符合规范的实现不应在手动密钥的SA中提供此服务。

用于AH的强制实现算法在单独的RFC [Eas04]中描述，以便算法要求可以独立于协议进行更新。除了规范中规定的算法外，还可以支持其他算法。

6. 安全注意事项

安全性是该协议设计的核心，这些安全考虑贯穿整个规范。关于使用IPsec协议的其他安全相关方面，详见安全架构文档。

7. 与RFC 2402的差异

本文件与RFC 2402 [RFC2402]的主要差异包括：

- SPI：修改为统一的算法，用于单播和多播SA的SAD查找，涵盖更广泛的多播技术。对于单播，SPI可以单独用来选择SA，也可以与协议字段结合（由接收方选择）。对于多播SA，SPI与目标地址（以及可选的源地址）结合，用于选择SA。
- 扩展序列号：新增64位序列号选项，适用于高速通信。明确了多播SA和多发者SA的处理要求。
- 将强制算法的引用移至单独的文档 [Eas04]。

8. 致谢

作者感谢Ran Atkinson的贡献，他在早期IPsec活动中发挥了关键作用，并撰写了首批IPsec标准：RFC 1825-1827。特别感谢Karen Seo在编辑本规范及其前一版本时提供的帮助。还感谢IPsec和MSEC工作组的成员们，他们为本协议规范的制定做出了贡献。

9. 参考文献

9.1. 必须引用的参考文献

[Bra97] Bradner, S.，“在RFC中用以指示需求级别的关键词”，BCP 14，RFC 2119，1997年3月。

[DH98] Deering, S. 和 R. Hinden，“互联网协议第6版（IPv6）规范”，RFC 2460，1998年12月。

[Eas04] 3rd Eastlake, D.，“封装安全载荷（ESP）和认证头（AH）”的密码算法实现要求，RFC 4305，2005年12月。

[Ken-Arch] Kent, S. 和 K. Seo，“互联网协议的安全架构”，RFC 4301，2005年12月。

[RFC791] Postel, J.，“互联网协议”，STD 5，RFC 791，1981年9月。

[RFC1108] Kent, S.，“美国国防部互联网协议安全选项”，RFC 1108，1991年11月。

9.2. 参考性资料

[AES] 高级加密标准（AES），联邦信息处理标准197，国家标准与技术研究院，2001年11月26日。

[HC03] Holbrook, H. 和 B. Cain，“IP的源特定多播”，进行中，2002年11月3日。

[IKEv2] Kaufman, C.（编），“互联网密钥交换协议第2版（IKEv2）”，RFC 4306，2005年12月。

[Ken-ESP] Kent, S.，“IP封装安全载荷（ESP）”，RFC 4303，2005年12月。

[NBBB98]  Nichols, K.，Blake, S.，Baker, F.，和 D. Black，  
“IPv4 和 IPv6 头部中差异服务字段（DS 字段）的定义”，RFC 2474，1998年12月。

[RFB01]  Ramakrishnan, K.，Floyd, S.，和 D. Black，  
“在IP中添加显式拥塞通知（ECN）”，RFC 3168，2001年9月。

[RFC1063]  Mogul, J.，Kent, C.，Partridge, C.，和 K. McCloghrie，  
“IP最大传输单元（MTU）发现选项”，RFC 1063，1988年7月。

[RFC1122]  Braden, R.，  
“互联网主机的需求——通信层”，STD 3，RFC 1122，1989年10月。

[RFC1191]  Mogul, J. 和 S. Deering，  
“路径MTU发现”，RFC 1191，1990年11月。

[RFC1385]  Wang, Z.，  
“EIP：扩展互联网协议”，RFC 1385，1992年11月。

Kent                        标准轨道                    [第23页]

RFC 4302                IP认证头部             2005年12月

[RFC1393]  Malkin, G.，  
“使用IP选项的Traceroute”，RFC 1393，1993年1月。

[RFC1770]  Graff, C.，  
“用于发送者定向多目的地传递的IPv4选项”，RFC 1770，1995年3月。

[RFC2113]  Katz, D.，  
“IP路由器警报选项”，RFC 2113，1997年2月。

[RFC2402]  Kent, S. 和 R. Atkinson，  
“IP认证头部”，RFC 2402，1998年11月。

[RFC3547]  Baugher, M.，Weis, B.，Hardjono, T.，和 H. Harney，  
“解释组域”，RFC 3547，2003年7月。

[RFC3740]  Hardjono, T. 和 B. Weis，  
“多播组安全架构”，RFC 3740，2004年3月。

Kent                        标准轨道                    [第24页]

RFC 4302                IP认证头部             2005年12月

附录A：IP选项/扩展头部的可变性

A1.  IPv4选项

本表显示IPv4选项在“可变性”方面的分类情况。提供两个参考文献时，第二个优先于第一个。本表部分基于RFC 1700《已分配编号》（1994年10月）中的信息。

| 选项 | 复制 | 类别 | 编号 | 名称 | 参考文献 |
|-------|-------|-------|-------|-------------------------|---------|
| 不可变 -- 包含在ICV计算中 |       |       |       |                         | [RFC791] |
| 0     | 0     | 0     | 0     | 选项列表结束             | [RFC791] |
| 0     | 0     | 1     | 1     | 无操作                   | [RFC791] |
| 1     | 0     | 2     | 2     | 安全                     | [RFC1108]（历史性但仍在使用） |
| 1     | 0     | 5     | 5     | 扩展安全                 | [RFC1108]（历史性但仍在使用） |
| 1     | 0     | 6     | 6     | 商业安全                 |         |
| 1     | 0     | 20    | 20    | 路由器警报               | [RFC2113] |
| 1     | 0     | 21    | 21    | 发送者定向多目的地传递   | [RFC1770] |
| 可变 -- 置零 |       |       |       |                         |         |
| 1     | 0     | 3     | 3     | 松散源路由               | [RFC791] |
| 0     | 2     | 4     | 4     | 时间戳                   | [RFC791] |
| 0     | 0     | 7     | 7     | 记录路由                 | [RFC791] |
| 1     | 0     | 9     | 9     | 严格源路由               | [RFC791] |
| 0     | 2     | 18    | 18    | Traceroute（追踪路由）   | [RFC1393] |
| 实验性，已被取代 -- 置零 |       |       |       |                         |         |
| 1     | 0     | 8     | 8     | 流ID                     | [RFC791, RFC1122（主机请求）] |
| 0     | 0     | 11    | 11    | MTU探测                  | [RFC1063, RFC1191（PMTU）] |
| 0     | 0     | 12    | 12    | MTU应答                  | [RFC1063, RFC1191（PMTU）] |
| 1     | 0     | 17    | 17    | 扩展互联网协议           | [RFC1385, DH98（IPv6）] |
| 0     | 0     | 10    | 10    | 实验性测量               |         |
| 1     | 2     | 13    | 13    | 实验性流控制             |         |
| 1     | 0     | 14    | 14    | 实验性访问控制           |         |
| 0     | 0     | 15    | 15    | ???                      |         |
| 1     | 0     | 16    | 16    | IMI流量描述符            |         |
| 1     | 0     | 19    | 19    | 地址扩展                 |         |

注意：路由器警报选项的使用可能与IPsec不兼容。虽然该选项是不可变的，但其使用意味着路径上的每个路由器都将“处理”该包，因此可能会更改包内容。这将在包从一个路由器跳到另一个路由器的每一跳中发生。在包被应用程序处理（如资源预留协议RSVP/互联网组管理协议IGMP）之前，包应先经过AH处理。然而，AH处理要求路径上的每个路由器都必须是由SPI定义的多播安全关联（multicast-SA）的成员。这可能对非严格源路由的包造成问题，并且需要当前尚未支持的多播技术。

注意：沿路径的系统添加或删除安全标签（如基本安全选项BSO、扩展安全选项ESO或商业互联网协议安全选项CIPSO）与这些IP选项被归类为不可变的分类相冲突，也与IPsec的使用不兼容。

注意：应根据需要重复“选项列表结束”选项，以确保IP头部以4字节边界结束，从而避免存在未指明的字节可能被用作隐蔽信道。

A2.  IPv6扩展头部

本表显示IPv6扩展头部在“可变性”方面的分类情况。

| 选项/扩展名 | 参考文献 |
|--------------|----------|
| 可变但可预测——包含在ICV计算中 | [DH98] |
| 跳点到点（Type 0） | [DH98] |
| 	BIT指示选项是否可变（在转发过程中不可预测地变化） | [DH98] |
|  跳点选项 | [DH98] |
|  目的地选项 | [DH98] |
| 不适用 |  |
|  分片 | [DH98] |

IPv6中的跳点到点和目的地扩展头部中的选项包含一个位，用以指示该选项在转发过程中是否可能发生变化（不可预测）。对于内容可能在传输途中变化的任何选项，整个“选项数据”字段在计算或验证ICV时必须视为全零字节。选项类型和选项数据长度包含在ICV计算中。所有指示不可变的选项都包含在ICV计算中。更多信息请参见IPv6规范[DH98]。

|  路由（Type 0） | IPv6路由头“Type 0”将在源到目的地的传输过程中重新排列包内的地址字段。然而，包在到达接收端时的内容，发件人和所有中间跳点都已知。因此，IPv6路由头“Type 0”在完整性校验值（ICV）计算中被视为可变但可预测的。发件人必须在执行ICV计算前，将字段排序成接收端将看到的顺序。 |
|  分片 | 分片发生在出站IPsec处理（第3.3节）之后，重组发生在入站IPsec处理（第3.4节）之前。因此，如果存在分片扩展头，IPsec不会看到它。注意：在接收端，IP实现可能会在重组时保留分片扩展头。如果发生这种情况，在AH收到包之前，必须“移除”或跳过此头，并将前一头的“下一头”字段设置为分片扩展头中的“下一头”字段。 |
|  发送端的情况：IP实现可能会提供带有偏移为0（第一个分片）且“更多分片”标志为0（最后一个分片）的分片扩展头的包。如果发生这种情况，在进行ICV处理之前，AH必须先“移除”或跳过此头，并将前一头的“下一头”字段设置为分片扩展头中的“下一头”字段。 |

（后续内容省略，内容与原文一致）

以下是英文内容的中文翻译：

```
      + 在案例A（图1）中：
        如果 Seql >= Bl（其中 Bl = Tl - W + 1），则 Seqh = Th
        如果 Seql <  Bl（其中 Bl = Tl - W + 1），则 Seqh = Th + 1

      + 在案例B（图2）中：
        如果 Seql >= Bl（其中 Bl = Tl - W + 1），则 Seqh = Th - 1
        如果 Seql <  Bl（其中 Bl = Tl - W + 1），则 Seqh = Th









肯特                        标准轨迹                    [第30页]


RFC 4302                IP 认证头部           2005年12月


B2.3. 伪代码示例

   以下伪代码说明了上述防重放和完整性检查的算法。`Seql`、`Tl`、`Th` 和 `W'` 的值都是32位无符号整数。算术运算采用模2^32。

        如果 (Tl >= W - 1)                            案例A
            如果 (Seql >= Tl - W + 1)
                Seqh = Th
                如果 (Seql <= Tl)
                    如果 (通过重放检查)
                        如果 (通过完整性检查)
                            设置对应 Seql 的位
                            允许该包通过
                        否则拒绝该包
                    否则拒绝该包
                否则
                    如果 (通过完整性检查)
                        Tl = Seql（移位操作）
                        设置对应 Seql 的位
                        允许该包通过
                    否则拒绝该包
            否则
                Seqh = Th + 1
                如果 (通过完整性检查)
                    Tl = Seql（移位操作）
                    Th = Th + 1
                    设置对应 Seql 的位
                    允许该包通过
                否则拒绝该包
        否则                                    案例B
            如果 (Seql >= Tl - W + 1)
                Seqh = Th - 1
                如果 (通过重放检查)
                    如果 (通过完整性检查)
                        设置对应 Seql 的位
                        允许该包通过
                    否则拒绝该包
                否则拒绝该包
            否则
                Seqh = Th
                如果 (Seql <= Tl)
                    如果 (通过重放检查)
                        如果 (通过完整性检查)
                            设置对应 Seql 的位
                            允许该包通过
                        否则拒绝该包
                    否则拒绝该包
                否则
                    如果 (通过完整性检查)
                        Tl = Seql（移位操作）
                        设置对应 Seql 的位
                        允许该包通过
                    否则拒绝该包



肯特                        标准轨迹                    [第31页]


RFC 4302                IP 认证头部           2005年12月


B3. 处理因大量包丢失导致的同步丧失

   如果在单个安全关联（SA）上发生未检测到的连续2^32个或更多包的丢失，传输端和接收端将失去高位的同步，即附录B2.2中的方程将无法得到正确的值。除非检测到并解决此问题，否则此SA上的后续包将无法通过认证检查并被丢弃。任何支持ESN选项的IPsec（ESP或AH）实现都应实现以下过程。

   注意，如果SA上的任何大量流量是TCP，发生这种长时间的流量丢失似乎不太可能，因为源端会未能收到ACK并会在丢失2^32个包之前停止发送。此外，对于任何双向应用，即使是在UDP之上，也可能会触发某种超时，从而检测到这种长时间中断。然而，单向应用（在UDP上运行）可能缺乏反馈机制，无法自动检测到如此大的丢失，因此需要开发一种恢复方法。

   我们选择的解决方案旨在：

     + 最小化对正常流量处理的影响。

     + 避免为潜在的拒绝服务攻击创造机会，例如攻击者通过强制资源转向重新同步过程。

     + 将恢复机制限制在接收端，因为反重放是仅为接收端提供的服务，且传输端通常不知道接收端是否使用序列号支持此可选服务。最好让恢复机制在接收端本地实现。这也有助于向后兼容。









肯特                        标准轨迹                    [第32页]


RFC 4302                IP 认证头部           2005年12月


B3.1. 触发重新同步

   对于每个SA，接收端记录连续认证失败的包数。该计数用于触发重新同步过程，应在后台或使用单独的处理器执行。收到有效包后，计数器重置为零。用以触发重新同步的值是一个本地参数。没有必要为不同的SA支持不同的触发值，尽管实现者可以选择这样做。

B3.2. 重新同步过程

   当达到上述触发点时，将选择一个“异常”包，使用逐渐增大的上半序列号（Seqh）值对其进行重试认证。这些值通过每次重试加一生成。重试次数应有限制，以防这是来自“过去”或伪造的包。限制值是一个本地参数。（由于Seqh值隐含放置在AH（或ESP）负载之后，可以通过在负载到端点之前执行完整性算法，然后通过改变Seqh的值来计算不同的候选ICV，从而优化此过程。）通过此方法成功认证的包会重置连续失败计数，并将T的值设置为接收到的包的值。

   该方案只需在接收端支持，从而实现向后兼容。此外，由于重新同步工作可以在后台或使用额外的处理器进行，不会影响流量处理，也不会被拒绝服务攻击所干扰，从而不会占用资源。

作者地址

   斯蒂芬·肯特
   BBN Technologies
   10 Moulton Street
   剑桥，马萨诸塞州 02138
   美国

   电话：+1 (617) 873-3988
   电子邮箱：kent@bbn.com







肯特                        标准轨迹                    [第33页]


完整版权声明

   版权所有 (C) 互联网协会（2005年）。

   本文档受BCP 78中的权利、许可证和限制的约束，除非另有说明，作者保留所有权利。

   本文档及其中包含的信息是“按原样”提供的，贡献者、其代表的组织或其赞助的组织（如有）、互联网协会和互联网工程任务组均不对其作任何明示或暗示的保证，包括但不限于不侵犯任何权利或对其适销性和特定用途的适用性作出任何保证。

知识产权

   IETF不对本文件中描述的技术的任何知识产权或其他权利的有效性或范围发表任何立场，也不对任何此类权利的许可是否可用作出声明；也不表示其已采取任何独立措施以识别此类权利。关于RFC文档中权利的程序信息，请参见BCP 78和BCP 79。

   有关向IETF秘书处披露的知识产权声明的副本，以及任何关于提供许可或获得一般许可或使用此类专有权利的尝试的结果，可以在IETF的在线知识产权存储库中查阅，网址为：http://www.ietf.org/ipr。

   IETF欢迎任何相关方向其报告可能涉及实现本标准所需技术的版权、专利或专利申请或其他专有权利。请将相关信息发送至IETF的ietf-ipr@ietf.org。

致谢

   RFC编辑工作由互联网协会目前提供资金支持。
```