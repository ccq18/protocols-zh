# RFC 3315 中文翻译 (stub)
# 原文文件: ../../rfcs/RFCs3001-3500/rfc3315.txt

网络工作组                                      R. Droms，编辑
评论请求编号：3315                                              思科
标准轨道类别                                              J. Bound
                                                          惠普公司
                                                          B. Volz
                                                          爱立信
                                                          T. Lemon
                                                          Nominum
                                                          C. Perkins
                                              诺基亚研究中心
                                                          M. Carney
                                                  Sun Microsystems
                                                          2003年7月

         IPv6的动态主机配置协议（DHCPv6）

本备忘录的状态

   本文档为互联网社区制定了一项互联网标准轨道协议，旨在征求讨论和改进建议。请参阅当前版本的《互联网官方协议标准》（STD 1）以了解该协议的标准化状态和现状。本文本的分发不受限制。

版权声明

   版权所有（C）互联网协会（2003年）。保留所有权利。

摘要

   IPv6的动态主机配置协议（DHCP）使DHCP服务器能够向IPv6节点传递配置参数，例如IPv6网络地址。它提供了自动分配可重用网络地址的能力以及更高的配置灵活性。该协议是“IPv6无状态地址自动配置”（RFC 2462）的有状态对应方案，可以单独使用，也可以与后者同时使用，以获取配置参数。

（以下为目录内容略，全文较长，若需全文翻译请告知。）

19.4.5. 接收回复消息…… 58
20. 转发代理行为…… 58
   20.1. 转发客户端消息或转发-转发消息…… 59
       20.1.1. 转发来自客户端的消息…… 59
       20.1.2. 转发来自转发代理的消息…… 59
   20.2. 转发转发-回复消息…… 60
   20.3. 转发-回复消息的构建…… 60
21. DHCP消息的认证…… 61
   21.1. 服务器与转发代理之间消息的安全性…… 61
   21.2. DHCP认证的概要…… 63
   21.3. 重放检测…… 63
   21.4. 延迟认证协议…… 63
       21.4.1. 在延迟认证协议中使用认证选项…… 64
       21.4.2. 消息验证…… 65
       21.4.3. 密钥的使用…… 65
       21.4.4. 客户端对延迟认证协议的考虑…… 66
       21.4.5. 服务器对延迟认证协议的考虑…… 67
   21.5. 重新配置密钥认证协议…… 68
       21.5.1. 在重新配置密钥认证协议中使用认证选项…… 69
       21.5.2. 服务器对重新配置密钥协议的考虑…… 69
       21.5.3. 客户端对重新配置密钥协议的考虑…… 70
22. DHCP选项…… 70
   22.1. DHCP选项的格式…… 71
   22.2. 客户端标识符选项…… 71
   22.3. 服务器标识符选项…… 72
   22.4. 非临时地址的身份关联选项…… 72
   22.5. 临时地址的身份关联选项…… 75
   22.6. IA地址选项…… 76
   22.7. 选项请求选项…… 78
   22.8. 偏好选项…… 79
   22.9. 已过时间选项…… 79
   22.10. 转发消息选项…… 80
   22.11. 认证选项…… 81
   22.12. 服务器单播选项…… 82
   22.13. 状态码选项…… 82
   22.14. 快速提交选项…… 83
   22.15. 用户类别选项…… 84
   22.16. 供应商类别选项…… 85
   22.17. 供应商特定信息选项…… 86
   22.18. 接口ID选项…… 87
   22.19. 重新配置消息选项…… 88
   22.20. 重新配置接受选项…… 89
23. 安全注意事项…… 89
24. IANA考虑事项…… 91
   24.1. 多播地址…… 92
   24.2. DHCP消息类型…… 93
   24.3. DHCP选项…… 94
   24.4. 状态码…… 95
   24.5. DUID（唯一识别符）…… 95
25. 致谢…… 95
26. 参考文献…… 96
   26.1. 标准性参考文献…… 96
   26.2. 资料性参考文献…… 97
A. 消息类型中选项的出现…… 98
B. DHCP选项字段中选项的出现…… 99
主席地址…… 99
作者地址…… 100
完整版权声明…… 101

1. 引言与概述

   本文档描述了IPv6的DHCP（动态主机配置协议），一种客户端/服务器协议，用于设备的集中管理配置。

   DHCP可以为设备提供由DHCP服务器分配的地址以及其他配置信息，这些信息通过选项携带。通过定义新的选项，DHCP还可以扩展以携带本文档未涉及的配置信息。

   DHCP是“有状态地址自动配置协议”，也是“IPv6无状态地址自动配置”[17]中提到的“有状态自动配置协议”。

   DHCPv4[18][19]和DHCPv6的操作模型及相关配置内容差异较大，因此本文件未涵盖两者的集成。如果有足够的兴趣和需求，可以在扩展DHCPv6以携带IPv4地址和配置信息的文档中进行说明。

   本引言的其余部分将总结DHCP，介绍消息交换机制和示例消息流程。第1.2节和1.3节中的消息流程旨在作为DHCP操作的示意，而非所有客户端-服务器交互的详尽列表。第17、18和19节将详细说明客户端和服务器的操作。

1.1. 协议与地址

   客户端和服务器通过UDP[15]交换DHCP消息。客户端使用链路本地地址或通过其他机制确定的地址来发送和接收DHCP消息。

   DHCP服务器通过一个保留的、链路范围内的多播地址接收来自客户端的消息。大多数情况下，DHCP客户端将消息发送到这个保留的多播地址，从而无需配置DHCP服务器的地址。

   为了让DHCP客户端能向不在同一链路上的DHCP服务器发送消息，客户端链路上的DHCP转发代理会转发客户端和服务器之间的消息。转发代理的操作对客户端是透明的，本文后续关于消息交换的讨论将省略转发代理的消息转发细节。

   一旦客户端确定了服务器的地址，它在某些情况下也可以使用单播直接向服务器发送消息。

1.2. 涉及两条消息的客户端-服务器交互

   当DHCP客户端不需要由DHCP服务器分配IPv6地址时，可以通过与DHCP服务器交换一条请求信息（如DNS服务器[20]或NTP服务器[21]列表）来获取配置信息。客户端首先向“All_DHCP_Relay_Agents_and_Servers”多播地址发送信息请求（Information-Request）消息。服务器响应一条包含配置信息的回复（Reply）消息。

   这种消息交换假设客户端只需要配置信息，不需要分配IPv6地址。

   当服务器已为客户端预留IPv6地址和其他配置信息时，客户端和服务器可能只需交换两条消息（而非下一节描述的四条），即可完成交互。在这种情况下，客户端向“All_DHCP_Relay_Agents_and_Servers”发送Solicit消息，请求地址和配置信息的分配。该消息中包含客户端愿意立即接受服务器回复的指示。愿意立即响应的服务器会直接用Reply消息回应。此时，Reply消息中的配置信息和地址立即可供客户端使用。

   服务器为分配给客户端的每个地址都设有首选和有效期限。客户端若希望延长地址的期限，会向服务器发送Renew消息。服务器则回复一条Reply消息，提供新的期限，允许客户端持续使用该地址而不中断。

1.3. 涉及四条消息的客户端-服务器交互

   若要请求分配一个或多个IPv6地址，客户端首先找到一个DHCP服务器，然后向其请求地址和其他配置信息。客户端向“All_DHCP_Relay_Agents_and_Servers”地址发送Solicit消息，以寻找可用的DHCP服务器。任何符合要求的服务器会以Advertise消息响应。客户端从中选择一个服务器，并向其发送Request消息，要求确认分配地址和配置信息。服务器收到请求后，回复一条包含确认地址和配置信息的Reply消息。

如前一节所述，客户端向服务器发送续租（Renew）消息，以延长与其地址相关联的生命周期，从而使客户端能够持续使用这些地址而不中断。

2. 需求

当本文档中出现 MUST、MUST NOT、REQUIRED、SHALL、SHALL NOT、SHOULD、SHOULD NOT、RECOMMENDED、MAY 和 OPTIONAL 这些关键词时，应按照 [1] 中的描述进行解释。

此外，本文档还使用了内部概念变量来描述协议行为，以及外部变量，系统管理员必须允许对其进行更改。具体的变量名称、其值的变化方式以及这些设置如何影响协议行为，旨在演示协议的行为。实现不要求必须完全按照本文所述的形式存在，只要其外部行为与本文描述的一致即可。

3. 背景

IPv6 规范提供了 IPv6 的基础架构和设计。对实现者来说，最有帮助的相关 IPv6 工作包括 IPv6 规范 [3]、IPv6 地址架构 [5]、IPv6 无状态地址自动配置 [17]、IPv6 邻居发现处理 [13] 以及 DNS 的动态更新 [22]。这些规范使 DHCP 能够在 IPv6 的基础上提供强大的有状态自动配置和 DNS 主机名的自动注册。

IPv6 地址架构规范 [5] 定义了 IPv6 实现中可用的地址范围，以及 IPv6 地址空间的各种配置架构指南。IPv6 的两个优势是支持多播（multicast）是必需的，以及节点在初始化时可以创建链路本地地址（link-local addresses）。这些功能的可用性意味着客户端可以使用其链路本地地址和一个众所周知的多播地址，来发现并与其链路上的 DHCP 服务器或中继代理通信。

IPv6 无状态地址自动配置 [17] 规定了节点如何基于路由器广告 [13] 自动配置地址的程序，以及支持互联网地址重新编号的有效寿命的使用。此外，还规定了节点开始无状态或有状态自动配置的协议交互方式。DHCP 是实现有状态自动配置的途径之一。与无状态地址自动配置的兼容性是 DHCP 的设计要求之一。

IPv6 邻居发现 [13] 是 IPv6 中的节点发现协议，取代并增强了 ARP [14] 的功能。为了理解 IPv6 和无状态地址自动配置，强烈建议实现者理解 IPv6 邻居发现。

DNS 的动态更新 [22] 是支持 IPv4 和 IPv6 DNS 记录动态更新的规范。DHCP 可以利用 DNS 的动态更新，将地址和命名空间结合起来，不仅支持自动配置，还支持 IPv6 的自动注册。

4. 术语

本节定义了本文档中使用的与 IPv6 和 DHCP 相关的专用术语。

4.1. IPv6 术语

以下包含与本规范相关的 IPv6 术语，来源于 IPv6 协议 [3]、IPv6 地址架构 [5] 和 IPv6 无状态地址自动配置 [17]。

- 地址（address）：接口的 IP 层标识符，或一组接口的标识符。
- 主机（host）：任何非路由器的节点。
- IP：指互联网协议第六版（IPv6）。在需要避免歧义的上下文中，才会使用 IPv4 和 IPv6。
- 接口（interface）：节点连接到链路的接口。
- 链路（link）：节点在链路层（即 IP 之下的层）上可以通信的通信媒介或设施，例如以太网（简单或桥接）、令牌环、PPP 链路、X.25、帧中继、ATM 网络，以及互联网（或更高层）“隧道”，如 IPv4 或 IPv6 上的隧道。
- 链路层标识符（link-layer identifier）：接口的链路层标识符，例如以太网或令牌环网络接口的 IEEE 802 地址，或 ISDN 链路的 E.164 地址。
- 链路本地地址（link-local address）：具有仅在本链路范围内有效的 IPv6 地址（前缀为 FE80::/10），用于访问相同链路上的邻居节点。每个接口都具有链路本地地址。
- 多播地址（multicast address）：用于标识一组接口（通常属于不同节点）的标识符。发往多播地址的数据包会被传递给所有由该地址标识的接口。
- 邻居（neighbor）：连接在同一链路上的节点。
- 节点（node）：实现 IP 的设备。
- 数据包（packet）：IP 头部加载载荷。
- 前缀（prefix）：地址的前导比特，或一组共享相同前导比特的 IP 地址。
- 前缀长度（prefix length）：前缀中的比特数。
- 路由器（router）：转发非专门为自己地址的 IP 数据包的节点。
- 单播地址（unicast address）：单一接口的标识符，发往单播地址的数据包会被传递到该地址对应的接口。

4.2. DHCP 术语

以下是与 DHCP 相关的专用术语。

- 适合链路（appropriate to the link）：当地址与 DHCP 服务器对网络拓扑、前缀分配和地址分配策略的了解一致时，称该地址“适合链路”。
- 绑定（binding）：一组包含服务器关于 IA（身份关联）中的地址或配置参数信息的服务器数据记录。通过策略返回给客户端的配置信息（例如，返回给同一链路上的所有客户端的信息）不需要绑定。包含关于某个 IA 的信息的绑定由 <DUID, IA-type, IAID> 组成的元组索引（其中 IA-type 表示地址类型，例如临时地址）。包含客户端配置参数的绑定由 <DUID> 索引。
- 配置参数（configuration parameter）：在服务器上设置并通过 DHCP 传递给客户端的配置元素，用于帮助节点配置其网络子系统，实现链路或互联网的通信。
- DHCP：IPv6 的动态主机配置协议。DHCPv4 和 DHCPv6 仅在需要避免歧义的上下文中使用。
- DHCP 客户端（或客户端）：在链路上发起请求以获取配置参数的节点，向一个或多个 DHCP 服务器请求。
- DHCP 域（domain）：由 DHCP 管理、由单一管理实体操作的一组链路。
- DHCP 领域（realm）：用于标识 DHCP 管理域的名称，从中选择 DHCP 认证密钥。
- DHCP 中继代理（relay agent）：作为中介，转发 DHCP 消息的节点，位于客户端所在链路上。
- DHCP 服务器（或服务器）：响应客户端请求的节点，可能在或不在客户端所在链路上。
- DUID（DHCP 唯一标识符）：DHCP 参与者的唯一标识符；每个 DHCP 客户端和服务器都只有一个 DUID。关于 DUID 的构造方式详见第9节。
- 身份关联（IA）：分配给客户端的一组地址，每个 IA 具有一个 IAID。一个客户端可以拥有多个 IA，例如，为每个接口分配一个。每个 IA 只持有一种类型的地址，例如，临时地址的身份关联（IA_TA）持有临时地址（详见“临时地址的身份关联”）。在本文中，“IA” 一词泛指身份关联，不特指地址类型。
- 身份关联标识符（IAID）：由客户端选择的某个 IA 的标识符。每个 IA 都有一个 IAID，确保在该客户端的所有 IA 中唯一。
- 非临时地址的身份关联（IA_NA）：携带非临时地址的身份关联（详见“临时地址的身份关联”）。
- 临时地址的身份关联（IA_TA）：携带临时地址的身份关联（详见 RFC 3041 [12]）。
- 消息（message）：作为 UDP 数据报载荷传输的数据单元，在 DHCP 服务器、中继代理和客户端之间交换。
- 重新配置密钥（Reconfigure key）：由服务器提供给客户端，用于确保重新配置消息的安全性。
- 转发（relaying）：DHCP 中继代理在 DHCP 参与者之间转发消息。
- 事务ID（transaction ID）：用于匹配响应与由客户端或服务器发起的请求的隐藏值。

5. DHCP 常量

本节介绍 DHCP 使用的各种程序和网络常量。

5.1. 多播地址

DHCP 使用以下多播地址：

- All_DHCP_Relay_Agents_and_Servers (FF02::1:2)：链路范围内的多播地址，客户端用以与邻近的（即在链路上的）中继代理和服务器通信。所有服务器和中继代理都是此多播组的成员。
- All_DHCP_Servers (FF05::1:3)：站点范围内的多播地址，中继代理用以与服务器通信，可能是因为中继代理希望向所有服务器发送消息，或不知道服务器的单播地址。为了让中继代理使用此地址，必须拥有一个足够范围的地址以便被服务器访问。站点内的所有服务器都是此多播组的成员。

5.2. UDP端口

客户端在 UDP 端口546上监听 DHCP 消息。服务器和中继代理在 UDP 端口547上监听。

5.3. DHCP 消息类型

DHCP 定义了以下消息类型。详细信息请参见第6和第7节。未列出的消息类型为保留，供未来使用。每种消息类型的数字编码在括号中。

- SOLICIT (1)：客户端发送 Solicitation 消息以寻找服务器。
- ADVERTISE (2)：服务器发送 Advertise 消息，表明其提供 DHCP 服务，作为对客户端的 Solicitation 消息的响应。
- REQUEST (3)：客户端向特定服务器发送请求消息，请求配置参数，包括 IP 地址。
- CONFIRM (4)：客户端向任何可用服务器发送确认消息，以确认其分配的地址是否仍适合连接的链路。
- RENEW (5)：客户端向最初提供地址和配置参数的服务器发送续租（Renew）消息，以延长地址的生命周期并更新其他配置参数。
- REBIND (6)：客户端在未收到续租响应后，向任何可用服务器发送重绑定（Rebind）消息，以延长地址的生命周期和更新配置参数。
- REPLY (7)：服务器响应 Solicitation、Request、Renew、Rebind 消息，发送包含分配地址和配置参数的回复消息。也会对信息请求（Information-request）消息返回配置参数。对确认（Confirm）消息，服务器会确认或否认分配的地址是否适合连接的链路。对释放（Release）或拒绝（Decline）消息，服务器会发送确认收到的回复。
- RELEASE (8)：客户端向分配地址的服务器发送释放（Release）消息，表示不再使用一个或多个已分配的地址。
- DECLINE (9)：客户端向服务器发送拒绝（Decline）消息，表示已检测到某个由服务器分配的地址在链路上已被占用。

以上内容为该文档的主要内容翻译。

重新配置（10）一台服务器向客户端发送重新配置消息，通知客户端服务器具有新的或更新的配置参数，要求客户端发起Renew/Reply或Information-request/Reply事务，以便接收更新的信息。

信息请求（11）一台客户端向服务器发送信息请求消息，请求配置信息，但不分配任何IP地址给客户端。

中继转发（12）一台中继代理向服务器发送中继转发消息，以直接或通过另一台中继代理转发消息。接收到的消息（无论是客户端消息还是来自另一中继代理的中继转发消息）都被封装在中继转发消息的一个选项中。

中继应答（13）一台服务器向中继代理发送中继应答消息，包含一条要传递给客户端的消息。该中继应答消息可能由其他中继代理中继转发以送达目标中继代理。

服务器在中继应答消息中将客户端消息封装为一个选项，中继代理提取后转发给客户端。

5.4 状态码

DHCPv6使用状态码来传达操作的成功或失败，以及提供关于消息失败具体原因的附加信息。具体的状态码定义在第24.4节。

5.5 传输和重传参数

本节列出用于描述客户端和服务器消息传输行为的参数值表。

参数名             默认值        描述
-------------------------------------------
SOL_MAX_DELAY      1秒           第一次Solicit的最大延迟
SOL_TIMEOUT        1秒           初始Solicit超时时间
SOL_MAX_RT        120秒          最大Solicit超时时间
REQ_TIMEOUT        1秒           初始Request超时时间
REQ_MAX_RT        30秒          最大Request超时时间
REQ_MAX_RC        10             最大Request重试次数
CNF_MAX_DELAY      1秒           第一次Confirm的最大延迟
CNF_TIMEOUT        1秒           初始Confirm超时时间
CNF_MAX_RT         4秒           最大Confirm超时时间
CNF_MAX_RD        10秒          最大Confirm持续时间
REN_TIMEOUT       10秒          初始Renew超时时间
REN_MAX_RT      600秒          最大Renew超时时间
REB_TIMEOUT       10秒          初始Rebind超时时间
REB_MAX_RT      600秒          最大Rebind超时时间
INF_MAX_DELAY      1秒           第一次Information-request的最大延迟
INF_TIMEOUT        1秒           初始Information-request超时时间
INF_MAX_RT       120秒          最大Information-request超时时间
REL_TIMEOUT        1秒           初始Release超时时间
REL_MAX_RC         5             最大Release尝试次数
DEC_TIMEOUT        1秒           初始Decline超时时间
DEC_MAX_RC         5             最大Decline尝试次数
REC_TIMEOUT        2秒           初始Reconfigure超时时间
REC_MAX_RC         8             最大Reconfigure尝试次数
HOP_COUNT_LIMIT   32             中继转发消息的最大跳数

5.6 时间值的表示及“无限大”时间值

所有关于生命周期、T1和T2的时间值均为无符号整数。当用作生命周期（如RFC2461 [17]中所述）或T1、T2的值时，值0xffffffff被视为“无限大”。

6. 客户端/服务器消息格式

所有客户端与服务器之间传送的DHCP消息都具有相同的固定格式头部和可变选项区域。

消息头和选项中的所有值都采用网络字节序。

选项在选项字段中按顺序存储，之间没有填充。选项是字节对齐的，但不以2字节或4字节边界对齐。

以下图示说明客户端与服务器之间传送的DHCP消息格式：

       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |    消息类型   |               事务ID                     |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                                                               |
      .                            选项                                .
      .                          （可变）                              .
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

消息类型（msg-type）标识DHCP消息类型，具体类型在第5.3节列出。

事务ID（transaction-id）是此次消息交换的事务标识符。

选项（options）携带在此消息中的选项，详见第22节。

7. 中继代理/服务器消息格式

中继代理与服务器交换消息，以中继不在同一链路上的客户端和服务器之间的消息。

消息头和选项中的所有值都采用网络字节序。

选项在选项字段中按顺序存储，之间没有填充。选项是字节对齐的，但不以2字节或4字节边界对齐。

中继代理消息共有两种，格式相同：

       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |    消息类型   |   跳数（hop-count） |                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |
      |                                                               |
      |                         链路地址（link-address）             |
      |                                                               |
      |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|
      |                               |                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |
      |                                                               |
      |                         对等地址（peer-address）             |
      |                                                               |
      |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|
      |                               |                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |
      .                                                               .
      .            选项（可变长度）                                ....  .
      |                                                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

以下节描述中继代理消息头的使用。

7.1. 中继转发（Relay-forward）消息

下表定义了中继转发消息中各字段的用途。

| 字段名        | 说明                                              |
|--------------|---------------------------------------------------|
| 消息类型（msg-type） | RELAY-FORW                                    |
| 跳数（hop-count）    | 转发此消息的中继代理数量                        |
| 链路地址（link-address） | 由服务器用以识别客户端所在链路的全局或站点本地地址 |
| 对等地址（peer-address） | 接收待转发消息的客户端或中继代理的地址             |
| 选项（options）        | 必须包含“中继消息选项”（见第22.10节）；也可以包含由中继代理添加的其他选项 |

7.2. 中继应答（Relay-reply）消息

下表定义了中继应答消息中各字段的用途。

| 字段名        | 说明                                              |
|--------------|---------------------------------------------------|
| 消息类型（msg-type） | RELAY-REPL                                    |
| 跳数（hop-count）    | 复制自中继转发消息                                |
| 链路地址（link-address） | 复制自中继转发消息                                |
| 对等地址（peer-address） | 复制自中继转发消息                                |
| 选项（options）        | 必须包含“中继消息选项”；见第22.10节，也可以包含其他选项 |

8. 域名的表示与使用

为了使域名编码统一，域名或域名列表采用RFC 1035 [10]第3.1节描述的技术进行编码。DHCP中的域名或域名列表不得采用RFC 1035第4.1.4节所述的压缩形式存储。

9. DHCP唯一标识符（DUID）

每个DHCP客户端和服务器都拥有一个DUID。DHCP服务器使用DUID识别客户端，以选择配置参数和关联IAs。DHCP客户端使用DUID在需要识别服务器的消息中标识服务器。关于在DHCP消息中表示DUID的细节，详见第22.2和22.3节。

客户端和服务器必须将DUID视为不透明值，只进行相等性比较，不得以其他方式解释DUID。不得限制DUID的类型为本文定义的类型，未来可能会定义其他类型。

DUID作为选项携带，因为它可能是变长的，并且并非所有DHCP消息都需要携带。DUID旨在在所有DHCP客户端和服务器中唯一且稳定——即，客户端或服务器使用的DUID应尽可能不随时间变化。例如，设备的DUID不应因网络硬件的更换而改变。

拥有多种DUID类型的原因在于，DUID必须是全局唯一的，同时也要易于生成。不同设备生成全局唯一标识符的方式差异很大。有些设备可能没有持久存储空间，存储已生成的DUID在此类设备中不可能，因此DUID方案必须考虑到这类设备。

9.1. DUID内容

DUID由一个两字节的类型码（以网络字节序表示）和随后的变长字节数组组成，代表实际的标识符。DUID最长为128字节（不包括类型码）。目前定义的类型有：

- 1：链路层地址加时间
- 2：基于企业编号的供应商唯一ID
- 3：链路层地址

每种类型的变长字段格式如下。

9.2. 基于链路层地址加时间的DUID [DUID-LLT]

此类型的DUID由两个字节的类型字段（值为1）、两个字节的硬件类型代码、四个字节的时间值，以及连接到DHCP设备的任意网络接口的链路层地址组成。时间值为自2000年1月1日午夜（UTC）起的秒数，模2^32。硬件类型必须是由IANA分配的有效硬件类型（详见RFC 826 [14]）。时间和硬件类型均采用网络字节序存储。链路层地址以规范形式存储（详见RFC 2464 [2]）。

以下图示DUID-LLT的格式：

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |               1               |    硬件类型（16位）             |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                        时间（32位）                          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    .                                                               .
    .             链路层地址（变长）                                .
    .                                                               .
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

可以完全随意选择网络接口，只要该接口提供全局唯一的链路层地址，且在配置所有连接到设备的网络接口时应使用相同的DUID-LLT，无论使用哪个接口的链路层地址生成的。

使用此类型DUID的客户端和服务器必须将DUID-LLT存储在稳定存储中，即使生成DUID的网络接口被移除，也应继续使用此DUID。没有稳定存储的客户端和服务器不得使用此类型DUID。

使用此DUID的设备应在生成DUID之前尽可能配置时间，并且在生成DUID时必须使用某种时间源（如实时时钟），即使在生成前无法配置时间源。这样可以减少在网络接口被移除后，其他设备使用相同接口生成相同DUID-LLT的可能性。即使时钟未配置，生成的DUID-LLT发生碰撞的可能性也非常低。

此方法推荐用于所有通用计算设备，如台式机、笔记本电脑，以及包含可写非易失存储的设备，如打印机、路由器等。

尽管我们已尽最大努力，但仍可能存在生成相同DUID的碰撞风险。使用此机制生成DUID-LLT的DHCP客户端必须提供管理界面，以便替换现有DUID为新生成的DUID-LLT。

9.3. 由供应商分配的企业编号基础的DUID [DUID-EN]

这种类型的DUID由供应商分配给设备。它由IANA维护的供应商注册的私有企业编号（Private Enterprise Number）[6]，后跟供应商分配的唯一标识符组成。下图总结了DUID-EN的结构：

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |               2               |       enterprise-number       |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |   enterprise-number (续)      |                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |
    .                           标识符                                .
    .                       （可变长度）                              .
    .                                                               .
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

标识符的来源由定义它的供应商自行决定，但每个DUID-EN中的标识符部分必须对使用它的设备唯一，并且必须在设备制造时分配给该设备，并存储在某种非易失性存储中。生成的DUID应记录在不可擦除的存储中。企业编号是由IANA维护的供应商注册的私有企业编号[6]，以无符号32位数字存储。

此类型的一个示例DUID可能如下所示：

    +---+---+---+---+---+---+---+---+
    | 0 | 2 | 0 | 0 | 0 |  9| 12|192|
    +---+---+---+---+---+---+---+---+
    |132|221| 3 | 0 | 9 | 18|
    +---+---+---+---+---+---+

这个示例包括两字节的类型值2，企业编号（9），后跟八个字节的标识符数据（0x0CC084D303000912）。

---

9.4 基于链路层地址的DUID [DUID-LL]

这种类型的DUID由两个字节组成，表示DUID类型3，接着是两个字节的网络硬件类型代码，然后是任何一个永久连接到客户端或服务器设备的网络接口的链路层地址。例如，一个在芯片中实现且不太可能被移除的网络接口的主机，可能会使用DUID-LL。硬件类型必须是由IANA分配的有效硬件类型，如RFC 826 [14]所述。硬件类型以网络字节序存储。链路层地址以规范形式存储，如RFC 2464 [2]所述。下图说明了DUID-LL的格式：

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |               3               |    硬件类型（16位）           |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    .                                                               .
    .             链路层地址（可变长度）                            .
    .                                                               .
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

可以完全任意选择网络接口，只要该接口提供唯一的链路层地址，并且永久连接在生成该DUID-LL的设备上。无论使用哪个接口的链路层地址生成DUID，都应在配置所有连接到该设备的网络接口时使用相同的DUID-LL。

建议对具有永久连接链路层地址的设备使用DUID-LL，且没有非易失性、可写的稳定存储。DHCP客户端或服务器如果无法判断某个网络接口是否永久连接到运行该DHCP客户端的设备，则不得使用DUID-LL。

---

10. 身份关联（Identity Association）

“身份关联”（IA）是一种结构，通过它，服务器和客户端可以识别、分组和管理一组相关的IPv6地址。每个IA由一个IAID和相关配置参数组成。

客户端必须为其每个请求分配IPv6地址的网络接口关联至少一个不同的IA。客户端使用分配给某个接口的IA来从服务器获取该接口的配置信息。每个IA必须与恰好一个接口关联。

IAID唯一标识该IA，必须在客户端的所有IAID中保持唯一。IAID由客户端选择。对于客户端使用的任何IA，IAID在客户端重启后必须保持一致。客户端可以通过存储IAID在非易失性存储中，或使用某种算法确保只要客户端配置未变，生成的IAID始终一致，从而保持一致性。如果客户端没有非易失性存储，且硬件配置发生变化，可能无法保持IAID的一致性。

IA中的配置信息包括一个或多个IPv6地址，以及T1和T2时间点。关于在DHCP消息中表示IA的详细内容，请参见第22.4节。

IA中的每个地址都具有偏好存续时间和有效存续时间，定义在RFC 2462 [17]中。这些存续时间由DHCP服务器在IA选项中传递，适用于IPv6地址的使用，详见RFC 2462第5.5.4节。

---

11. 选择用于分配给IA的地址

服务器根据由管理员确定的地址分配策略，以及从以下某些来源获取的关于客户端的具体信息，选择要分配给IA的地址：

- 客户端连接的链路。服务器的判断方法如下：

  * 如果服务器直接从客户端接收消息，且接收消息的IP数据报的源地址是链路本地地址，则客户端位于与接收消息的接口相同的链路上。

  * 如果服务器从转发中继代理接收消息，则客户端位于与中继代理消息中链路地址字段所指接口相同的链路上。

  * 如果服务器直接从客户端接收消息，且接收消息的IP数据报的源地址不是链路本地地址，则客户端位于由IP数据报中的源地址标识的链路上（注意，只有在服务器启用客户端单播消息传递且客户端发送了允许单播的消息时，才会出现这种情况）。

- 客户端提供的DUID。

- 客户端在选项中提供的其他信息。

- 中继代理在选项中提供的其他信息。

任何基于EUI-64标识符分配的地址，必须包含接口标识符，其“u”（通用/本地）和“g”（个体/组）位应按RFC 2373 [5]第2.5.1节的指示设置。

服务器不得分配为其他用途保留的地址。例如，不得从任何子网分配RFC 2526定义的保留任播地址。

---

12. 临时地址的管理

客户端可以请求分配临时地址（详见RFC 3041 [12]中对临时地址的定义）。DHCPv6对临时地址的处理与普通地址无异。DHCPv6不涉及临时地址的存续时间、客户端如何使用临时地址、生成连续临时地址的规则等细节。

客户端请求临时地址，服务器分配。临时地址包含在“临时地址身份关联（IA_TA）”选项中（见第22.5节）。每个IA_TA选项最多包含一个临时地址，适用于客户端连接的链路上的每个前缀。

IA_TA的IAID编号空间与IA_NA的编号空间是分开的。

服务器可以根据RFC 3041第4节的描述，更新临时地址的DNS记录。

---

13. 客户端消息的传输

除非本文件或其他描述IPv6在特定链路类型上传输方式的文件另有规定（对于不支持多播的链路类型），客户端应将DHCP消息发送到“All_DHCP_Relay_Agents_and_Servers”。

客户端使用多播方式联系所有服务器或单个服务器。单个服务器通过在客户端消息中的“服务器标识符（Server Identifier）”选项（见第22.3节）中指定该服务器的DUID来指示（所有服务器都能收到此消息，但只有指定的服务器会响应）。未提供此选项则表示所有服务器。

客户端也可以使用单播直接向某个服务器发送部分消息，详见第22.12节。

---

14. 客户端发起消息的可靠性

DHCP客户端负责确保在第17和第18节描述的客户端发起的消息交换中的消息可靠传递。如果DHCP客户端未能收到预期的服务器响应，必须重新传输其消息。以下内容描述客户端在发起消息交换时应采用的重传策略。

注意，使用Solicit消息时，相关程序略有不同，详见第17.1.2节。

客户端通过向服务器发送消息开始交换。当客户端成功收到来自一个或多个服务器的适当响应，或根据下面描述的重传机制判定交换失败时，交换结束。

客户端的重传行为由以下变量控制和描述：

- RT：重传超时时间
- IRT：初始重传时间
- MRC：最大重传次数
- MRT：最大重传时间
- MRD：最大重传持续时间
- RAND：随机化因子

每次消息传输或重传时，客户端根据以下规则设置RT。如果RT在消息交换结束前到期，客户端会重新计算RT并重传消息。

每次计算新RT时都包含一个随机化因子（RAND），为在-0.1到+0.1之间的均匀分布的随机数。引入随机化因子是为了减少DHCP客户端发出消息的同步性。

选择随机数的算法不必是密码学安全的，但应每次调用都产生不同的随机序列。

首次传输的RT基于IRT：

      RT = IRT + RAND*IRT

后续传输的RT基于前一次的RT：

      RT = 2*RT_prev + RAND*RT_prev

MRT定义了RT的上限（不考虑RAND引入的随机性）。如果MRT为0，则没有上限，否则：

      如果（RT > MRT）
         RT = MRT + RAND*MRT

MRC定义了客户端最多重传的次数上限。除非MRC为零，否则在客户端传输了MRC次后，消息交换失败。

MRD定义了客户端最多重传消息的时间上限。除非MRD为零，否则从客户端首次传输消息起，经过MRD秒后，消息交换失败。

如果MRC和MRD都非零，满足任一条件时，消息交换即视为失败。

如果MRC和MRD都为零，客户端将持续传输消息，直到收到响应。

---

15. 消息验证

客户端和服务器应丢弃任何包含不允许出现在接收消息中的选项的消息。例如，信息请求消息中不允许出现 IA 选项。客户端和服务器可以选择从此类消息中提取有用的信息。

当服务器收到目标地址为单播的 solicit、confirm、rebind 或信息请求消息时，必须丢弃这些消息。

关于基于 DHCP 认证的消息验证，详见第21.4.2节。

如果服务器收到的消息中包含不应包含的选项（例如，带有 IA 选项的信息请求消息），或者缺少应包含的选项，或者其他无效情况，它可以发送一条带有服务器标识符选项、如果消息中包含则应带有客户端标识符选项，以及状态码为 UnSpecFail 的回复（或广告，视情况而定）。

15.1 事务ID的使用

“transaction-id”字段存放客户端和服务器用以同步响应的值。客户端应为每个新消息生成一个难以猜测或预测的随机数作为事务ID。注意，如果客户端生成的事务ID易于预测，可能会增加受到某些类型攻击的风险。客户端在重传消息时，必须保持事务ID不变。

15.2 Solicitation消息

客户端必须丢弃任何接收到的Solicit消息。

服务器必须丢弃任何未包含客户端标识符选项或包含服务器标识符选项的Solicit消息。

15.3 广告消息

客户端必须丢弃任何满足以下条件的广告消息：

- 不包含服务器标识符选项。

- 不包含客户端标识符选项。

- 客户端标识符选项中的内容与客户端的DUID不匹配。

- “transaction-id”字段的值与客户端在Solicit消息中使用的值不匹配。

服务器和中继代理必须丢弃任何接收到的广告消息。

15.4 请求消息

客户端必须丢弃任何接收到的请求消息。

服务器必须丢弃任何满足以下条件的请求消息：

- 不包含服务器标识符选项。

- 服务器标识符选项中的内容与服务器的DUID不匹配。

- 不包含客户端标识符选项。

15.5 确认消息

客户端必须丢弃任何接收到的确认消息。

服务器必须丢弃任何未包含客户端标识符选项或包含服务器标识符选项的确认消息。

15.6 续租消息

客户端必须丢弃任何接收到的续租消息。

服务器必须丢弃任何满足以下条件的续租消息：

- 不包含服务器标识符选项。

- 服务器标识符选项中的内容与服务器的标识符不匹配。

- 不包含客户端标识符选项。

15.7 重新绑定消息

客户端必须丢弃任何接收到的重新绑定消息。

服务器必须丢弃任何未包含客户端标识符选项或包含服务器标识符选项的重新绑定消息。

15.8 拒绝消息

客户端必须丢弃任何接收到的拒绝消息。

服务器必须丢弃任何满足以下条件的拒绝消息：

- 不包含服务器标识符选项。

- 服务器标识符选项中的内容与服务器的标识符不匹配。

- 不包含客户端标识符选项。

15.9 释放消息

客户端必须丢弃任何接收到的释放消息。

服务器必须丢弃任何满足以下条件的释放消息：

- 不包含服务器标识符选项。

- 服务器标识符选项中的内容与服务器的标识符不匹配。

- 不包含客户端标识符选项。

15.10 回复消息

客户端必须丢弃任何满足以下条件的回复消息：

- 不包含服务器标识符选项。

- 消息中的“transaction-id”字段与原始消息中使用的值不匹配。

如果客户端在原始消息中包含了客户端标识符选项，则回复消息必须包含客户端标识符选项，并且其内容必须与客户端的DUID匹配；或者，如果原始消息中未包含客户端标识符选项，则回复消息不得包含该选项。

服务器和中继代理必须丢弃任何接收到的回复消息。

15.11 重新配置消息

服务器和中继代理必须丢弃任何接收到的重新配置消息。

客户端必须丢弃任何满足以下条件的重新配置消息：

- 消息未以单播方式发送到客户端。

- 不包含服务器标识符选项。

- 不包含包含客户端DUID的客户端标识符选项。

- 不包含重新配置消息选项，且消息类型必须为有效值。

- 包含任何IA选项且重新配置消息中的消息类型为信息请求。

- 不包含DHCP认证信息：

  * 不包含认证选项。

  * 不通过客户端执行的认证验证。

15.12 信息请求消息

客户端必须丢弃任何接收到的信息请求消息。

服务器必须丢弃任何满足以下条件的信息请求消息：

- 包含服务器标识符选项，但该选项中的DUID与服务器的DUID不匹配。

- 包含IA选项。

15.13 中继转发消息

客户端必须丢弃任何接收到的中继转发消息。

15.14 中继应答消息

客户端和服务器必须丢弃任何接收到的中继应答消息。

16. 客户端源地址与接口选择

当客户端向“All_DHCP_Relay_Agents_and_Servers”地址发送DHCP消息时，应通过请求配置的接口发送消息。然而，客户端也可以通过连接到同一链路的其他接口发送，前提是客户端确信这两个接口连接在同一链路上。客户端必须使用为请求配置的接口分配的链路本地地址作为IP数据报头中的源地址。

当客户端使用单播直接向服务器发送DHCP消息（在收到服务器的Server Unicast选项后），IP数据报头中的源地址必须是为客户端感兴趣的接口分配的地址，并且该地址适合由服务器用来响应客户端。

17. DHCP服务器请求

本节描述客户端如何定位会为其分配地址的DHCP服务器。

客户端负责创建IA，并请求服务器为该IA分配IPv6地址。客户端首先创建一个IA并分配IAID，然后发送包含描述该IA的IA选项的Solicit消息。能够为该IA分配地址的服务器会以广告消息响应客户端。随后，客户端按照第18节的描述开始配置交换。

如果客户端愿意接受带有已分配地址和其他资源的回复消息（响应Solicit消息），则在Solicit消息中应包含快速确认（Rapid Commit）选项（见第22.14节）。

17.1 客户端行为

客户端使用Solicit消息来发现配置在其链路上的DHCP服务器，以分配地址或返回其他配置参数。

17.1.1 Solicitation消息的创建

客户端将“msg-type”字段设置为SOLICIT。客户端生成一个事务ID，并将其插入“transaction-id”字段。

客户端必须包含客户端标识符选项以识别自己。客户端还应包含希望服务器分配地址的IA选项。客户端可以在IA中包含地址作为提示，表达偏好。除非单独定义，否则不得在Solicit消息中包含其他选项。

客户端使用IA_NA选项请求分配非临时地址，使用IA_TA选项请求临时地址。DHCP消息中可以同时包含这两种选项或其中之一。

客户端应包含选项请求（Option Request）选项（见第22.7节），以表明感兴趣的选项。客户端还可以在这些选项中添加实例，作为参数值的提示，帮助服务器返回期望的参数。

如果客户端愿意接受来自服务器的重新配置消息，应包含重新配置接受（Reconfigure Accept）选项（见第22.20节）。

17.1.2 Solicitation消息的传输

客户端在接口上首次发送的Solicit消息必须延迟一个随机时间，范围在0到SOL_MAX_DELAY之间。在由IPv6邻居发现触发的DHCP启动过程中，延迟时间用于避免多个客户端同时启动（例如，停电后）。此随机延迟可以实现客户端的去同步。

客户端根据第14节的参数发送消息，参数如下：

- IRT（Initial Retry Time）为SOL_TIMEOUT

- MRT（Maximum Retry Time）为SOL_MAX_RT

- MRC（Maximum Retry Count）为0

- MRD（Maximum Retry Duration）为0

如果客户端在Solicit消息中包含快速确认选项，则一旦收到带有快速确认的回复消息，即停止等待。

如果客户端在等待广告消息，Section 14中的机制将被修改，用于Solicit消息的传输。即在第一个RT到达之前，不会因收到广告而终止交换，而是继续收集广告消息，直到第一个RT到达。第一个RT必须严格大于IRT，方法是选择RAND值大于0。

客户端必须在第一个RT秒内收集广告消息，除非收到偏好值为255的广告。偏好值在偏好（Preference）选项中（第22.8节）。未包含偏好选项的广告视为偏好值为0。如果收到偏好值为255的广告，客户端立即开始客户端发起的消息交换（如第18节所述），向广告消息的来源服务器发送请求（Request）消息。如果未收到偏好值为255的广告，客户端将继续等待第一个RT的到来。RT到达后，若已收到广告，客户端应继续发起请求。

如果客户端在第一个RT时间到期之前没有收到任何广告消息，它将启动第14节中描述的重传机制。客户端一旦收到任何广告消息，就会终止重传过程，并立即对收到的广告消息采取行动，而不等待其他广告消息。

DHCP客户端应将MRC和MRD设置为0。如果DHCP客户端配置的MRC或MRD不为0，且消息交换失败，则必须停止尝试配置接口。在停止配置尝试后，客户端应在某些外部事件发生时（如用户输入、系统重启或连接到新链路）重新启动重新配置过程。

Droms等人，标准轨迹 [第34页]

RFC 3315 IPv6 DHCP 2003年7月

17.1.3. 广告消息的接收

客户端必须忽略任何包含状态码选项且值为NoAddrsAvail的广告消息，但可以选择将相关的状态信息显示给用户。

当收到一个或多个有效的广告消息后，客户端会根据以下标准选择一个或多个广告消息：

- 优先选择具有最高服务器偏好值的广告消息。

- 在具有相同服务器偏好值的广告消息组中，客户端可以选择那些广告中包含对其感兴趣信息的服务器。例如，客户端可以选择返回了包含其感兴趣配置选项的广告的服务器。

- 如果某个服务器的广告参数更优（如广告中的地址集更好），客户端可以选择偏好较低的服务器。

一旦客户端选择了广告消息，通常会存储每个服务器的信息，例如服务器偏好值、广告的地址、广告接收时间等。

如果所选服务器未响应，客户端应根据上述标准选择下一个服务器。

17.1.4. 回复消息的接收

如果客户端在Solicit消息中包含快速提交（Rapid Commit）选项，则期望收到包含快速提交选项的回复（Reply）消息。客户端会丢弃所有未包含快速提交选项的回复消息。如果收到有效的包含快速提交选项的回复，客户端将按照第18.1.8节的描述处理该消息。如果没有收到此类回复，但收到有效的广告消息，客户端会按照第17.1.3节的方式处理广告。

如果之后客户端收到包含快速提交选项的有效回复，客户端可以选择：

- 按照第18.1.8节的描述处理回复，并丢弃对请求消息的任何响应回复，或

- 处理所有对请求消息的响应回复，并丢弃包含快速提交选项的回复。

17.2. 服务器行为

服务器会对收到的有效Solicit消息发出广告（Advertise）消息，以向客户端宣布其可用性。

17.2.1. Solicite消息的接收

服务器根据第11节的描述确定客户端及其位置的信息，并检查其关于响应客户端的管理策略。如果服务器不允许响应该客户端，则会丢弃Solicit消息。例如，如果管理策略规定服务器只响应愿意接受重新配置（Reconfigure）消息的客户端，而客户端在Solicit中表示不接受，则服务器会丢弃该消息。

如果客户端在Solicit中包含快速提交选项，且服务器已配置为响应带有地址和其他资源的确认（committed）分配，则服务器会按照第17.2.3节的描述用回复消息响应Solicit。否则，服务器会忽略快速提交选项，并像没有该选项一样处理剩余消息。

17.2.2. 广告消息的创建与传输

服务器将“msg-type”字段设置为ADVERTISE，并将收到的Solicit消息中的事务ID复制到广告消息中。服务器在广告中包含其服务器标识符（Server Identifier）选项，并将Solicit消息中的客户端标识符（Client Identifier）复制到广告中。

服务器可以添加偏好（Preference）选项，以携带广告的偏好值。实现应允许管理员设置服务器偏好值，默认值为零，除非管理员另行配置。

如果服务器希望客户端接受重新配置消息，则会在广告中加入Reconfigure Accept选项。

服务器还会在广告中包含将会在后续回复（Reply）消息中返回的选项。这些选项中的信息可帮助客户端在收到多个广告时选择服务器。如果客户端在Solicit中包含Option Request（选项请求）选项，服务器会在广告中包含所有请求的配置参数选项（只要已配置返回这些选项）。服务器也可以返回额外的选项，但必须遵守RFC 2460第5节关于包大小和分段的建议。

如果Solicit中包含一个或多个IA（Identity Association）选项，服务器必须在广告中包含对应的IA选项，列出将分配给这些IA的地址。如果客户端在Solicit中已包含地址，服务器会将这些地址作为偏好提示。

如果服务器不会为后续请求中的任何IA分配地址，则必须向客户端发送仅包含状态码（NoAddrsAvail）和状态消息的广告，此外还应包含服务器的DUID（Server Identifier）和客户端的DUID（Client Identifier）。

如果Solicit直接由服务器接收，广告会通过单播方式直接发给客户端，地址为接收Solicit的IP数据报中的源地址。广告必须在收到Solicit的链路上单播。

如果Solicit是在Relay-forward消息中接收的，服务器会构造一个Relay-reply消息，将广告放在“relay-message”选项的载荷中。如果Relay-forward消息中包含Interface-id选项，服务器会复制该选项到Relay-reply中。Relay-reply会通过单播直接发给中继代理，地址为接收Relay-forward的IP数据报中的源地址。

17.2.3. 回复消息的创建与传输

服务器必须在向客户端发送回复（Reply）消息前，确认任何地址或其他配置的分配。  

讨论：  

- 使用Solicit-Reply消息交换时，服务器在发送Reply前会确认地址的分配。客户端可以假设已获得Reply中的地址，无需额外请求。

- 通常，配置为使用Solicit-Reply交换的服务器会部署为只响应一个服务器。如果多个服务器响应，客户端只会使用其中一个服务器的地址，其他服务器的地址虽已分配但不被使用。

服务器在Reply中加入快速提交（Rapid Commit）选项，表示回复是对Solicit的响应。

如果服务器希望客户端接受重新配置消息，会加入Reconfigure Accept选项。

服务器会像收到请求（Request）消息一样生成Reply，具体见第18.2.1节，传输方式见第18.2.8节。

18. DHCP客户端发起的配置交换

客户端主动与服务器（或多个服务器）交换消息，以获取或更新感兴趣的配置信息。客户端可以在操作系统配置过程中发起，也可以由应用层请求，或在无状态地址自动配置（Stateless Address Autoconfiguration）时发起，或为延长地址寿命（续租和重绑定）而发起。

18.1. 客户端行为

在地址的正常生命周期中，客户端会使用Request、Renew、Rebind、Release和Decline消息。用Confirm验证地址（如迁移到新链路）时使用。需要配置信息但不需要地址时，使用Information-Request消息。

如果客户端的源地址范围足够，且已从服务器收到Server Unicast（第22.12节）选项，客户端应将请求、续租、释放和拒绝消息单播到服务器。

讨论：  

- 单播可以避免中继代理转发带来的延迟，也可以减少服务器因多台响应而产生的响应重复和开销。要求客户端通过中继代理转发所有DHCP消息，可以在所有消息中加入中继代理选项。只有在不使用中继代理的情况下，才应启用单播。

18.1.1. 请求消息的创建与传输

客户端用Request消息填充IA（地址信息）并获取其他配置。请求中包含一个或多个IA选项。服务器会在Reply消息中的IA选项中返回地址和其他信息。

客户端生成事务ID，并将其放入“transaction-id”字段。

客户端在Server Identifier选项中放入目标服务器的标识符。

客户端必须包含Client Identifier选项以标识自己。还应加入其他合适的选项，包括一个或多个IA选项（如果请求服务器分配地址）。

客户端必须包含Option Request（第22.7节）以表明感兴趣的参数。也可以用数据值作为提示，让服务器返回特定参数。

客户端还会加入Reconfigure Accept（第22.20节）选项，表示是否愿意接受服务器的重新配置消息。

客户端按照第14节的参数，传输消息：

- IRT   REQ_TIMEOUT（请求超时）

- MRT   REQ_MAX_RT（最大重传次数）

- MRC   REQ_MAX_RC（最大重传次数）

- MRD   0（无等待时间）

如果消息交换失败，客户端会根据本地策略采取行动，示例包括：

- 从已知的服务器列表中选择另一台服务器；例如，响应了广告消息的服务器。

- 启动第17节所述的服务器发现过程。

- 终止配置过程并报告失败。

18.1.2. 确认消息的创建与传输

当客户端可能已切换到新的链路时，分配给该链路接口的地址前缀可能不再适用于客户端所连接的链路。例如，客户端可能已切换到新链路的情况包括：

o 客户端重启。

o 客户端物理连接到有线网络。

o 客户端从睡眠模式返回。

o 使用无线技术的客户端更换接入点。

在任何客户端可能已切换到新链路的情况下，客户端必须发起确认/应答消息交换。客户端在确认消息中应包括任何已分配给可能已切换到新链路的接口的IA（身份识别）及其相关地址。响应的服务器会在返回的应答消息中指示这些地址是否适用于客户端连接的链路。

客户端将“msg-type”字段设置为CONFIRM。客户端生成一个事务ID，并将其插入“transaction-id”字段。

客户端必须包含一个客户端标识符（Client Identifier）选项，以识别自己给服务器。客户端在确认消息中包括所有分配给该接口的IA的IA选项。这些IA选项应包括客户端当前与之关联的所有地址。客户端应在任何IA_NA（非临时地址）选项中设置T1和T2字段，以及在IA地址选项中将偏好生存时间（preferred-lifetime）和有效生存时间（valid-lifetime）字段设置为0，因为服务器会忽略这些字段。

客户端在接口上的第一个确认消息必须延迟一个随机时间，范围在0到CNF_MAX_DELAY之间。客户端根据第14节的规定，使用以下参数传输消息：

- IRT（重传超时时间）为CNF_TIMEOUT

- MRT（最大重传时间）为CNF_MAX_RT

- MRC（最大重传次数）为0

- MRD（最大重传持续时间）为CNF_MAX_RD

如果在消息传输过程结束前（如第14节所述）未收到任何响应，客户端应继续使用任何已知的IP地址，使用这些地址的最后已知生存时间，并继续使用之前获得的其他配置参数。

18.1.3. 续约消息的创建与传输

为了延长与IA相关联地址的有效和偏好生存时间，客户端向获取这些地址的服务器发送续约（Renew）消息，消息中包含对应的IA选项。客户端在IA选项中包括与IA关联的所有地址的IA地址（IA Address）选项。服务器根据其管理配置，为IA中的地址确定新的生存时间。服务器也可以向IA中添加新地址，或通过将地址的偏好和有效生存时间设置为零来移除地址。

服务器通过分配给IA的T1和T2参数控制客户端联系服务器以延长地址生存时间的时间点。

在T1时间点，客户端发起续约/应答（Renew/Reply）消息交换，以延长IA中所有地址的生存时间。客户端在续约消息中包含一个IA选项，列出当前与IA关联的所有地址。

如果服务器将T1或T2设置为0（对于IA_NA）或没有设置T1和T2（对于IA_TA），客户端可以自行决定何时发送续约或重新绑定（Rebind）消息。

客户端将“msg-type”字段设置为RENEW。客户端生成事务ID，并将其插入“transaction-id”字段。

客户端在消息中加入目标服务器的标识符（Server Identifier）选项。

客户端必须包含一个客户端标识符（Client Identifier）选项，以识别自己。客户端还应加入任何相关的选项，包括一个或多个IA选项。续约消息中必须包括客户端当前与IA关联的所有地址。

客户端还必须包含一个选项请求（Option Request）选项（见第22.7节），以表明客户端希望接收的参数。客户端可以包含带有数据值的选项，作为对服务器的提示，说明希望返回的参数值。

客户端根据第14节的规定，使用以下参数传输消息：

- IRT（重传超时时间）为REN_TIMEOUT

- MRT（最大重传时间）为REN_MAX_RT

- MRC（最大重传次数）为0

- MRD（最大重传持续时间）为剩余到达T2的时间

当达到T2时间（见第18.1.4节）时，消息交换终止，客户端开始重新绑定（Rebind）消息交换。

18.1.4. 重新绑定消息的创建与传输

在T2时间点（仅在服务器未响应T1时发出的续约消息未获回应时到达），客户端会与任何可用的服务器发起重新绑定（Rebind）/应答（Reply）消息交换。客户端在重新绑定消息中包括所有当前与IA关联的地址的IA选项。

客户端将“msg-type”字段设置为REBIND。客户端生成事务ID，并将其插入“transaction-id”字段。

客户端必须包含一个客户端标识符（Client Identifier）选项，以识别自己。客户端还应加入任何相关的选项，包括一个或多个IA选项。重新绑定消息中必须包括客户端当前与IA关联的所有地址。

客户端还必须包含一个选项请求（Option Request）选项（见第22.7节），以表明希望接收的参数。可以包含带有数据值的选项，作为对服务器的提示。

客户端根据第14节的规定，使用以下参数传输消息：

- IRT（重传超时时间）为REB_TIMEOUT

- MRT（最大重传时间）为REB_MAX_RT

- MRC（最大重传次数）为0

- MRD（最大重传持续时间）为所有地址的有效生存时间到期剩余时间

当所有地址的有效生存时间到期（见第10节）时，消息交换终止。此时，客户端有多种备选行动，例如：

- 客户端可以选择使用Solicit消息寻找新的DHCP服务器，并向新服务器请求已过期的IA。

- 客户端可能在其他IA中拥有其他地址，因此可以选择丢弃已过期的IA，使用其他IA中的地址。

18.1.5. 信息请求消息的创建与传输

客户端使用信息请求（Information-request）消息获取配置信息，而无需分配地址。

客户端将“msg-type”字段设置为INFORMATION-REQUEST。客户端生成事务ID，并将其插入“transaction-id”字段。

客户端应包含一个客户端标识符（Client Identifier）选项，以识别自己。如果未包含此选项，服务器将无法返回任何特定于客户端的选项，或者可能根本不响应此消息。若信息请求消息需要认证，客户端必须包含客户端标识符。

客户端还必须包含一个选项请求（Option Request）选项（见第22.7节），以表明希望接收的参数。可以包含带有数据值的选项，作为提示。

首次在接口上发出的信息请求消息应延迟一个范围在0到INF_MAX_DELAY之间的随机时间。客户端根据第14节的规定，使用以下参数传输：

- IRT（重传超时时间）为INF_TIMEOUT

- MRT（最大重传时间）为INF_MAX_RT

- MRC（最大重传次数）为0

- MRD（最大重传持续时间）为0

18.1.6. 释放消息的创建与传输

为了释放一个或多个地址，客户端向服务器发送释放（Release）消息。

客户端将“msg-type”字段设置为RELEASE。客户端生成事务ID，并将其放入“transaction-id”字段。

客户端在“options”字段中加入分配该地址的服务器标识符（Server Identifier）选项。

客户端必须包含一个客户端标识符（Client Identifier）选项，以识别自己。客户端在“options”字段中加入包含要释放的地址的IA的选项。要释放的地址必须在IA中。客户端希望继续使用的地址不得加入到IA中。

客户端不得在释放消息或任何后续消息中使用要释放的地址作为源地址。

由于释放消息可能丢失，客户端应在未收到应答时重传释放消息。然而，在某些场景（如断电）下，客户端可能不希望等待正常的重传超时就放弃。实现应允许多次重传，但也可以选择提前终止重传过程。

客户端根据第14节的规定，使用以下参数传输：

- IRT（重传超时时间）为REL_TIMEOUT

- MRT（最大重传时间）为0

- MRC（最大重传次数）为REL_MAX_RC

- MRD（最大重传持续时间）为0

客户端必须在开始释放消息交换后立即停止使用所有要释放的地址。如果地址已释放，但未收到DHCP服务器的应答，客户端会重传释放消息，服务器可能会返回状态为NoBinding的应答。因此，客户端不会将状态为NoBinding的应答视为错误。

注意：如果客户端未能成功释放地址，地址的有效生存时间到期后，地址将由服务器收回。

18.1.7. 拒绝消息的创建与传输

如果客户端检测到由服务器分配的一个或多个地址已被其他节点使用，客户端会向服务器发送拒绝（Decline）消息，告知地址存在问题。

客户端将“msg-type”字段设置为DECLINE。客户端生成事务ID，并将其放入“transaction-id”字段。

客户端在“options”字段中加入分配该地址的服务器标识符（Server Identifier）选项。

客户端必须包含一个客户端标识符（Client Identifier）选项，以识别自己。客户端在“options”字段中加入包含要拒绝的地址的IA的选项。被拒绝的地址必须在IA中。客户端希望继续使用的地址不应加入到IA中。

客户端不得在拒绝消息或任何后续消息中使用被拒绝的地址作为源地址。

客户端根据第14节的规定，使用以下参数传输：

- IRT（重传超时时间）为DEC_TIMEOUT

- MRT（最大重传时间）为0

- MRC（最大重传次数）为DEC_MAX_RC

- MRD（最大重传持续时间）为0

如果地址被拒绝，但未收到DHCP服务器的应答，客户端会重传拒绝消息，服务器可能会返回状态为NoBinding的应答。因此，客户端不会将状态为NoBinding的应答视为错误。

18.1.8. 应答消息的接收

收到针对Solicit（带有快速确认选项）、Request、Confirm、Renew、Rebind或Information-request消息的有效应答（Reply）后，客户端会提取Reply中包含的配置信息。客户端可以选择报告Reply消息中的状态码或状态码选项中的消息。

在使用Reply中的IA（身份识别）信息之前，客户端应对每个IA中的地址进行重复地址检测[17]。如果发现任何地址已在链路上被使用，客户端会向服务器发送Decline消息，如第18.1.7节所述。

如果Reply是对带有快速确认选项的Solicit、Request、Renew或Rebind消息的响应，客户端会更新其关于IA的记录信息，包括：
- 记录T1和T2时间。
- 将IA选项中新增的地址添加到客户端记录的IA中。
- 更新客户端已记录的IA中地址的生命周期。
- 丢弃IA中生命周期为0的地址（在IA地址选项中有效期为0）。
- 保持未在Reply中包含的、客户端已记录的地址信息不变。

具体配置参数的管理细节在第22节中每个选项的定义中详细说明。

如果客户端收到的Reply中状态码为UnspecFail，表示服务器因未指明的故障条件无法处理该消息。如果客户端重发原始消息以重试操作，必须限制重传速率和持续时间。

当客户端收到状态码为UseMulticast的Reply时，客户端会记录该消息的接收，并通过接收消息的接口以多播方式向服务器发送后续消息。客户端会用多播重新发送原始消息。

当客户端收到服务器对Confirm消息的响应中返回NotOnLink状态时，客户端会执行DHCP服务器的请求（第17节所述）和客户端主动配置（第18节所述）。如果收到的Reply未指示NotOnLink状态，客户端可以使用IA中的地址，并忽略任何指示NotOnLink的消息。

当客户端收到服务器对Request的响应中返回NotOnLink状态时，可以重新发起请求（不指定任何地址）或重新启动DHCP服务器发现流程（第17节）。

客户端会逐个检查每个IA的状态码。如果状态码为NoAddrsAvail，表示该IA没有可用地址，客户端可以尝试从其他服务器获取地址。客户端会使用没有返回NoAddrsAvail状态码的IA中的地址和其他信息。如果所有IA都没有地址，客户端可以尝试其他服务器（可能重新启动发现流程）或仅通过Information-request消息获取其他配置信息。

当客户端收到对Renew或Rebind消息的回复时，会逐个检查每个IA：
- 如果IA中包含状态码为NoBinding的状态，客户端会发送请求（Request）而不再发送Renew/Rebind。
- 如果IA未出现在回复中，则发送Renew/Rebind请求。
- 否则，接受IA中的信息。

当客户端收到对Release消息的有效Reply时，无论服务器返回的状态码如何，客户端都视为Release事件已完成。

当客户端收到对Decline消息的有效Reply时，无论返回的状态码如何，Decline事件都视为已完成。

18.2. 服务器行为

在本节讨论中，假设服务器已根据实现的具体方式配置，配置内容对客户端具有相关性。

大多数情况下，服务器会对客户端消息作出Reply。此Reply消息必须始终包含服务器标识符选项（Server Identifier），其中包含服务器的DUID，以及（如果存在）客户端消息中的客户端标识符（Client Identifier）选项。

在大多数Reply中，服务器会包含配置参数的选项。服务器必须遵守RFC 2460第5节关于数据包大小和分段的建议。如果客户端在消息中包含Option Request选项，服务器会在Reply中返回所有被请求的配置参数选项（前提是已配置为返回这些选项）。服务器也可以根据配置返回额外的选项。

18.2.1. 请求消息的接收

当服务器通过单播接收来自未在其配置中启用单播的客户端的Request消息时，会丢弃该请求，并以包含状态码为UseMulticast、服务器标识符（DUID）和客户端标识符的Reply响应，不包含其他选项。

收到有效Request后，服务器根据策略和配置为该客户端建立绑定关系，并记录请求中的IA和其他信息。

服务器构造Reply时，将“msg-type”字段设为REPLY，并将请求中的事务ID复制到transaction-id字段。

Reply中必须包含服务器标识符（DUID）和请求中的客户端标识符。

如果发现请求中某个或多个IA的前缀不适合客户端连接的链路，服务器必须返回该IA，状态码为NotOnLink。

如果无法为请求中的某个IA分配任何地址，服务器必须在Reply中包含该IA（无地址）和状态码为NoAddrsAvail。

对于可以分配地址的IA，服务器会在Reply中包含带有地址和其他配置参数的IA，并将其作为新的客户端绑定记录。

如果服务器希望客户端接受重新配置（Reconfigure），会包含Reconfigure Accept选项。

还会包含其他配置参数选项，详见第18.2节。

如果服务器发现客户端在请求中包含已存在绑定的IA（即已与客户端关联的IA），且客户端未收到回复（可能是重发请求），服务器会重新发送之前缓存的Reply或生成新的Reply。

18.2.2. 确认消息的接收

收到Confirm消息后，服务器会判断消息中的地址是否适合客户端连接的链路。如果所有地址都符合，返回成功（Success）；否则返回NotOnLink。如果服务器无法执行此判断（例如没有链路前缀信息）或请求中没有地址，必须不回复。

服务器会忽略IA中的T1和T2字段，以及IA地址中的preferred-lifetime和valid-lifetime字段。

构造Reply时，将“msg-type”设为REPLY，并复制事务ID。

Reply中必须包含服务器标识符（DUID）和确认消息中的客户端标识符，以及状态码，指示确认的结果。

18.2.3. Renew消息的接收

收到来自未启用单播的客户端的Renew消息时，服务器会丢弃该消息，并以UseMulticast、服务器标识符（DUID）和客户端标识符的Reply响应。

如果Renew消息中包含IA选项，服务器会查找对应的绑定，验证IA中的信息是否与存储的匹配。

如果找不到对应的客户端绑定，服务器会在Reply中返回该IA（无地址）和NoBinding状态码。

如果IA中的地址不适合链路，服务器会返回地址，生命周期设为0。

如果IA中的地址适合，服务器会返回带有新生命周期和T1/T2时间的IA。服务器可以选择更改返回的地址列表和地址生命周期。

构造Reply时，将“msg-type”设为REPLY，并复制事务ID。

Reply中必须包含服务器标识符（DUID）和请求中的客户端标识符，以及状态码。

18.2.4. Rebind消息的接收

收到带有IA选项的Rebind消息后，服务器会查找绑定，验证信息是否匹配。

如果找不到绑定，且根据配置确认地址不适合链路，服务器可以向客户端发送IA（无地址，地址生命周期为0）的Reply，作为明确通知地址不再有效的方式。在这种情况下，如果不发送Reply，服务器会静默丢弃Rebind消息。

如果服务器发现任何地址不再适合客户端所连接的链路，服务器会将这些地址返回给客户端，并将其生命周期设置为0。

如果服务器在客户端的IA中找到了相关地址，则应当用新的生命周期和T1/T2时间将IA返回给客户端。

服务器通过设置“msg-type”字段为REPLY，并将Rebind消息中的事务ID复制到transaction-id字段，构建一个应答消息。

服务器必须在应答消息中包含一个包含服务器DUID的服务器标识符选项，以及来自Rebind消息的客户端标识符选项。

服务器还会包含其他配置参数的选项，以便返回给客户端，具体内容请参见第18.2节。

18.2.5. 接收信息请求消息

当服务器收到信息请求消息时，表示客户端请求的配置信息不包括任何地址的分配。服务器会根据已知的配置策略，确定所有适合该客户端的配置参数。

服务器通过设置“msg-type”字段为REPLY，并将信息请求消息中的事务ID复制到transaction-id字段，构建应答消息。

应答消息中必须包含一个包含服务器DUID的服务器标识符选项。如果客户端在信息请求中包含了客户端标识符选项，服务器会将其复制到应答中。

服务器还会包含其他配置参数的选项，以便返回给客户端，具体内容请参见第18.2节。

如果客户端发来的信息请求中没有包含客户端标识符选项，服务器应以包含未由客户端身份决定的配置参数的应答消息进行响应。如果服务器选择不响应，客户端可以无限次重发信息请求。

18.2.6. 接收释放消息

当服务器通过单播接收到来自未收到单播选项的客户端的释放消息时，会丢弃该消息，并以包含状态码“UseMulticast”、服务器DUID、客户端标识符（来自客户端消息）且不含其他选项的应答消息作出响应。

服务器在收到有效的释放消息后，会检查消息中的IA及其地址的有效性。如果这些IA在绑定中，且地址已由服务器分配给这些IA，服务器会删除这些地址，并将其释放出来供其他客户端使用。对于未分配给该IA的地址，服务器会忽略，虽然也可以选择记录错误。

处理完所有地址后，服务器会生成应答消息，包含状态码“Success”、服务器DUID的服务器标识符，以及客户端DUID的客户端标识符。对于没有绑定信息的IA，服务器会添加一个IA选项，使用释放消息中的IAID，并在IA选项中加入状态码“NoBinding”。在IA选项中不会包含其他选项。

服务器可能会在地址生命周期到期后，保留已分配地址和IA的记录，以便将来重新分配给其他客户端。

18.2.7. 接收拒绝消息

当服务器通过单播接收到来自未收到单播选项的客户端的拒绝消息时，会丢弃该消息，并以包含状态码“UseMulticast”、服务器DUID、客户端标识符（来自客户端消息）且不含其他选项的应答消息作出响应。

收到有效的拒绝消息后，服务器会检查消息中的IA及其地址的有效性。如果这些IA在绑定中，且地址已由服务器分配给这些IA，服务器会删除这些地址。对于未分配给该IA的地址，服务器会忽略，但也可以选择记录错误。

客户端在拒绝消息中发现的地址已在其链路上被占用。因此，服务器应标记被客户端拒绝的地址，避免将其分配给其他客户端，并可以选择通知管理员地址已被拒绝。具体何时将这些地址重新用于分配，由服务器的本地策略决定。

处理完所有地址后，服务器会生成应答消息，包含状态码“Success”、服务器DUID的服务器标识符，以及客户端DUID的客户端标识符。对于没有绑定信息的IA，服务器会添加IA选项，使用拒绝消息中的IAID，并在IA选项中加入状态码“NoBinding”。在IA选项中不会包含其他选项。

18.2.8. 发送应答消息

如果原始消息是直接由服务器接收的，服务器会通过IPv6单播地址将应答消息直接发送给客户端，地址来自接收原始消息的IP数据报的源地址字段。应答消息必须通过接收原始消息的接口进行单播。

如果原始消息是在中继转发消息中接收的，服务器会构造一个中继应答消息，将应答消息放在中继消息选项的载荷中（参见第22.10节）。如果中继转发消息中包含接口ID选项，服务器会将该选项复制到中继应答消息中。然后，服务器会使用接收中继转发消息的IP数据报的源地址，将中继应答消息直接单播给中继代理。

19. DHCP服务器主动发起配置交换

服务器可以主动发起配置交换，促使DHCP客户端获取新的地址和其他配置信息。例如，当需要重新编号DHCP域中的链路时，管理员可以使用服务器主动发起的配置交换。其他场景还包括目录服务器位置变更、新服务（如打印）加入，以及新软件的上线。

19.1. 服务器行为

服务器会发送重配置（Reconfigure）消息，促使客户端立即发起续租/应答（Renew/Reply）或信息请求/应答（Information-request/Reply）消息交换。

19.1.1. 创建和发送重配置消息

服务器将“msg-type”字段设置为RECONFIGURE，事务ID字段设为0。消息中包含一个服务器标识符选项（含DUID）和一个客户端标识符选项（含DUID）。

服务器可以包含一个选项请求（Option Request）选项，告知客户端哪些信息已更改或新增。特别是，如果服务器希望客户端获取新的地址信息，应在选项请求中指定IA选项。如果在选项请求中识别出IA选项，必须包含一个不含子选项的IA选项，用以标识每个需要重配置的IA。

由于存在对DHCP客户端的拒绝服务攻击风险，重配置消息必须使用安全机制。服务器必须在重配置消息中使用DHCP认证。

服务器还必须包含一个重配置消息选项（定义在第22.19节），以指示客户端响应续租消息还是信息请求消息。

除非单独定义允许，否则重配置消息中不得包含其他选项。

每个重配置消息由服务器单独发给一个DHCP客户端，使用属于该客户端的IPv6单播地址。如果没有可用的地址直接发送重配置消息，服务器会使用中继应答消息（参见第20.3节）将重配置消息发给中继代理，由其转发给客户端。服务器可以通过已知的客户端信息或外部代理获取客户端（及必要的中继代理）的地址。

为了同时重配置多个客户端，服务器会逐个向每个客户端单播消息。也可以同时发起多个重配置请求，例如在前一轮重配置尚未完成时，继续向其他客户端发出重配置。

重配置消息促使客户端发起续租/应答或信息请求/应答消息。服务器将客户端发来的续租或信息请求（具体由原始重配置消息指定）视为满足了重配置请求。

19.1.2. 超时与重传重配置消息

如果在REC_TIMEOUT毫秒内未收到客户端的续租或信息请求消息，服务器会重传重配置消息，将REC_TIMEOUT值加倍后再次等待。此过程持续，直到尝试次数达到REC_MAX_RC，届时应放弃该客户端的重配置。

REC_TIMEOUT和REC_MAX_RC的默认值和初始值在第5.5节中有说明。

19.2. 接收续租消息

服务器会根据第18.2.3和18.2.8节的描述，生成并向客户端发送应答消息，包括配置参数的选项。

服务器可以在应答中包含IA及其他配置参数的新值，即使这些参数在客户端的续租请求中未被请求。

19.3. 接收信息请求消息

服务器会根据第18.2.5和18.2.8节的描述，生成并向客户端发送应答消息，包括配置参数的选项。

服务器也可以在应答中包含其他配置参数的新值，即使这些参数在客户端的信息请求中未被请求。

19.4. 客户端行为

客户端会在其已获取配置的接口上，监听UDP端口546，接收发往该端口的重配置消息。这些消息可能随时到达。由于重配置事件可能影响应用层程序，客户端应记录这些事件，并可以通过特定实现的接口通知相关程序。

19.4.1. 接收重配置消息

收到有效的重配置消息后，客户端会根据重配置消息中的指示，响应续租/应答或信息请求/应答（由第22.19节定义的重配置消息选项决定）。客户端会忽略收到的重配置消息中的事务ID字段。在重配置过程进行期间，客户端会静默丢弃任何收到的重配置消息。

讨论：

重配置消息作为触发器，提示客户端完成一次成功的消息交换。一旦客户端收到重配置消息，它会继续进行消息交换（必要时重发续租或信息请求消息）；在交换完成之前，客户端会忽略其他重配置消息。后续的重配置消息会促使客户端启动新的交换。

以下是该英文内容的中文翻译：

---

在面对重复或重传的重新配置（Reconfigure）消息时，这一机制是如何工作的？重复的消息将被忽略，因为客户端在收到第一个Reconfigure后才会开始交换。重传的消息要么会触发交换（如果客户端未收到第一个Reconfigure），要么会被忽略。一旦服务器收到客户端的Renew或Information-request消息，服务器可以停止对该客户端的Reconfigure消息的重传。

可能存在一种情况，即重复或重传的Reconfigure消息被延迟到足够晚（甚至乱序到达），在原始Reconfigure引发的交换完成后才到达客户端。在这种情况下，客户端会启动一个冗余的交换。由于延迟和乱序的可能性很小，可以忽略不计。冗余交换的后果主要是效率低下，而非操作错误。

19.4.2. 创建和传输Renew消息

在响应Reconfigure时，客户端会按照第18.1.3节中描述的方式创建并发送Renew消息，唯一的区别是客户端会将Reconfigure消息中的Option Request选项和任何IA选项复制到Renew消息中。

19.4.3. 创建和传输Information-request消息

在响应Reconfigure时，客户端会按照第18.1.5节中描述的方式创建并发送Information-request消息，唯一的区别是客户端会在消息中加入一个Server Identifier选项，其值为Reconfigure消息中的标识符。

19.4.4. Renew或Information-request消息的超时与重传

客户端会使用与在客户端发起的配置交换中生成的Renew或Information-request消息相同的变量和重传算法（详见第18.1.3和18.1.5节）。如果在重传结束前未收到服务器的响应，客户端会忽略并丢弃该Reconfigure消息。

19.4.5. 接收回复消息

收到有效的Reply消息后，客户端会处理其中的选项，并相应地设置（或重置）配置参数。客户端会记录并更新Reply消息中任何IA指定的地址的生存时间。

20. 中继代理行为

中继代理可以配置使用一组目标地址，这些地址可以包括单播地址、All_DHCP_Servers多播地址，或由网络管理员选择的其他地址。如果中继代理未被明确配置，则必须默认使用All_DHCP_Servers多播地址。

如果中继代理将消息中继到All_DHCP_Servers多播地址或其他多播地址，则会将Hop Limit字段设置为32。

20.1. 转发客户端消息或中继转发消息

中继代理会转发来自客户端的消息和来自其他中继代理的Relay-forward消息。当中继代理收到一条有效的待转发消息时，会构造一条新的Relay-forward消息。它会将收到的IP数据报的源地址复制到Relay-forward消息的peer-address字段中。然后，将收到的DHCP消息（不包括任何IP或UDP头部）复制到新消息中的Relay Message选项中。中继代理还会根据配置在Relay-forward消息中加入其他选项。

20.1.1. 从客户端转发消息

如果中继代理从客户端收到待转发的消息，它会在link-address字段中放置一个全局或站点范围的地址，该地址由客户端应被分配地址的链路前缀组成。该地址由服务器用来确定应从哪个链路为客户端分配地址和其他配置参数。Relay-forward消息中的跳数（hop-count）被设置为0。

如果中继代理无法使用link-address字段中的地址来识别响应应通过的接口，则必须在Relay-forward消息中加入Interface-id选项（见第22.18节）。服务器会在其Relay-reply消息中包含该Interface-id选项。无论中继代理是否在Relay-forward消息中加入Interface-id选项，它都会按照前述方式填写link-address字段。

20.1.2. 从中继代理转发消息

如果中继代理收到的消息是Relay-forward消息，且其跳数大于或等于HOP_COUNT_LIMIT，则会丢弃该消息。

中继代理会将收到的IP数据报中的源地址复制到Relay-forward消息的peer-address字段中，并将跳数字段设置为收到的消息中的跳数加1。

如果收到的IP数据报的源地址是全局或站点本地地址（且中继代理所在设备只属于一个站点），则会将link-address字段设置为0；否则，会将link-address字段设置为分配给接收该消息接口的全局或站点本地地址，或加入Interface-ID选项以标识接收该消息的接口。

20.2. 转发Relay-reply消息

中继代理会处理Relay-reply消息中除Relay Message选项外的其他选项，然后丢弃这些选项。

它会从Relay Message选项中提取消息，并将其转发到Relay-reply消息中的peer-address字段所指示的地址。

如果Relay-reply消息中包含Interface-id选项，则中继代理会在由Interface-id选项标识的链路上将消息从服务器转发到客户端；否则，如果link-address字段不为零，则会在由link-address字段标识的链路上转发消息。

20.3. 构造Relay-reply消息

当客户端的原始消息通过Relay-forward消息转发到服务器，或者服务器没有可用的地址直接向客户端发送消息时，服务器会使用Relay-reply消息返回响应。

响应必须通过与原始客户端消息相同的中继代理链路转发。服务器会创建一个包含Relay Message选项的Relay-reply消息，里面包含发往返回路径中下一个中继代理的消息。Relay-reply消息中还会包含另一个Relay Message选项，继续传递到下一个中继代理，依此类推。服务器需要记录收到的消息中peer-address字段的内容，以便构造携带服务器响应的Relay-reply消息。

例如，如果客户端C的消息由中继代理A转发到中继代理B，再到服务器，服务器会向中继代理B发送如下Relay-Reply消息：

- msg-type: RELAY-REPLY
- hop-count: 1
- link-address: 0
- peer-address: A
- Relay Message选项，内容为：
  - msg-type: RELAY-REPLY
  - hop-count: 0
  - link-address: C所在链路的地址
  - peer-address: C
  - Relay Message选项：<来自服务器的响应>

当通过中继代理向客户端发送Reconfigure消息时，服务器会创建一个Relay-reply消息，包含一个Relay Message选项，内含发往下一中继代理的Reconfigure消息。服务器会将peer-address字段设置为客户端的地址，link-address字段根据中继代理的要求设置，以便将Reconfigure消息转发给客户端。服务器通过与客户端的先前交互或其他外部机制获取客户端和中继代理的地址。

21. DHCP消息的认证

一些网络管理员可能希望对DHCP消息的源和内容进行认证。例如，客户端可能会受到伪造DHCP服务器的拒绝服务攻击，或因误配置而连接到错误的DHCP服务器。网络管理员也可能希望限制地址分配仅给授权主机，以避免在“敌对”环境（如无线网络或大学宿舍）中发生拒绝服务攻击。

DHCP认证机制基于DHCPv4的认证设计[4]。

21.1. 服务器与中继代理之间消息的安全性

使用IPsec机制（IPv6版）[7]，支持安全交换的中继代理和服务器会采用IPsec。如果客户端消息经过多个中继代理转发，每个中继代理都必须建立独立的、点对点的信任关系。也就是说，如果客户端C的消息由中继代理A转发到中继代理B，再到服务器，则A和B都必须配置使用IPsec进行消息保护，B和服务器也必须配置使用IPsec。

支持安全中继代理到服务器或中继代理到中继代理通信的中继代理和服务器会在以下条件下使用IPsec：

- 选择器：中继代理手动配置转发DHCP消息的中继代理或服务器的地址。所有使用IPsec保护DHCP消息的中继代理和服务器都必须配置一份将要返回消息的中继代理列表。选择器为定义在DHCPv6 UDP端口546和547上的中继代理和服务器的地址对。

- 模式：中继代理和服务器使用传输模式和ESP。由于DHCP消息中的信息通常不被视为机密，因此无需加密（即可以使用NULL加密）。

- 密钥管理：由于中继代理和服务器在组织内部使用，无需采用公钥方案。由于必须手动配置中继代理和服务器，手动配置的密钥管理可能已足够，但不能防止重放攻击。因此，应支持预共享密钥的IKE（Internet Key Exchange）。也可以支持公钥的IKE。

- 安全策略：中继代理与服务器之间的DHCP消息应仅接受来自本地配置中识别的DHCP对等体的消息。

- 认证：基于源IP地址索引的共享密钥在此应用中已足够。

- 可用性：企业级和核心ISP网络中的服务器和功能更强的设备中的中继代理很可能支持相应的IPsec实现。低端设备（主要用于家庭或小型办公室市场）中，中继代理支持IPsec的可能性较低。

21.2. DHCP认证的总结

DHCP消息的认证通过使用认证选项（见第22.11节）实现。认证信息可以可靠地识别DHCP消息的源，并确认消息内容未被篡改。

认证选项为多种认证协议提供了框架。这里定义了两种协议，未来还会在其他文档中定义其他协议。

任何DHCP消息都不得包含超过一个认证选项。

---

协议字段在认证选项中标识用于生成携带在选项中的认证信息的具体协议。算法字段标识认证协议中的特定算法，例如，算法字段指定用于生成认证选项中的消息认证码（MAC）的哈希算法。重放检测方法（RDM）字段则指明在重放检测字段中使用的检测类型。

21.3. 重放检测

重放检测方法（RDM）字段决定了在重放检测字段中采用的检测类型。

如果RDM字段的值为0x00，则重放检测字段必须设置为单调递增的计数器值。使用如当前时间（例如，NTP格式的时间戳[9]）的计数器值，可以降低重放攻击的风险。这种方法必须被所有协议支持。

21.4. 延迟认证协议

如果协议字段为2，则消息采用“延迟认证”机制。在延迟认证中，客户端在其Solicit消息中请求认证，服务器则以包含认证信息的广告（Advertise）消息进行回复。

该认证信息包含由源端生成的随机数（nonce）作为消息认证码（MAC），以提供消息认证和实体认证。

此处定义了基于HMAC协议[8]，使用MD5哈希[16]的特定技术。

21.4.1. 延迟认证协议中认证选项的使用

在Solicit消息中，客户端在认证选项中填写协议、算法和RDM字段，表示其偏好。客户端将重放检测字段设置为零，并省略认证信息字段。客户端将选项长度（option-len）字段设置为11。

在其他所有消息中，协议和算法字段标识用于构造认证信息内容的方法，RDM字段标识用于构造重放检测内容的方法。

认证信息的格式如下：

```
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          DHCP域名                            |
|                      （可变长度）                              |
.                                                               .
.                                                               .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                            密钥ID                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                           HMAC-MD5                            |
|                          （128位）                            |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- DHCP域名：标识用于生成HMAC-MD5值的密钥的DHCP域名。
- 密钥ID：标识用于生成HMAC-MD5值的密钥的标识符。
- HMAC-MD5：通过对DHCP消息应用MD5哈希并使用由DHCP域名、客户端DUID和密钥ID标识的密钥生成的消息认证码。

发送方使用HMAC生成算法[8]和MD5哈希函数[16]计算MAC。整个DHCP消息（将认证选项中的MAC字段设为零，包括消息头和选项字段）作为输入，传递给HMAC-MD5计算函数。

讨论：
- 算法1规定使用HMAC-MD5。若使用其他技术（如HMAC-SHA），将作为单独协议定义。
- 用于识别认证密钥的DHCP域名应在管理域中保持唯一。使用DHCP域名可以避免密钥标识符冲突，并支持在漫游不同管理域的情况下进行经过认证的DHCP。

21.4.2. 消息验证

任何包含多个认证选项的DHCP消息都必须被丢弃。

验证接收消息时，首先检查重放检测字段的值是否符合RDM字段指定的检测方法。然后，按照[8]中的描述计算MAC。整个DHCP消息（将认证选项中的MAC字段设为零）作为输入，传入HMAC-MD5计算函数。如果计算出的MAC与认证选项中的MAC不符，则必须丢弃该DHCP消息。

21.4.3. 密钥使用

每个DHCP客户端拥有一组密钥。每个密钥由<DHCP域名、客户端DUID、密钥ID>标识，并具有有效期。密钥在其有效期结束后不得使用。客户端的密钥最初通过某种带外机制分发。每个密钥的有效期随密钥一同分发。密钥的分发和有效期的具体机制超出本文范围。

客户端和服务器在会话中使用其中一个客户端密钥对DHCP消息进行认证（直到客户端发送下一次Solicit消息）。

21.4.4. 延迟认证协议的客户端注意事项

客户端通过在Solicit消息中包含认证选项，声明其使用DHCP认证的意图。服务器根据客户端的DUID选择一个密钥，并在会话中使用该密钥对所有DHCP消息进行认证。

21.4.4.1. 发送Solicit消息

当客户端希望使用认证时，发送Solicit消息时在认证选项中包含所需的协议、算法和RDM，但不包含重放检测或认证信息。

21.4.4.2. 接收广告（Advertise）消息

客户端验证任何包含认证选项且采用延迟认证协议的广告消息，使用第21.4.2节描述的验证方法。

如果没有广告消息包含认证信息或验证未通过，客户端的行为由本地策略决定。根据策略，客户端可以选择响应未经过认证的广告消息。

设置本地策略以接受未认证消息应谨慎。接受未认证的广告可能使客户端易受伪造和其他攻击。如果未明确通知用户客户端已接受未认证的广告，用户可能误以为客户端已收到经过认证的地址，且不受DHCP未认证消息攻击的影响。

客户端必须支持配置为丢弃未认证消息，并且在配置了认证密钥或其他认证信息的情况下，默认应配置为丢弃未认证消息。客户端也可以区分未认证的广告和未通过验证的广告，例如，接受前者，丢弃后者。如果接受未认证的消息，客户端应通知用户并记录事件。

21.4.4.3. 发送请求（Request）、确认（Confirm）、续租（Renew）、重绑定（Rebind）、拒绝（Decline）或释放（Release）消息

如果客户端通过之前的广告消息验证成功，则在后续的请求、确认、续租、重绑定或释放消息中必须生成认证信息，方法如第21.4节所述。发送时必须使用与服务器生成认证信息相同的密钥。

21.4.4.4. 发送信息请求（Information-request）消息

如果服务器在之前的消息交换中为客户端选择了密钥（见第21.4.5.1节），则客户端在整个会话中必须使用相同的密钥生成认证信息。

21.4.4.5. 接收应答（Reply）消息

如果客户端验证通过了其接受的广告，则必须验证服务器的应答消息。若应答消息未通过验证，应丢弃该消息并可记录验证失败。验证失败后，客户端应重新启动DHCP配置流程，发送Solicit消息。

如果客户端接受了未包含认证信息或未通过验证的广告消息，则可以接受来自服务器的未认证应答消息。

21.4.4.6. 接收重新配置（Reconfigure）消息

若消息未通过验证，应丢弃该消息并可记录验证失败。

21.4.5. 服务器对延迟认证协议的考虑

在收到包含认证选项的Solicit消息后，服务器根据客户端的DUID和配置的密钥选择策略，为客户端选择一个密钥。在广告（Advertise）消息中标识所选密钥，并用该密钥验证后续的客户端-服务器消息。

21.4.5.1. 接收Solicit消息和发送广告消息

服务器为客户端选择密钥，并在返回的广告消息中包含认证信息（见第21.4节）。必须记录所选密钥的标识符，并在后续与该客户端的消息中使用相同的密钥进行验证。

21.4.5.2. 接收请求（Request）、确认（Confirm）、续租（Renew）、重绑定（Rebind）或释放（Release）消息，以及发送应答（Reply）消息

服务器使用消息中标识的密钥验证消息（见第21.4.2节）。若验证未通过或无法识别“密钥ID”字段中的密钥，必须丢弃该消息并可选择记录验证失败。

验证通过后，服务器根据第18.2节的描述响应特定消息。必须使用在收到的消息中识别的密钥生成认证信息（见第21.4节）。

21.5. 重新配置密钥认证协议

重新配置密钥认证协议旨在防止恶意DHCP服务器发送的重新配置（Reconfigure）消息导致客户端配置错误。在此协议中，DHCP服务器在初始交换中向客户端发送Reconfigure密钥。客户端记录该密钥，用于验证后续来自该服务器的Reconfigure消息。服务器在后续的Reconfigure消息中包含由Reconfigure密钥计算的HMAC。

服务器发出的Reconfigure密钥和后续Reconfigure消息中的HMAC都作为认证信息，封装在认证选项中。认证信息的格式在下节定义。

仅在客户端和服务器未使用其他认证协议且已协商使用Reconfigure消息的情况下，才使用（由服务器发起的）Reconfigure密钥协议。

21.5.1. 重新配置密钥认证协议中认证选项的使用

在Reconfigure密钥认证协议中，认证选项中的字段设置如下：

- protocol：3
- algorithm：1
- RDM：0

认证信息的格式如下：

```
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     类型      |                 值（128位）                     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- 类型：值字段中的数据类型，携带在此选项中：
  - 1：Reconfigure密钥值（用于应答消息）
  - 2：消息的HMAC-MD5摘要（用于Reconfigure消息）
- 值：由字段定义的数据。

21.5.2. 服务器对重新配置密钥协议的考虑

服务器在请求/应答、Solicit/应答或信息请求/应答消息交换中，为客户端选择密钥。记录该密钥，并在应答消息的认证选项中传输。后续所有消息都应使用该密钥进行验证。

重配置密钥（Reconfigure Key）长度为128位，必须是一个具有密码学强度的随机数或伪随机数，不能被轻易预测。

Droms 等人               标准轨道                    [第69页]

RFC 3315                     IPv6的DHCP                     2003年7月

为了对重配置（Reconfigure）消息提供认证，服务器会根据所选择的RDM（重放检测值）选择一个值，并使用该重配置密钥对重配置消息进行HMAC-MD5计算，以实现对客户端的认证。服务器会对整个DHCP重配置消息（包括认证选项）进行HMAC-MD5计算，在计算时，认证选项中的HMAC-MD5字段被置零。然后，服务器将计算得到的HMAC-MD5值包含在认证信息字段中，作为认证选项的一部分，随重配置消息一同发送给客户端。

21.5.3 客户端对重配置密钥协议的注意事项

客户端会在收到的初始应答消息中，从服务器获取重配置密钥。客户端会记录该密钥，用于后续重配置消息的认证。

为了验证重配置消息的真实性，客户端会用从服务器接收到的重配置密钥，对DHCP重配置消息进行HMAC-MD5计算。如果计算得到的HMAC-MD5值与认证选项中的值相匹配，客户端就会接受该重配置消息。

22. DHCP选项

选项用于在DHCP消息中携带额外的信息和参数。每个选项都遵循一个共同的基本格式，如第22.1节所述。所有选项中的数值都以网络字节序（大端序）表示。

本文描述了作为基础DHCP规范一部分定义的DHCP选项。未来可能会在其他文档中定义更多选项。

除非另有说明，每个选项只能出现在DHCP消息的选项区，并且每个选项只能出现一次。如果某个选项多次出现，则每个实例被视为独立的，选项的数据区不得拼接或合并。

---

Droms 等人               标准轨道                    [第70页]

RFC 3315                     IPv6的DHCP                     2003年7月

22.1 DHCP选项的格式

DHCP选项的格式如下：

```
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |        选项码（option-code）     |        选项长度（option-len）  |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                          选项数据（option-data）               |
 |                      （长度为option-len字节）                |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- 选项码（option-code）：无符号整数，标识该选项的具体类型。
- 选项长度（option-len）：无符号整数，表示选项数据的长度（以字节为单位）。
- 选项数据（option-data）：具体的数据内容，其格式依赖于该选项的定义。

DHCPv6的选项通过封装进行作用域划分。一些选项通常适用于客户端，某些则特定于某个IA（身份关联），还有一些仅针对IA中的地址。这两类特殊情况将在第22.4节和第22.6节中讨论。

22.2 客户端标识符（Client Identifier）选项

该选项用于携带DUID（见第9节），以标识客户端与服务器之间的关系。其格式如下：

```
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |     OPTION_CLIENTID（1）        |        选项长度（option-len）   |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                                                               |
 .                              DUID                               .
 .                        （可变长度）                            .
 .                                                               .
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- 选项码（option-code）：值为1，代表客户端标识符。
- 选项长度（option-len）：DUID的长度（字节数）。
- DUID：客户端的唯一标识符。

22.3 服务器标识符（Server Identifier）选项

该选项用于携带DUID（见第9节），以标识服务器。格式如下：

```
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |     OPTION_SERVERID（2）          |        选项长度（option-len）  |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                                                               |
 .                              DUID                               .
 .                        （可变长度）                            .
 .                                                               .
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- 选项码（option-code）：值为2，代表服务器标识符。
- 选项长度（option-len）：DUID的长度。
- DUID：服务器的唯一标识符。

22.4 非临时地址的身份关联（IA_NA）选项

该选项携带一个IA_NA（非临时地址的身份关联），包括相关参数和非临时地址。IA_NA中出现的地址不是临时地址（详见第22.5节）。

格式如下：

```
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |        OPTION_IA_NA（3）            |        选项长度（option-len）  |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                        IAID（4字节）                          |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                              T1                               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                              T2                               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                                                               |
 .                         IA_NA选项                                .
 .                                                               .
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- 选项码（option-code）：值为3，代表IA_NA。
- 选项长度（option-len）：12字节加上IA_NA选项的其他内容长度。
- IAID：该IA的唯一标识符，必须在该客户端所有的IA_NA中唯一。
- T1：客户端联系原始地址分配服务器以延长地址有效期的时间（秒为单位）。
- T2：客户端联系任何服务器以延长地址有效期的时间（秒为单位）。
- IA_NA-options：与该IA_NA相关的其他选项。

注意，IA_NA本身没有明确的“生命周期”或“租约长度”。当所有地址的有效期到期后，IA_NA即视为已过期。T1和T2的设置允许服务器控制客户端何时重新联系以延长地址的有效期，即使服务器短暂不可用。建议的T1和T2值为地址的最短首选寿命的0.5倍和0.8倍，若最短寿命为0xffffffff（无限），则T1和T2也应为0xffffffff。若希望由客户端自行决定续约时间，可将T1和T2设为0。

如果服务器收到的IA_NA中T1大于T2，且两者都大于0，服务器会忽略这两个无效值，将其视为T1和T2都为0进行处理。

客户端若收到T1大于T2的IA_NA，且两者都大于0，会丢弃该IA_NA选项，按未包含该无效IA_NA的方式处理消息。

设置T1或T2为0xffffffff（无限）时需谨慎。客户端不会尝试延长T1设为0xffffffff的地址的有效期，也不会用重绑定（Rebind）消息去寻找其他服务器以延长T2设为0xffffffff的地址的有效期。

22.5 临时地址的身份关联（IA_TA）选项

该选项携带一个IA_TA（临时地址的身份关联），包括参数和临时地址。所有在此选项中的地址都作为临时地址使用（详见RFC 3041）。

格式如下：

```
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |        OPTION_IA_TA（4）            |        选项长度（option-len）  |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                        IAID（4字节）                          |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                                                               |
 .                         IA_TA选项                                .
 .                                                               .
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

- 选项码（option-code）：值为4，代表IA_TA。
- 选项长度（option-len）：4字节加上IA_TA选项的其他内容长度。
- IAID：该IA_TA的唯一标识符，必须在该客户端所有的IA_TA中唯一。
- IA_TA-options：与该IA_TA相关的其他选项。

每个IA_TA携带一组临时地址，即最多一个由每个前缀分配给客户端的地址。

IA_TA只能出现在DHCP消息的选项区内，消息中可以包含多个IA_TA。

与该IA_TA相关的操作状态在IA_TA-options中的状态码（Status Code）选项中指示。

注意，IA本身没有明确的“生命周期”或“租约长度”。所有地址的有效期到期后，IA_TA即视为已过期。

IA_TA选项不包含T1和T2值。客户端可以在Renew或Rebind消息中通过包含新的IA_TA选项请求延长临时地址的有效期。例如，客户端可以请求延长临时地址的有效期，以保持TCP连接的持续。

客户端通过向服务器发送带有新IAID的IA_TA选项获取新临时地址。请求新地址的操作等同于RFC 3041中描述的生成新临时地址。服务器会生成新地址并返回。客户端应在旧地址到期前请求新地址。

服务器必须对同一IA（由相同的IAID标识）返回相同的临时地址集，只要这些地址仍然有效。地址到期后，IAID可以被重用，用于标识新的IA_TA。

---

（以下内容为第22.6节及后续内容，因篇幅较长，此处省略，若需要全文翻译请告知。）

如果与之相关的 IA 的临时地址的生存时间尚未到期，此选项可能会出现在确认消息中。

每个响应包含快速确认（Rapid Commit）选项的请求（Solicit）的服务器，在回复消息中会将分配的地址提交给客户端，并且不会收到任何确认，确认客户端已收到该回复消息。因此，如果多个服务器响应包含快速确认选项，可能会导致一些服务器提交的地址实际上并未被客户端使用。

未被使用的地址问题可以通过设计DHCP服务来最小化，例如，只允许一个服务器响应Solicit请求，或者为已分配的地址设置较短的生存时间。

22.15 用户类别选项

用户类别（User Class）选项由客户端使用，用于标识其代表的用户类型或类别。

用户类别选项的格式为：

    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |       OPTION_USER_CLASS       |          option-len           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   .                                                               .
   .                          用户类别数据                          .
   .                                                               .
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

option-code：OPTION_USER_CLASS（值为15）

option-len：用户类别数据字段的长度

用户类别数据：由客户端携带的用户类别信息。

该选项中的数据区域包含一个或多个不透明字段（opaque fields），每个字段描述客户端所属的用户类别或类别集合。服务器根据这些类别信息为客户端选择配置参数。例如，用户类别选项可以用来区分会计部门的所有客户端与市场部门的客户端，给不同的用户类别配置不同的打印机。客户端必须能够配置和识别在此选项中携带的用户类别信息。

用户类别选项的数据区域必须包含一个或多个用户类别数据实例。每个实例的格式如下：

    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+-+-+-+-+-+
    |        user-class-len         |          opaque-data          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+-+-+-+-+-+

user-class-len：两个字节，表示不透明用户类别数据的长度（网络字节序）

服务器根据配置解释此选项中识别的类别，以选择适合该客户端的配置参数。服务器可能只解释其配置中定义的用户类别，忽略其他类别。在响应包含用户类别选项的消息时，服务器会包含一个用户类别选项，列出其成功解释的类别，以便客户端获知服务器所识别的类别。

22.16 供应商类别选项

此选项由客户端使用，用于标识其硬件制造商。数据区域中的信息由一个或多个不透明字段组成，描述硬件配置的详细信息。格式如下：

    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      OPTION_VENDOR_CLASS      |           option-len          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                       enterprise-number                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   .                                                               .
   .                       vendor-class-data                       .
   .                             . . .                             .
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

option-code：OPTION_VENDOR_CLASS（值为16）

option-len：4字节加上供应商类别数据字段的长度

enterprise-number：由IANA注册的供应商企业编号

vendor-class-data：描述客户端硬件配置的详细信息，例如操作系统版本、内存容量等。

每个vendor-class-data实例的格式如下：

    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+-+-+-+-+-+
    |       vendor-class-len        |          opaque-data          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...-+-+-+-+-+-+-+

vendor-class-len：两个字节，表示不透明供应商类别数据的长度（网络字节序）

22.17 供应商特定信息选项

此选项由客户端和服务器交换供应商特定信息。

格式如下：

    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      OPTION_VENDOR_OPTS       |           option-len          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                       enterprise-number                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   .                                                               .
   .                          option-data                          .
   .                                                               .
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

option-code：OPTION_VENDOR_OPTS（值为17）

option-len：不透明数据字段的长度（4字节加上供应商特定信息的长度）

enterprise-number：由IANA注册的供应商企业编号

option-data：由供应商定义的、长度为option-len的二进制数据对象，供客户端和服务器的供应商特定代码解释。

此选项携带的信息由供应商定义，允许利用供应商的DHCP实现中的附加功能。未收到供应商特定信息的DHCP客户端仍会配置其IPv6堆栈以确保功能正常。

封装的供应商特定选项字段必须以代码/长度/值（code/length/value）格式的序列编码，格式与DHCP选项字段相同。选项代码由供应商在企业编号中定义，不由IANA管理。每个封装的选项格式如下：

    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |          opt-code             |             option-len        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   .                                                               .
   .                          option-data                          .
   .                                                               .
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

opt-code：封装选项的代码

option-len：封装选项中option-data字段的长度（以字节为单位）

option-data：封装选项的数据区域

在一条DHCP消息中可以出现多个供应商特定信息选项。每个实例的解释依据其所属供应商的定义。

22.18 接口ID选项

中继代理（relay agent）可以发送接口ID（Interface-Id）选项，用于标识接收客户端消息的接口。如果中继代理收到带有接口ID选项的Relay-Reply消息，会将该消息通过由该选项标识的接口转发给客户端。

接口ID选项的格式如下：

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |      OPTION_INTERFACE_ID      |         option-len            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    .                                                               .
    .                         interface-id                          .
    .                                                               .
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

option-code：OPTION_INTERFACE_ID（值为18）

option-len：接口ID字段的长度

interface-id：由中继代理生成的、不透明的值，用于唯一标识中继代理的某个接口。

中继服务器必须将Relay-Forward消息中的接口ID选项复制到其响应的Relay-Reply消息中。该选项不得出现在除Relay-Forward和Relay-Reply之外的任何消息中。

中继服务器可以使用接口ID进行参数分配策略。接口ID应视为不透明值，仅基于精确匹配的策略；即，服务器不应对接口ID进行内部解析。接口ID应保持稳定，例如，重启中继代理后不应改变，否则服务器可能无法可靠地在参数策略中使用它。

22.19 重新配置消息选项

服务器在重新配置（Reconfigure）消息中包含此选项，用于指示客户端应以何种方式响应：是发送续订（Renew）消息还是信息请求（Information-request）消息。格式如下：

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |      OPTION_RECONF_MSG        |         option-len            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |    msg-type   |
    +-+-+-+-+-+-+-+-+

option-code：OPTION_RECONF_MSG（值为19）

option-len：1

msg-type：消息类型，值为5表示续订（Renew），值为11表示信息请求（Information-request）

此选项只能出现在重新配置（Reconfigure）消息中。

22.20 重新配置接受选项

客户端使用此选项向服务器声明是否愿意接受重新配置消息，服务器也用此选项告知客户端是否接受。默认情况下（未使用此选项）表示客户端不愿接受重新配置消息，服务器也不应发送。

其格式如下：

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     OPTION_RECONF_ACCEPT      |               0               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

option-code：OPTION_RECONF_ACCEPT（值为20）

option-len：0

23. 安全考虑

DHCP的安全威胁本质上是内部威胁（假设网络配置得当，企业边界网关阻止了DHCPv6端口的访问）。无论边界网关如何配置，内部和外部的潜在攻击方式是相同的。

使用预共享密钥（pre-shared keys）进行IPsec保护中继代理和服务器之间的通信，不能防止重放攻击。重放的消息可能引发拒绝服务（DOS）攻击，耗尽处理资源，但不会因配置错误或资源耗尽（如地址枯竭）而造成问题。

针对DHCP客户端的特定攻击之一是建立恶意服务器，试图向客户端提供错误的配置信息。攻击动机可能包括中间人攻击（man-in-the-middle），使客户端与恶意服务器通信而非合法服务器，例如伪装DNS或NTP服务器。恶意服务器还可能通过配置错误导致客户端网络通信全部失败，从而发起拒绝服务攻击。

此外，客户端还可能受到误配置或意外配置的DHCP服务器的威胁，这些服务器可能错误响应请求，提供不正确的配置信息。

客户端还可能受到来自恶意服务器的Reconfigure消息攻击，导致其获取错误的配置信息。虽然客户端通过中继代理发送响应（续订或信息请求），响应只会被中继的服务器转发，但恶意服务器仍可能向客户端发送Reconfigure消息，随后发送伪造的回复（Reply）消息，客户端会接受，从而被攻击。即使恶意服务器不在客户端和合法服务器之间的路径上，只要能向客户端发送Reconfigure消息，也可能成功发动攻击。使用难以预测且加密的事务ID可以降低此类攻击成功的概率。

针对DHCP服务器的威胁则是伪装成合法客户端的无效客户端。这可能出于盗用服务或规避审计等不法目的。

以下是对上述英文内容的中文流畅翻译：

```
   客户端和服务器都面临的共同威胁是“资源拒绝服务” (DoS) 攻击。这类攻击通常涉及耗尽可用的地址资源，或耗尽CPU或网络带宽，只要存在共享资源，这些威胁就会存在。

   在中继代理添加额外选项到中继转发消息的情况下，代理与服务器之间交换的消息可能被用来发动“中间人”攻击或拒绝服务攻击。

   该威胁模型不考虑DHCP消息内容的隐私性。因为DHCP并不用于交换必须对其他网络节点保密的认证或配置信息。

Droms 等人               标准轨迹                     [第90页]

RFC 3315                     IPv6的DHCP                     2003年7月

   DHCP认证提供了对DHCP客户端和服务器身份的验证，以及对DHCP客户端与服务器之间传递消息的完整性保障。DHCP认证不提供任何关于DHCP消息内容的隐私保护。

   第21.4节描述的延迟认证协议使用客户端和服务器之间共享的密钥。共享密钥中的“DHCP域”允许识别管理域，以便客户端在漫游不同管理域时选择合适的密钥。然而，延迟认证协议未定义密钥共享机制，因此客户端可能需要为每个遇到的管理域使用不同的密钥。共享密钥的使用可能不具备良好的扩展性，也不能抵抗密钥被破坏后的否认。这一协议主要解决在域内可行的出带外交换共享密钥的问题。

   由于通过“重新配置”消息存在攻击机会，DHCP客户端必须丢弃任何未包含认证信息或未通过认证验证的重新配置消息。

   第21.5节描述的“重新配置密钥”协议可以防止恶意DHCP服务器利用重新配置消息对客户端发动拒绝服务或中间人攻击。该协议可能被拦截DHCP服务器向客户端发送密钥的初始消息的攻击者破坏。

   服务器与中继代理之间，以及中继代理之间的通信可以通过第21.1节所述的IPSec进行安全保护。在这种情况下，手动配置和静态密钥的安装是可以接受的，因为中继代理和服务器属于同一管理域，并且中继代理还需要其他特定配置（例如DHCP服务器地址配置）以及IPSec配置。

24. IANA注意事项

   本文定义了与DHCPv6及其选项相关的几个新名称空间：

      - 消息类型

      - 状态码

      - DUID（唯一识别符）

   IANA已为这些名称空间中的每一项建立了值的注册表，具体内容在本节余下部分描述。这些名称空间由IANA管理，且将与为DHCPv4定义的名称空间分开管理。

   新的多播地址、消息类型、状态码和DUID类型通过标准行动（Standards Action）[11]分配。

   新的DHCP选项代码在相关选项的规范（作为Internet Draft发布）经过专家评审后，暂时分配。最终的DHCP选项代码分配由标准行动（RFC 2434 [11]）完成。

   本文还提到第21节中的三个名称空间，涉及认证选项（第22.11节）。这些名称空间由RFC 3118 [4]中定义的DHCPv4认证机制管理。

   目前由IANA注册的认证名称空间将同时适用于DHCPv6和DHCPv4。未来，定义新的协议、算法和RDM机制的规范将明确说明这些机制是用于DHCPv4、DHCPv6还是两者。

24.1. 多播地址

   第5.1节定义了以下由IANA分配用于DHCPv6的多播地址：

      所有DHCP中继代理和服务器地址：FF02::1:2

      所有DHCP服务器地址：FF05::1:3

24.2. DHCP消息类型

   IANA已记录以下消息类型（定义在第5.3节）。IANA将维护DHCP消息类型的注册表。

      SOLICIT（请求）               1

      ADVERTISE（广告）             2

      REQUEST（请求）               3

      CONFIRM（确认）               4

      RENEW（续租）                 5

      REBIND（重新绑定）            6

      REPLY（应答）                 7

      RELEASE（释放）               8

      DECLINE（拒绝）               9

      RECONFIGURE（重新配置）      10

      INFORMATION-REQUEST（信息请求） 11

      RELAY-FORW（中继转发）        12

      RELAY-REPL（中继应答）        13

24.3. DHCP选项

   IANA已记录以下选项代码（定义在第22节）。IANA将维护DHCP选项代码的注册表。

      OPTION_CLIENTID（客户端ID）       1

      OPTION_SERVERID（服务器ID）       2

      OPTION_IA_NA（非临时地址）        3

      OPTION_IA_TA（临时地址）          4

      OPTION_IAADDR（地址）             5

      OPTION_ORO（请求选项列表）        6

      OPTION_PREFERENCE（偏好）          7

      OPTION_ELAPSED_TIME（经过时间）   8

      OPTION_RELAY_MSG（中继消息）      9

      OPTION_AUTH（认证）               11

      OPTION_UNICAST（单播）            12

      OPTION_STATUS_CODE（状态码）       13

      OPTION_RAPID_COMMIT（快速提交）   14

      OPTION_USER_CLASS（用户类）       15

      OPTION_VENDOR_CLASS（供应商类）   16

      OPTION_VENDOR_OPTS（供应商选项） 17

      OPTION_INTERFACE_ID（接口ID）     18

      OPTION_RECONF_MSG（重新配置消息） 19

      OPTION_RECONF_ACCEPT（接受重新配置） 20

24.4. 状态码

   IANA已记录下表中定义的状态码。未来将管理更多状态码的定义。

   名称             代码  描述
   ----------       ----  ---------------------------
   Success          0     操作成功。
   UnspecFail       1     失败，原因未明确说明；此状态码由客户端或服务器发出，表示未在本文档中明确列出的失败。
   NoAddrsAvail     2     服务器没有可用的地址分配给IA。
   NoBinding        3     客户端绑定记录不可用。
   NotOnLink        4     地址的前缀不适用于客户端所连接的链路。
   UseMulticast     5     由服务器发给客户端，强制客户端通过“All_DHCP_Relay_Agents_and_Servers”地址向服务器发送消息。

24.5. DUID（唯一识别符）

   IANA已记录以下DUID类型（定义在第9.1节）。未来将管理更多DUID类型的定义。

      DUID-LLT（链路层地址+时间）  1

      DUID-EN（企业编号）             2

      DUID-LL（链路层地址）           3

25. 致谢

   感谢DHC工作组及IETF成员对本规范的时间和贡献。特别感谢（按字母顺序）Bernard Aboba、Bill Arbaugh、Thirumalesh Bhat、Steve Bellovin、A. K. Vijayabhaskar、Brian Carpenter、Matt Crawford、Francis Dupont、Richard Hussong、Kim Kinnear、Fredrik Lindholm、Tony Lindstrom、Josh Littlefield、Gerald Maguire、Jack McCann、Shin Miyakawa、Thomas Narten、Erik Nordmark、Jarno Rajahalme、Yakov Rekhter、Mark Stapp、Matt Thomas、Sue Thomson、Tatuya Jinmei 和 Phil Wells的持续意见和审查。

   也感谢Steve Deering和Bob Hinden，他们一直抽时间讨论IPv6规范中较复杂的部分。

   另外，感谢Steve Deering在伦敦举行的第51届IETF会议上指出，DHCPv6规范具有所有互联网草案中最高的修订编号。

26. 参考文献

26.1. 标准性参考文献

   [1]  Bradner, S.，“用于RFC中的关键词以指示需求级别”，BCP 14，RFC 2119，1997年3月。

   [2]  Crawford, M.，“以太网网络上的IPv6数据包传输”，RFC 2464，1998年12月。

   [3]  Deering, S. 和 R. Hinden，“互联网协议第6版（IPv6）规范”，RFC 2460，1998年12月。

   [4]  Droms, R.（主编）和 W. Arbaugh（主编），“DHCP消息的认证”，RFC 3118，2001年6月。

   [5]  Hinden, R. 和 S. Deering，“IP第6版地址架构”，RFC 2373，1998年7月。

   [6]  IANA。私有企业编号。http://www.iana.org/assignments/enterprise-numbers.html。

   [7]  Kent, S. 和 R. Atkinson，“互联网协议的安全架构”，RFC 2401，1998年11月。

   [8]  Krawczyk, H.、Bellare, M. 和 R. Canetti，“HMAC：消息认证的密钥哈希”，RFC 2104，1997年2月。

   [9]  Mills, D.，“网络时间协议（第3版）规范与实现”，RFC 1305，1992年3月。

   [10] Mockapetris, P.，“域名——实现与规范”，RFC 1035，1987年11月。

   [11] Narten, T. 和 H. Alvestrand，“撰写RFC中的IANA注意事项指南”，BCP 26，RFC 2434，1998年10月。

   [12] Narten, T. 和 R. Draves，“IPv6无状态地址自动配置的隐私扩展”，RFC 3041，2001年1月。

   [13] Narten, T.、Nordmark, E. 和 W. Simpson，“IP第6版（IPv6）的邻居发现”，RFC 2461，1998年12月。

   [14] Plummer, D.C.，“以太网地址解析协议：将网络协议地址转换为48位以太网地址以在以太网硬件上传输”，STD 37，RFC 826，1982年11月。

   [15] Postel, J.，“用户数据报协议”，STD 6，RFC 768，1980年8月。

   [16] Rivest, R.，“MD5消息摘要算法”，RFC 1321，1992年4月。

   [17] Thomson, S. 和 T. Narten，“IPv6无状态地址自动配置”，RFC 2462，1998年12月。

26.2. 说明性参考文献

   [18] Alexander, S. 和 R. Droms，“DHCP选项和BOOTP供应商扩展”，RFC 2132，1997年3月。

   [19] Droms, R.，“动态主机配置协议”，RFC 2131，1997年3月。

   [20] R. Droms（主编），“DHCPv6的DNS配置选项”，2002年4月。工作草案。

   [21] A. K. Vijayabhaskar，“DHCPv6的时间配置选项”，2002年5月。工作草案。

   [22] Vixie, P.（主编）、Thomson, S.、Rekhter, Y. 和 J. Bound，“域名系统（DNS）中的动态更新（DNS UPDATE）”，RFC 2136，1997年4月。

附录A. 消息类型中选项的出现情况

   下表用“*”标示每种DHCP消息类型中允许出现的选项：

           客户端  服务器  IA_NA  选项偏好  时间  中继  认证  服务器
             ID     ID    IA_TA  请求             消息     单播
   请求   *             *      *           *           *
   广告   *      *      *            *                 *
   请求   *      *      *      *           *           *
   确认   *             *      *           *           *
   续租   *      *      *      *           *           *
   重新绑定 *             *      *           *           *
   拒绝   *      *      *      *           *           *
   释放   *      *      *      *           *           *
   应答   *      *      *            *                 *     *
   重新配置 *      *             *                       *
   信息请求 *  (见注)        *           *           *
   中继转发                                          *     *
   中继应答                                          *     *

   注：
      仅在响应重新配置的“信息请求”消息中出现（见第19.4.3节）。

            状态  快速  用户  供应商  供应商  接口  重新  重新
             码  提交  类    类    规范    ID    消息  配置
   请求           *     *     *      *                    *
   广告    *            *     *      *                    *
   请求                 *     *      *                    *
   确认                 *     *      *
   续租                   *     *      *                    *
   重新绑定                  *     *      *                    *
   拒绝                 *     *      *
   释放                 *     *      *
   应答    *      *     *     *      *                    *
   重新配置                                            *
   信息请求                 *     *      *                    *
   中继转发                 *     *      *      *
   中继应答                 *     *      *      *

附录B. 选项在DHCP选项字段中的出现情况

   下表用“*”标示选项可以出现在其他选项的字段中的位置：

                选项  IA_NA/ IAADDR  中继  中继
                字段   IA_TA        转发  回复
   客户端ID      *
   服务器ID      *
   IA_NA/IA_TA    *
   IAADDR                 *
   ORO            *
   偏好          *
   经过时间      *
   中继消息                        *      *
   认证          *
   服务器单播    *
   状态码        *       *       *
   快速提交      *
   用户类        *
   供应商类      *
   供应商信息    *
   接口ID                         *      *
   重新配置消息  *
   重新配置接受  *

   注：“中继转发”/“中继应答”选项出现在消息的选项字段中，但仅能出现在这些消息中。

主席联系方式

   本工作组可通过现任主席联系：

   Ralph Droms
   思科系统公司
   马萨诸塞州 1414 号
   Boxborough, MA 01719

   电话：(978) 936-1674
   电子邮箱：rdroms@cisco.com

作者联系方式

   Jim Bound
   惠普公司
   ZK3-3/W20
   110 Spit Brook Road
   纳舒厄，NH 03062-2698
   美国

   电话：+1 603 884 0062
   电子邮箱：Jim.Bound@hp.com

   Bernie Volz
   116 Hawkins Pond Road
   Center Harbor, NH 03226-3103
   美国

   电话：+1-508-259-3734
   电子邮箱：volz@metrocast.net

   Ted Lemon
   Nominum公司
   950 Charter Street
   红木城，加利福尼亚 94043
   美国

   电子邮箱：Ted.Lemon@nominum.com

   Charles E. Perkins
   通信系统实验室
   诺基亚研究中心
   313 Fairchild Drive
   山景城，加州 94043
   美国

   电话：+1-650 625-2986
   电子邮箱：charles.perkins@nokia.com
```

迈克·卡尼  
太阳微系统公司（Sun Microsystems, Inc）  
网络圈17号  
门洛帕克，加利福尼亚州 94025  
美国  

电话：+1-650-786-4171  
电子邮件：michael.carney@sun.com  

Droms 等人               标准追踪                   [第100页]  

RFC 3315                     IPv6的DHCP                     2003年7月  

完整版权声明  

版权所有（C）互联网协会（2003年）。保留所有权利。  

本文件及其翻译版本可以被复制并提供给他人，也可以准备、复制、出版和分发其衍生作品，无论是评论、说明还是协助其实现，全部或部分，均不受任何限制，前提是所有此类副本和衍生作品都必须包含上述版权声明和本段内容。然而，本文件本身不得以任何方式修改，例如删除版权声明或提及互联网协会或其他互联网组织的内容，除非出于制定互联网标准的目的，在此情况下必须遵循互联网标准流程中的版权规定，或出于将其翻译成非英语语言的需要。

上述授予的有限权限是永久性的，不会被互联网协会或其继任者或受让人撤销。  

本文件及其中包含的信息是“按原样”提供的，互联网协会和互联网工程任务组（IETF）对其不作任何明示或暗示的保证，包括但不限于使用本文件中的信息不会侵犯任何权利或对适销性或特定用途的适用性作出任何保证。